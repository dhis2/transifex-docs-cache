---
edit_url: "https://github.com/dhis2/dhis2-android-docs/blob/main/content/capture-app/visual-configurations.md"
revision_date: '2024-05-27'
tags:
- 用
---

# 外观配置 { #capture_app_visual }

##  Local Analytics (Improved 3.0) { #local-analytics-improved-30 } 

### Data Visualizations { #capture_app_visual_data_visualizations }

The DHIS2 Android App can now render analytics that have been created in the Data Visualizer app in DHIS2. Analytics to be displayed require to be configured using the Android Settings WebApp where administrators will be able to decide the charts and tables to be displayed for end users.

To configure analytics open the Android Settings WebApp on your DHIS2 server and follow the steps below:

   1. Select Home, Program or Data set from the Analytics menu
   2. Select the visualization type "Data visualization"
   3. Click on the  "Add Visualization" button
   4. Search by typing the name of the visualization and select it by clicking on it
   5. Add an alternative title, otherwise, the app will display the name of the visualization

![](resources/images/capture-app-image162.png){ width=25%}
![](resources/images/capture-app-image164.png){ width=25%}

Analytics are created and configured using the web tools, however, the data aggregation happens offline using only data stored in the device.  

![](resources/images/capture-app-image165.png){ width=25%}
![](resources/images/capture-app-image166.png){ width=25%}
![](resources/images/capture-app-image167.png){ width=25%}

#### Analytics Types and Filters { #analytics-types-and-filters } 

The analytics supported in the Android App are:

   - 数据透视表
   - Column Chart
   - Line Chart
   - Pie Chart
   - Radar chart
   - Single Value

For each visualization object, the user will be able to filter in the app by:

   * Relative Period: Daily, Weekly, Monthly, Yearly, This Quarter, Last Quarter, Last 4 Quarters and Quarter this year.
   * OrgUnit: Select "All" to display all the org units available to the user or "Selection" to specify one or multiple org units.

![](resources/images/capture-app-image180.png){ width=25%}
![](resources/images/capture-app-image168.png){ width=25%}
![](resources/images/capture-app-image169.png){ width=25%}

A reset button will be displayed if a filter is applied. Select Reset to display the default visualization.

![](resources/images/capture-app-image170.png){ width=25%}

Users can also change The anlytics type between chart, table or single value.

![](resources/images/capture-app-image166.png){ width=25%}
![](resources/images/capture-app-image171.png){ width=25%}

#### Legends { #capture_app_visual_data_visualizations_legends }

Legends are displayed in pivot tables by enabling the feature "Use legends for chart color" in the Data Visualizer App.

The Android app will color the cells using either the pre-defined legend per data item or a single legend for the entire pivot table, depending on the settings in Web.

The style for legends in tables has a new design which ensures good contrast and visibility independently from the selected colour for the legend.

![](resources/images/capture-app-image183.png){ width=25%}

#### Groups { #capture_app_visual_data_visualizations_groups }

All these visualizations can be organised and displayed in groups. Groups are also configured using the Android Settings Webapp following the steps below:

   1. Open the Android Settings App
   2. Click to Add a new visualization in the Analytics Menu (Home, Program or Data set)
   3. Select a visualization
   4. Mark the "Use a group visualization" checkbox
   5. Create or select a created group
   6. Save the visualization

You can name your different groups, they will be displayed as a button in the top bar of the analytics screen.

![](resources/images/capture-app-image173.png){ width=25%}

#### Limitations { #capture_app_visual_data_visualizations_limitations }

Android uses tables and charts created using the web Visualizer app, however only the configuration parameters of the object are used by the Android App: data elements, indicators, chart type, title, periods...; all the aggregations are calculated offline by the android application. The results will be based on the data stored in the device at that exact moment.

Since the aggregations and calculations displayed are calculated in the device, the implementation of analytics is limited compared to web. In summary the compatible and suported objects and features are:

   - Well formed analytic objects (series, categories, filters)
   - Use of relative periods (Fix periods are not supported)
   - User has view access
   - Limitations for Pivot Tables
      - Number of header lines: 1 or 2 (from 2.3)
      - Number of header columns: 2
   - Limitations for Charts
      - Number of Series: No limit (but remember you are rendering in a small screen)
      - Number of Categories (doesn’t apply for pie chart): No limit

There are many more restrictions which apply to Android Analytics regarding the many configuration options available in the Web Visualizer as well as the supported functions and calculations related to indicators and program indicators. [This table](https://docs.google.com/spreadsheets/d/1127cz7M0K4fux5CU0V54V2Z77NZWCr0BTrZ6jcCec4Q) summarises all supported features.

> **Note**
>
> The following aggreagation functions are supported now in local analytics: LAST, FIRST, AVERAGE_SUM_ORG_UNIT, LAST_AVERAGE_ORG_UNIT, LAST_IN_PERIOD, LAST_IN_PERIOD_AVERAGE_ORG_UNIT, FIRST_AVERAGE_ORG_UNIT
> 
> 

### Event Visualizations (New 3.0) { #capture_app_visual_event_visualizations }

The DHIS2 Android App can now render analytics that have been created in the line listing app.Analytics to be displayed require to be configured using the Android Settings WebApp where administrators will be able to decide the tables to be displayed for end users.

To configure analytics open the Android Settings WebApp on your DHIS2 server and follow the steps below:

   1. Select Home or Program from the Analytics menu
   2. Select the visualization type "Event visualization"
   3. Click on the  "Add Visualization" button
   4. Search by typing the name of the visualization and select it by clicking on it
   5. Add an alternative title, otherwise, the app will display the name of the visualization 

In the app, the users will be able to search by period, Org. unit, or any of the columns added in the Line List.

![](resources/images/capture-app-image265.png){ width=25%}
![](resources/images/capture-app-image266.png){ width=25%}
![](resources/images/capture-app-image267.png){ width=25%}

#### Limitations { #capture_app_visual_event_visualizations_limitations }

To add an event visualization in the Android Settings WebApp, the table must:

- be created in the Line Listing app
- use relative periods
- not exceed 15 columns

## Interface language { #interface-language } 

The language of the interface will corespond to the language set in the DHIS2 user configuration. If the language is not available in the app, it will pick the language of the device. 

If none of the language configurations are available, the app will default to English.

Translations set up in DHIS2 for metadata will also be shown according to the language in the user configuration.

![](resources/images/capture-app-image182.png){ width=25%}


## 个性化您的图标 { #capture_app_visual_icon }

您可以使用DHIS 2 App Widget在墙纸中设置图标。该图标将是服务器中配置的标志。

![](resources/images/capture-app-image32.jpg){ width=25%}

> **注意**
>
>如何添加小部件：
>
>-长按墙纸
>-选择小部件
>-查找DHIS 2小部件
>-选择
>
>它将为您的应用添加快捷方式。

## 个性化应用程序的颜色 { #capture_app_visual_colour }

您可以通过在我们的服务器中进行配置来设置应用的通用主题：

![](resources/images/capture-app-image28.png){width=80% }

> **Note**
>
> How to set the server theme and flag:
>
> Go to **System Settings > Appearance > Style**
>
> - Select your style
>   - Green,
>   - India (Orange),
>   - Light Blue,
>   - Myanmar (red),
>   - Vietnam
> - Select your flag
>
>![](resources/images/capture-app-image23.png){ width=25%}

## Icon library for metadata (Improved 3.0) { #capture_app_visual_icon_lib }

There are currently 134 icons available that you can choose from. You can search by name in the icon picker widget. Icons are available in positive, negative and outlined shapes.

图标可以与程序，阶段，数据元素和选项集的选项相关联。这可以通过维护应用程序进行配置。

> **注意**
>
>从DHIS 2 2.30起可以使用此功能

![](resources/images/capture-app-image13.png){ .center width=80% }

In the DHIS2 Android App icons render in the home screen to illustrate all the programs available to a user, or while adding an stage. For data elements and options, the icons render for single event programs, when a section contains a single or more DEs, showing the option set as a matrix or sequence of images.

The icon based data entry can now be used in enrollment forms. When an enrollment section contains one or more Tracked Entity Attributes with option sets and icons assigned, the app is able to display them as a matrix or sequence based on the section rendering type. In previous sections of the App this feature was only available for Data elements.

![](resources/images/capture-app-image19.png){ width=25%}
![](resources/images/capture-app-image26.png){ width=25%}

From 3.0 it is possible to display custom icons in the Android App. DHIS2 (41 version) now allows uploading custom Icons to be used in addition to the built-in Icon library. This is useful for use cases not related to health or that require very specific iconography. The Android App will render the custom icons that need to be uploaded and configured using the Maintenance DHIS2 Web App.

To upload and assign the custome icons through the instance, the admin must:

1. Open the object (program, data element, option, etc.)
2. Click on the "Select icon"
3. Click on the "Choose file to upload"
4. Add a key and description
5. 保存

![](resources/images/capture-app-image290.png){ width=25%}

> **注意**
>
>图标最初只会在新的Android应用中呈现。新的基于Web的Capture App将在不久的将来将其合并。

We plan to expand the collection of icons on each future version of DHIS2 for that we need your help: we are seeking ideas for new icons - please submit yours using [this form](https://www.google.com/url?q=https://drive.google.com/open?id%3D1LmfYJQAu3KyDfkY3X6ne7qSsuTa9jXZhoQHzkDxeCdg&sa=D&ust=1557433016147000).

## 元数据的调色板 { #capture_app_visual_colour_palette }


跟踪器和事件捕获现在可以为程序，阶段，数据元素和选项集中的选项渲染颜色。维护应用程序中集成了一个颜色选择器，该颜色选择器显示为调色板，但允许选择任何颜色的选项除外。

![](resources/images/capture-app-image20.png){ .center width=80% }

在Android App中，该颜色将与带有图标（如果已选择）组合的程序和阶段显示为背景色。对于选项，它在单个事件程序的数据输入表单期间呈现为背景色。当用户选择具有指定颜色的程序时，该颜色将成为该程序域中所有屏幕的背景主题。

![](resources/images/capture-app-image19.png){ width=25%}
![](resources/images/capture-app-image2.jpg){ width=25%}

> **注意**
>
>颜色将首先在新的Android应用程序中可用，然后在以后的版本中将发布新的基于Web的Capture App。

## 程序部分的渲染类型 { #capture_app_visual_rendering_type }


![](resources/images/capture-app-image16.png){width=80% }

**Program Section**: when used in combination with icons, a Program Section with one or more data elements and associated Option Sets can render the options in sequential or matrix layout (see screenshots). If the icon is not found, the app displays the DHIS logo.

![](resources/images/capture-app-image26.png){ width=25%}
![](resources/images/capture-app-image36.png){ width=25%}

From 2.8, the app will render option set with any value type as matrix or sequential layout.

![](resources/images/capture-app-image226.png){ width=25%}
![](resources/images/capture-app-image227.png){ width=25%}

> **注意**
>
>区域的渲染类型将首先在Android应用程序中提供，然后在以后的版本中提供新的基于Web的Capture App UI。

## 日历 { #capture_app_visual_calendar }


现在可以使用两个不同的日历。左边的是第一个出现的，但是您可以通过单击左下角的日历图标来更改它。

在以下情况下可用：

1. 进行新的注册。
2. 创建一个新事件（带有和不带有注册的程序）。
3. 在注册和不注册的情况下在数据集和程序中使用周期过滤器。

![](resources/images/capture-app-image60.jpg){ width=25%}
![](resources/images/capture-app-image61.jpg){ width=25%}

> **注意**
>
>对于Android 4.4、5.1版和小型设备，“接受”选项在第二个日历视图中不可见。

## 渲染类型 { #capture_app_visual_render }

The available rendering options have been expanded to include horizontal and vertical radio buttons, checkboxes and toggles for any value type.

![](resources/images/capture-app-image111.png){ width=100%}
![](resources/images/capture-app-image224.png){ width=25%}
![](resources/images/capture-app-image225.png){ width=25%}

> **Note** 
>
> The default rendering option will automatically display a search box whenever there are more than 15 elements in the option set to ease the selection.
> 
> ![](resources/images/options_no_search.png){ width=25% } ![](resources/images/options_search.png){ width=60% }

Render types are available in event and registration forms

### QR和条形码 { #capture_app_visual_render_qr }


Data elements or attributes type text can be also configured as QR or barcodes. When a Data Element or Attribute is rendered as QR/Barcode, the app will open the device camera to read the code image. When the QR/Barcode is a TEI attribute configured as searchable, the user will be allowed to scan the code in order to search and identify the Tracked Entity Instance. This will also work for option sets.

Barcodes also allow the user to manually enter the value.

![](resources/images/capture-app-image118.png){ width=20%}
![](resources/images/capture-app-image119.png){ width=20%}
![](resources/images/capture-app-image120.png){ width=20%}
![](resources/images/capture-app-image121.png){ width=20%}


#### Export/Share { #exportshare } 

Users are now able to display a bar or QR code in an image so that it can be shared for printing, take a screenshot or show it on the screen for scanning.

Non-editable fields can still share the bar or QR code, but will prevent the user from capturing a new one.

![](resources/images/capture-app-image181.png){ width=20%}
![](resources/images/capture-app-image174.png){ width=20%}

#### GS1 Data Matrix codes { #capture_app_visual_gs1 }

If an attribute or data element rendering type is configured as QR code, the Android App will be able to read and process the string as GS1 Data Matrix codes.

Combined with the use of d2 functions in program rules, the different fields of a GS1 code can be saved into different data elements or attributes (d2:extractDataMatrixValue(key, dataMatrixText)).

![](resources/images/capture-app-image184.png){ width=20%}
![](resources/images/capture-app-image200.png){ width=20%}

### Signature (Improved 3.0) { #capture_app_visual_signature }

This feature allows users to collect handwritten signatures from the device. The signatures will be saved as an image data element in the app.

This configuration must be done in web ( available from 2.40 version) by selecting the "canvas" rendering type on an image value type.

![](resources/images/capture-app-image231.png){ width=20%}
![](resources/images/capture-app-image232.png){ width=20%}

From 3.0, signatures are allowed to be opened in full screen for better visibility.

## User Experience { #capture_app_visual_user_experience }

### Tappable areas in icons and buttons { #capture_app_visual_tappable_areas }

Some buttons or tappable labels of the Android App had small sensitive areas for the user to tap. The whole user interface was reviewed and the tappable areas has been increased. For example the "+" button to create a new stage or the "˅" icon to open TEI details or expand a section.

![](resources/images/capture-app-image208.png){ width=20%}

### Loading Banners { #capture_app_visual_loading_banners}

The Android App provides visual animations to users when they perform actions that take longer than usual to complete, such loading maps or searching, so that they know that the system is processing their request.

![](resources/images/capture-app-image228.png){ width=20%}

### Offline Buttons { #capture_app_visual_offline_buttons}

This feature enhances the functionality of the app when it is used offline, ensuring that menus are disabled when the online actions are not available.

### Long Texts Management { #capture_app_visual_longtext_management}

The Android App enables users to view long text in fields that are limited in size, such as a stage names or datasets headers.

### Legends (Improved 3.0) { #capture_app_visual_legends_descriptions}

The Android App displays the full description of the legend when tapping on the information icon once a legend is active. These feature is available only in event and registration forms.

![](resources/images/capture-app-image276.png){ width=25%}
![](resources/images/capture-app-image277.png){ width=25%}

### Input fields (Improved 3.0) { #capture_app_visual_input_fields }

The new input fields are now displayed by default in the Android app and admin users are able to opt-out to use the old forms through the Android Settings web app.

![](resources/images/capture-app-image289.png){ width=25%}

