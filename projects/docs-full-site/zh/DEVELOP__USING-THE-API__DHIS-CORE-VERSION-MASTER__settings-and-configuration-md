---
edit_url: "https://github.com/dhis2/dhis2-docs/blob/master/src/developer/web-api/settings-and-configuration.md"
revision_date: '2024-05-21'
tags:
- Develop
- DHIS核心 主版
---

# 设置和配置 { #settings-and-configuration } 

## 系统设置 { #webapi_system_settings } 

您可以通过与
*系统设置*资源。系统设置是一个简单的键值对，
其中键和值都是纯文本字符串。保存或
更新系统设置，您可以向以下 URL 发出 *POST* 请求：

    / api / 33 / systemSettings / my-key？value = my-val

或者，您可以将设置值作为请求正文提交，
其中内容类型设置为“文本/纯文本”。例如，您可以使用
像这样卷曲：

```bash
curl "play.dhis2.org/demo/api/33/systemSettings/my-key" -d "My long value"
  -H "Content-Type: text/plain" -u admin:district
```

要批量设置系统设置，您可以发送带有
使用 POST 请求的每个系统设置键值对的属性和值：

```json
{
  "keyApplicationNotification": "Welcome",
  "keyApplicationIntro": "DHIS2",
  "keyApplicationFooter": "Read more at dhis2.org"
}
```

可以通过指定语言环境来设置可翻译设置键的翻译
可以指定的查询参数和翻译值
作为查询参数或与正文有效负载一起使用。查看示例网址：

    / api / 33 / systemSettings / <my-key>？locale = <my-locale>＆value = <my-translated-value>

您应该将 my-key 替换为您的真实密钥，并将 my-val 替换为您的真实密钥
价值。检索给定键的值（以 JSON 或纯文本形式）
您可以向以下 URL 发出 *GET* 请求：

    / api / 33 / systemSettings / my-key

或者，您可以将键指定为查询参数：

    / api / 33 / systemSettings？key =我的密钥

如果未找到密钥或密钥被标记为机密，则会像这样返回一个 `404` 响应：

```json
{
    "httpStatus": "Not Found",
    "httpStatusCode": 404,
    "status": "ERROR",
    "message": "Setting does not exist or is marked as confidential",
    "errorCode": "E1005"
}
```

您可以通过重复键以 JSON 形式检索特定的系统设置
查询参数：

```bash
curl "play.dhis2.org/demo/api/33/systemSettings?key=keyApplicationNotification&key=keyApplicationIntro"
  -u admin:district
```

您可以使用GET请求检索所有系统设置：

    / api / 33 / systemSettings

要检索给定可翻译键的特定翻译，您可以指定
作为查询参数的语言环境：

    / api / 33 / systemSettings / <my-key>？locale = <my-locale>

如果存在，则返回给定语言环境的翻译。否则默认
值被返回。如果没有为可翻译键指定语言环境，则用户默认
UI 语言环境用于获取正确的翻译。如果给定的翻译不是
现在，再次返回默认值。

可翻译键的优先级如下：

    指定的区域设置>用户的默认UI区域设置> defaut值

要删除系统设置，您可以向 URL 发出 *DELETE* 请求
类似于上面用于检索的那个。如果一个可翻译的键是
使用，所有现有的翻译也将被删除。

仅删除可翻译键的特定翻译，相同的 URL
至于添加翻译应该使用，空值应该是
假如：

    / api / 33 / systemSettings / <my-key>？locale = <my-locale>＆value =

可用的系统设置在下面列出。

表：系统设置

| 键 | 描述 | 可翻译 |
|---|---|---|
| keyUiLocale | 用户界面的区域设置 | 不 |
| 密钥数据库区域设置 | 数据库的区域设置 | 不 |
| 关键分析显示属性 | 要在分析中显示的属性。默认值：“名称” | 不 |
| 键分析数字组分隔符 | 用于分隔数字组的分隔符 | 不 |
| keyCurrentDomainType | 尚未使用 | 不 |
| keyTracker仪表板布局 | 由跟踪器捕获使用 | 不 |
| 申请标题 | 应用程序标题。默认值：“DHIS2” | 是的 |
| 关键应用介绍 | 应用介绍 | 是的 |
| 关键应用通知 | 申请通知 | 是的 |
| 关键应用程序页脚 | 应用程序左页脚 | 是的 |
| 关键应用程序右页脚 | 应用程序右页脚 | 是的 |
| 键标志 | 应用标志 | 不 |
| 关键标志图像 | 仪表板菜单中使用的标志 | 不 |
| 启动模块 | 应用程序的起始页。默认值：“dhis-web-dashboard-integration” | 不 |
| 启动模块启用轻量级 | 用于渲染轻量级登陆页面的起始页面应用程序。默认值：“假” | 不 |
| 因子偏差 | 数据分析标准偏差因子。默认值：“2d” | 不 |
| 密钥电子邮件主机名 | 电子邮件服务器主机名 | 不 |
| 关键电子邮件端口 | 电子邮件服务器端口 | 不 |
| 关键电子邮件Tls | 使用 TLS。默认值：“真” | 不 |
| 关键电子邮件发送者 | 电子邮件发件人 | 不 |
| key电子邮件用户名 | 电子邮件服务器用户名 | 不 |
| 密钥电子邮件密码 | 电子邮件服务器密码 | 不 |
| 最小密码长度 | 密码最小长度 | 不 |
| 最大密码长度 | 密码最大长度 | 不 |
| 按键短信设置 | 短信配置 | 不 |
| keyCache策略 | 缓存策略。默认值：“CACHE_6AM_TOMORROW” | 不 |
| 密钥可缓存性 | 公共或私人。确定是否允许代理服务器缓存数据。 | 不 |
| 电话号码区号 | 电话号码 区号 | 不 |
| 多组织单位表格 | 启用多组织单位形式。默认值：“假” | 不 |
| 密钥配置 || 不 |
| 关键账户恢复 | 启用用户帐户恢复。默认值：“假” | 不 |
| keyLock多次登录失败 | 多次登录失败后启用锁定访问 | 不 |
| 谷歌分析UA | 用于跟踪网站使用情况的 Google Analytic UA 密钥 | 不 |
| 凭证过期 | 需要更改用户帐户密码。默认值：“0”（从不） | 不 |
| 凭证过期警报 | 当凭证接近到期日期时启用警报 | 不 |
| 凭证过期提醒天数 | 应在实际到期之前发送凭证到期警报的天数。默认值：28 | 不 |
| 账户到期提醒 | 向帐户因设置的到期日期而即将到期的用户发送警报电子邮件。默认值：“假” | 不 |
| 帐户过期天数 | 应在实际到期之前发送帐户到期警报的天数。默认值：7 | 不 |
| 密钥自助注册无验证码 | 自我注册不需要重新验证。默认值：“假” | 不 |
| 验证码秘密 | Google API 验证码秘密。默认值：dhis2 play 实例 API 密钥，但这仅适用于您的本地实例，不适用于生产环境。 | 不 |
| 验证码网站 | Google API 验证码网站。默认值：dhis2 play 实例 API 站点，但这仅适用于您的本地实例，不适用于生产环境。 | 不 |
| keyCanGrantOwnUserAuthorityGroups | 允许用户授予自己的用户角色。默认值：“假” | 不 |
| keySqlViewMaxLimit | SQL 视图的最大限制 | 不 |
| keyRespectMetaDataStartEndDatesInAnalyticsTableExport | 当“true”时，分析将跳过不在类别选项的开始和结束日期内的数据。默认值：“假” | 不 |
| keySkipDataTypeValidationInAnalyticsTableExport | 在分析表导出中跳过数据类型验证 | 不 |
| 键自定义登录页面徽标 | 自定义登录页面的徽标 | 不 |
| 键自定义顶部菜单徽标 | 自定义顶部菜单的徽标 | 不 |
| keyCacheAnalyticsDataYearThreshold | 早于该值（以年为单位）的分析数据将始终被缓存。 “0”禁用此设置。默认值：0 | 不 |
| 分析财务年度开始 | 设置财政年度开始。默认值：十月 | 不 |
| keyIgnoreAnalyticsApprovalYearThreshold | “0”检查所有数据的批准。 “-1”禁用批准检查。 “1”或更高级别检查所有晚于“1”年的数据的批准情况。 | 不 |
| keyAnalyticsMaxLimit | 分析记录的最大数量。默认值：“50000” | 不 |
| 关键跟踪实体最大限制 | 跟踪实体的最大数量。默认值："50000 | 不 |
| 关键分析维护模式 | 将分析功能置于维护模式。默认值："false | 不 |
| keyAnalyticsPeriodYearsOffset | Defines the years' offset to be used in the analytics export process. If the year of a respective date is out of the offset the system sends back a warning message during the process. At this point, the period generation step is skipped. ie.: suppose the system user sets the offset value to `5`, and we are in the year 2023. It means that analytics will accept exporting dates from 2018 (inclusive) to 2028 (inclusive). Which translates to: [2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028]. NOTE: The offset will have a significant influence on resource usage. Higher values will trigger higher usage of memory RAM/HEAP and CPU. Setting negative numbers to this key will disable any kind of validation (which means no warnings) and the internal range of years will be used (1970 to current year plus 10) Default: 22 | 不 |
| keyDatabaseServerCpus | 数据库服务器 CPU 数量。默认："0"（自动） | 不 |
| keyLastSuccessfulAnalyticsTablesRuntime | 保存上次成功运行分析表的时间戳 | 不 |
| keyLastSuccessfulLatestAnalyticsPartitionRuntime | 保存上次成功运行最新分析分区的时间戳 | 不 |
| keyLastMonitoringRun | 保存上次监控运行的时间戳 | 不 |
| keyLastSuccessfulDataSynch | 保存上次成功同步数据值的时间戳 | 不 |
| keyLastSuccessfulEventsDataSynch | 保存上次成功同步事件程序数据的时间戳 | 不 |
| keyLastCompleteDataSetRegistrationSyncSuccess | 保存上次成功同步完整性的时间戳 | 不 |
| syncSkipSyncForDataChangedBefore | 指定用于跳过同步在此时间点之前更改的所有数据的时间戳 | 不 |
| keyLastSuccessfulAnalyticsTablesUpdate | 保存上次成功更新分析表的时间戳 | 不 |
| keyLastSuccessfulLatestAnalyticsPartitionUpdate | 保留上次成功更新分析分区的时间戳 | 不 |
| keyLastSuccessfulResourceTablesUpdate | 保存上次成功更新资源表的时间戳 | 不 |
| 键上次成功系统监控推送 | 保存上次成功推送系统监控的时间戳 | 不 |
| keyLastSuccessfulMonitoring | 保存上次成功监控的时间戳 | 不 |
| keyNextAnalyticsTableUpdate | 保存下一次分析表更新的时间戳 | 不 |
| 帮助页面链接 | 帮助页面链接。默认值："[https://dhis2.github.io/dhis2-docs/master/en/user/html/dhis2_user_manual_en.html](http://dhis2.github.io/dhis2-docs/master/en/user/html/dhis2_user_manual_en.html) | 不 |
| keyAcceptanceRequiredForApproval | 批准前必须验收。默认值："false | 不 |
| keySystemNotificationsEmail | 通过电子邮件发送系统通知 | 不 |
| 关键分析相对周期 | 用于分析的默认相对周期。默认值："LAST_12_MONTHS"（最近 12 个月 | 不 |
| keyRequireAddToView | 添加到查看对象列表时需要授权。默认值："false | 不 |
| keyAllowObjectAssignment | 允许在添加或更新时将对象分配给相关对象。默认值："false | 不 |
| keyUseCustomLogoFront | 启用在首页使用自定义徽标。默认值："false | 不 |
| keyUseCustomLogoBanner | 启用网站上的自定义横幅。默认值："false | 不 |
| keyDataImportStrictPeriods（关键数据严格导入期 || 不 |
| keyDataImportStrictPeriods（关键数据严格导入期 | 要求周期与数据集的周期类型相匹配。默认值："false | 不 |
| keyDataImportStrictDataElements | 要求数据元素成为数据集的一部分。默认值："false | 不 |
| keyDataImportStrictCategoryOptionCombos | 要求类别选项组合与数据元素的类别组合匹配。默认值："false | 不 |
| 关键数据导入严格组织单位 | 要求组织单位与数据集的分配相匹配。默认值："false | 不 |
| keyDataImportStrictAttributeOptionsCombos | 要求属性选项 combis 与数据集的类别组合匹配。默认值："false | 不 |
| keyDataImportStrictDataSetApproval | true： 如果给定数据值条目存在已批准的数据集，则不允许使用；false： 如果给定数据值条目存在尚未批准的数据集，则允许使用：如果给定的数据值条目存在尚未批准的数据集，则允许使用。默认值："true | 不 |
| keyDataImportStrictDataSetLocking | true：如果存在数据集，且输入项已过期，则不允许给定数据值输入项出现锁定异常；false：如果存在数据集，且输入项未过期或给定数据值输入项出现锁定异常，则允许给定数据值输入项出现锁定异常：如果存在数据集，且该数据集的条目未过期或存在锁定异常，则允许输入给定的数据值条目。默认值："true | 不 |
| keyDataImportStrictDataSetInputPeriods | true：如果存在数据集，但不允许输入输入期已关闭的给定数据值条目；false：如果存在数据集，但允许输入输入期已开放的给定数据值条目：如果存在允许输入特定数据值的输入期为开放的数据集。默认值："true | 不 |
| keyDataImportRequireCategoryOptionCombo | 要求指定类别选项组合。默认值："false | 不 |
| keyDataImportRequireAttributeOptionCombo | 要求指定属性选项组合。默认值："false | 不 |
| keyCustomJs | 在网站上使用自定义 JavaScript | 不 |
| keyCustomCss | 在网站上使用自定义 CSS | 不 |
| 关键日历 | 日历类型。默认值："iso8601"。 | 不 |
| 关键日期格式 | 显示日期的格式。默认值："yyyy-MM-dd"。 | 不 |
| keyStyle | DHIS2 网页使用的样式。默认值："light_blue/light_blue.css"。 | 不 |
| keyRemoteInstanceUrl | 用于连接远程实例的 Url | 不 |
| keyRemoteInstanceUsername | 用于连接远程 DHIS2 实例的用户名 | 不 |
| keyRemoteInstancePassword 密钥 | 用于连接远程 DHIS2 实例的密码 | 不 |
| keyGoogleMapsApiKey | 谷歌地图 API 密钥 | 不 |
| keyGoogleCloudApiKey | 谷歌云 API 密钥 | 不 |
| keyLastMetaDataSyncSuccess | 保存上次成功同步元数据的时间戳 | 不 |
| 已启用 keyVersionEnabled | 启用元数据版本管理 | 不 |
| keyMetadataFailedVersion | 保留元数据版本同步失败的详细信息 | 不 |
| keyMetadataLastFailedTime | 保留上次元数据同步失败的时间戳 | 不 |
| keyLastSuccessfulScheduledProgramNotifications || 不 |
| keyLastSuccessfulScheduledDataSetNotifications || 不 |
| keyRemoteMetadataVersion | 远程实例元数据版本的详细信息 | 不 |
| keySystemMetadataVersion | 系统元数据版本的详细信息 | 不 |
| keyStopMetadataSync | 停止元数据同步的标志 | 不 |
| 关键文件资源保留策略 | 确定与已删除或更新的值相关联的文件资源保留的时间长度。NONE，THREE_MONTHS，ONE_YEAR或FOREVER。 | 不 |
| 同步最大远程服务器可用性检查尝试次数 | 指定在同步工作失败前检查远程服务器可用性的次数。 | 不 |
| 同步最大尝试次数 | 指定同步工作的最大尝试次数 | 不 |
| 远程服务器可用性检查尝试之间的同步延迟（syncDelayBetweenRemoteServerAvailabilityCheckAttempts | 远程服务器可用性检查之间的延迟 | 不 |
| 最后成功数据统计 | 保留上次成功数据分析的时间戳 | 不 |
| keyHideDailyPeriods | 未使用 | 不 |
| 键隐藏周周期 || 不 |
| 键隐藏双周周期 | 用于隐藏/显示双周期的布尔标志 | 不 |
| 键隐藏月度周期 || 不 |
| 键隐藏双月周期 || 不 |
| keyGatherAnalyticalObjectStatisticsInDashboardViews（在仪表板视图中收集分析对象统计数据 | 在仪表板中查看对象时，是否收集对象的分析统计数据 | 不 |
| keyCountPassiveDashboardViewsInUsageAnalytics | 在使用分析中计算 "被动 "仪表盘浏览量（未选择特定仪表盘）。 | 不 |
| keyDashboardContextMenuItemSwitchViewType | 允许用户切换仪表板收藏夹的视图类型 | 是的 |
| keyDashboardContextMenuItemOpenInRelevantApp | 允许用户在相关应用程序中打开仪表板收藏夹 | 是的 |
| keyDashboardContextMenuItemShowInterpretationsAndDetails（键盘上下文菜单项目显示解释和细节 | 允许用户显示仪表盘收藏夹的解释和详细信息 | 是的 |
| keyDashboardContextMenuItemViewFullscreen | 允许用户全屏查看仪表板收藏夹 | 是的 |
| 工作岗位日程表分钟后 | If a job is in state `RUNNING` for this amount of minutes or longer without making progress in form of updating its `lastAlive` timestamp the job is considered stale and reset to `SCHEDULED` state | 不 |
| 工作岗位分钟后清理 | 当 "运行一次 "作业成功或失败后超过此分钟数时，该作业将被删除 | 不 |                                                                                                                                                                                                                        
| 工作最大延迟时间 | CRON 表达式触发的任务只能在一天中的目标时间与此小时数之间的窗口中触发。如果无法在该窗口内运行，则跳过执行，根据 CRON 表达式，下一次执行将是下一个目标执行时间。 | 不 |
| 工作日志调试低于秒数 | 执行间隔少于此秒数的作业会将其信息记录在调试信息中，而不是信息中。 | 不 |
| keyParallelJobsInAnalyticsTableExport | 返回用于处理分析表的并行工作的数量。其优先级高于 "keyDatabaseServerCpus"。默认值：-1 | 不 |

## 用户设置 { #webapi_user_settings } 

您可以通过与 *userSettings* 交互来操作用户设置
资源。用户设置是一个简单的键值对，其中键
并且值是纯文本字符串。用户设置将链接到
已针对 Web API 请求进行身份验证的用户。返回列表
在所有用户设置中，您可以向以下 URL 发送 *GET* 请求：

    / api / 33 / userSettings

用户未设置的用户设置，将回退到等效的
系统设置。只返回用户明确设置的值，
您可以将 ?useFallback=false 附加到上述 URL，如下所示：

    / api / 33 / userSettings？useFallback = false

要为当前经过身份验证的用户保存或更新设置，您可以
向以下 URL 发出 *POST* 请求：

    / api / 33 / userSettings / my-key？value = my-val

您可以指定要为其显式保存设置的用户
这个语法：

    / api / 33 / userSettings / my-key？user = username＆value = my-val

或者，您可以将设置值作为请求正文提交，
其中内容类型设置为“文本/纯文本”。例如，您可以使用
像这样卷曲：

```bash
curl "https://play.dhis2.org/demo/api/33/userSettings/my-key" -d "My long value"
  -H "Content-Type: text/plain" -u admin:district
```

例如，要将当前用户的 UI 语言环境设置为法语，您
可以使用以下命令。

```bash
curl "https://play.dhis2.org/demo/api/33/userSettings/keyUiLocale?value=fr" 
  -X POST -u admin:district
```

您应该将 my-key 替换为您的真实密钥，并将 my-val 替换为您的真实密钥
价值。要以纯文本形式检索给定键的值，您可以
对以下 URL 的 *GET* 请求：

    / api / 33 / userSettings / my-key

要删除用户设置，您可以向 URL 发出 *DELETE* 请求
类似于上面用于检索的那个。

可用的系统设置在下面列出。



表格用户设置

| 键 | 选项 | 描述 |
|---|---|---|
| keyStyle | light_blue/light_blue.css | green/green.css | vietnam/vietnam.css | 用户界面样式表 |
| 关键信息电子邮件通知 | 假 | 真 | 是否发送电子邮件通知。 |
| 关键信息短信通知 | 假 | 真 | 是否发送短信通知。 |
| keyUiLocale | 位置值 | 用户界面语言。 |
| keyDbLocale | 位置值 | 数据库内容本地化。 |
| 关键分析显示属性 | name | shortName | 在分析应用程序中显示元数据的属性。 |
| keyCurrentDomainType | all | aggregate | tracker | 在列表中显示的数据元素域类型。 |
| keyAutoSaveCaseEntryForm | 假 | 真 | 定期保存案件登记表。 |
| keyAutoSaveTrackedEntityForm | 假 | 真 | 定期保存个人登记表。 |
| keyAutoSaveDataEntryForm | 假 | 真 | 定期保存汇总数据输入表。 |
| keyTrackerDashboardLayout | 假 | 真 | Tracker dasboard 布局。 |

## 组态 { #webapi_configuration } 

要访问配置，您可以与 *configuration* 交互
资源。您可以通过 *Accept* 标头获取 XML 和 JSON 响应
或使用 .json 或 .xml 扩展名。你可以*GET*所有属性
配置来自：

    / api / 33 /配置

您可以将 *GET* 和 *POST* 请求发送到以下特定
资源：

    GET /api/33/configuration/systemId

    GET POST DELETE /api/configuration/feedbackRecipients

    GET POST DELETE /api/configuration/offlineOrganisationUnitLevel

    GET POST /api/configuration/infrastructuralDataElements

    GET POST /api/configuration/infrastructuralIndicators

    GET POST /api/configuration/infrastructuralPeriodType

    GET POST DELETE /api/configuration/selfRegistrationRole

    GET POST DELETE /api/configuration/selfRegistrationOrgUnit

    GET POST /api/facilityOrgUnitGroupSet

    GET POST /api/facilityOrgUnitLevel

对于 CORS allowlist 配置，您可以使用
作为有效载荷，使用 "application/json "作为
内容类型，例如

```json
["www.google.com", "www.dhis2.org", "www.who.int"]
```

    GET POST /api/33/configuration/corsAllowlist

对于 POST 请求，配置值应作为请求发送
有效载荷为文本。下表显示了适当的配置
每个属性的值。



表格配置值

| 配置属性 | 值 |
|---|---|
| 反馈收件人 | 用户组 ID |
| 离线组织单位级别 | 组织单位级别 ID |
| 基础设施数据元素 | 数据元素组 ID |
| 基础设施指标 | 指标组 ID |
| 基础设施周期类型 | 周期类型名称（如 "月度） |
| 自我注册角色 | 用户角色 ID |
| 自我注册组织单位 | 组织单位标识 |
| smtpPassword | SMTP 电子邮件服务器密码 |
| 远程服务器地址 | 远程服务器的 URL |
| 远程服务器用户名 | 用于远程服务器验证的用户名 |
| 远程服务器密码 | 远程服务器验证密码 |
| corsAllowlist | JSON URL 列表 |

例如，要设置反馈接收者用户组，您可以调用
以下 curl 命令：

```bash
curl "localhost/api/33/configuration/feedbackRecipients" -d "wl5cDMuUhmF"
  -H "Content-Type:text/plain"-u admin:district
```

## 只读配置 { #webapi_readonly_configuration_interface } 

要访问所有配置设置和属性，您可以使用只读配置端点。这将提供对 *UserSettings、SystemSettings 和 DHIS2 服务器配置*的只读访问权限。您可以通过 *Accept* 标头获得 XML 和 JSON 响应。您可以*获取*所有设置：

    / api / 33 / configuration / settings

您可以根据设置类型获得过滤设置：

    GET / api / 33 / configuration / settings / filter？type = USER_SETTING

    GET / api / 33 / configuration / settings / filter？type = CONFIGURATION

可以提供一种以上的类型：

    GET /api/33/configuration/settings/filter?type=USER_SETTING&type=SYSTEM_SETTING



表格设置类型值

| 值 | 描述 |
|---|---|
| 用户_设置 | 获取用户设置 |
| SYSTEM_SETTING | 获取系统设置 |
| 配置 | 获取 DHIS 服务器设置 |

> **注意**
>
>将在输出中提供机密字段，但没有值。

## 代币 { #webapi_tokens } 

*tokens* 资源提供对各种服务的访问令牌。

### Google服务帐号 { #webapi_tokens_google_service_account } 

您可以使用以下命令检索 Google 服务帐户 OAuth 2.0 访问令牌
对以下资源的 GET 请求。

    GET /api/tokens/google

令牌将在一定时间内有效，之后
必须从此资源请求另一个令牌。响应
包含匹配令牌到期的缓存控制标头。这
响应将包含以下 JSON 格式的属性。



表格令牌响应

| 物业 | 描述 |
|---|---|
| access_token | 对 Google 服务进行身份验证时使用的 OAuth 2.0 访问令牌。 |
| expires_in | 访问令牌过期前的秒数，通常为 3600 秒（1 小时）。 |
| client_id | 谷歌服务账户客户 ID。 |

假定已为DHIS2设置并配置了Google服务帐户。请查阅安装指南以获取更多信息。

## 静态内容 { #webapi_static_content } 

*staticContent* 资源允许您上传和检索自定义
DHIS2 中使用的徽标。该资源允许用户上传带有
关联的密钥，稍后可以使用密钥检索。只有 PNG
文件受支持，只能上传到`logo_banner` 和
`logo_front` 键。

    / api / 33 / staticContent



表格静态内容键

| 键 | 描述 |
|---|---|
| logo_banner | 左侧应用程序顶部菜单中的徽标。 |
| logo_front | 登录页面登录表格上方的徽标。 |

要上传文件，请将带有 *POST* 请求的文件发送至：

    POST / api / 33 / staticContent / <key>

请求将logo.png上传到`logo_front`键的示例：

```bash
curl -F "file=@logo.png;type=image/png" "https://play.dhis2.org/demo/api/33/staticContent/logo_front"
  -X POST -H "Content-Type: multipart/form-data" -u admin:district
```

使用相同的密钥上传多个文件将覆盖现有的
文件。这样，检索任何给定键的文件只会返回
最新上传的文件。

要检索徽标，您可以*获取*以下内容：

    GET /api/33/staticContent/<key>

Example of requests to retrieve the file stored for `logo_front`:

* 将“Accept: text/html”添加到 HTTP 标头。*__ 在这种情况下，如果未定义任何内容，端点将返回默认图像。找到自定义或默认图像时将返回图像流。

```bash
curl "https://play.dhis2.org/demo/api/33/staticContent/logo_front" 
  -H "Accept: text/html" -L -u admin:district
```

* 将“Accept: application/json”添加到 HTTP 标头。*__ 设置此参数后，如果未找到自定义徽标，端点将永远不会返回默认图像。相反，将返回一条错误消息。找到自定义图像后，此端点将返回一个 JSON 响应，其中包含相应图像的路径/URL。

```bash
curl "https://play.dhis2.org/demo/api/33/staticContent/logo_front" 
  -H "Accept: application/json" -L -u admin:district
```

成功和错误消息将如下所示：

```json
{
  "images": {
    "png": "http://localhost:8080/dhis/api/staticContent/logo_front"
  }
}
```

```json
{
  "httpStatus": "Not Found",
  "httpStatusCode": 404,
  "status": "ERROR",
  "message": "No custom file found."
}
```

要使用自定义标志，您需要启用相应的系统
通过将其设置为 *true* 来设置。如果相应的设置为false，
将提供默认徽标。

## 用户界面定制 { #webapi_ui_customization } 

要自定义 DHIS2 应用程序的 UI，您可以插入自定义
JavaScript 和 CSS 样式通过 *files* 资源。

```
POST删除后/ api / 33 / files / script
POST GET DELETE / api / 33 / files / style
```

通过此资源插入的 JavaScript 和 CSS 内容将由
DHIS2 网络应用程序。这在某些情况下特别有用：

  - 覆盖 DHIS2 应用程序的 CSS 样式，例如
    登录页面或主页。

  - 定义几个自定义的通用 JavaScript 函数
    数据输入表单和基于 HTML 的报告。

  - 包括用于自定义数据输入表单的 CSS 样式和
    基于 HTML 的报告。

## 登录应用程序定制{ #login_app_customization }

设置应用程序允许用户定义各种元素（文本、徽标、旗帜），用于定制 DHIS2 的登录页面。此外，用户还可以在两种预设布局（默认布局和侧边栏布局）中进行选择。

如有需要，可通过上传 HTML 模板（也可在设置程序中定义）进一步定制登录程序的样式和布局。该 HTML 模板会替换某些元素（基于 ID）；下表列出了保留的 ID。通过这种方式，可以结合自定义样式（使用 css）和自定义布局（使用 HTML）来改变登录应用程序的外观。自定义模板不支持自定义脚本，任何上传的模板都将删除脚本标记。

要创建自定义模板，建议从现有模板开始（这些模板可在登录应用程序的扩展 dhis-web-login/#download 中下载）。

ID | Replaced by |
|---|---|
| **login-box** | The main login dialog, which prompts the user to enter their username/password. **This must be included for the login app to work as intended.**  |
| **application-title** | Text for the application title.  |
| **application-introduction** | Text for the application introduction. |
| **flag** | The selected flag. |
| **logo** | The logo (DHIS2 logo is used if custom logo is not defined). |
| **powered-by** | A link to DHIS2.org. |
| **application-left-footer** | Text for the left-side footer. |
| **application-right-footer** | Text for the right-side footer. |
| **language-select** | Selection to control the language of the login app. |

登录对话框的外观也可以通过在 HTML 模板中定义 css 变量来修改。以下 css 变量可供自定义：
```
--form-container-margin-block-start
--form-container-margin-block-end(表格边距块结束)
--form-container-margin-inline-start, auto
--form-container-margin-inline-end
--form-container-default-width默认宽度
--form-container-padding
--form-container-background-color背景色
--form-container-box-border-radius
--表单内容框阴影
--表单容器字体颜色
--表单标题-字体大小
--表单标题-字体-重量
--form-container-title-color字体颜色
```

