---
edit_url: "https://github.com/dhis2/training-docs/blob/main/content/tracker_config/lg_programindicator.md"
revision_date: '2024-10-01'
tags:
- 培训文档
---

# **创建计划指标学习者指南** { #learners-guide-to-creating-program-indicators }

**_在指标系统上进行这些练习_**

**_制作指标时使用您的姓名缩写_**


## 这个指南是什么？ { #what-is-this-guide }

本指南包含所有未分级的练习以及执行与 Tracker Config Level 1 学院的程序访问级别相关的详细步骤。请在教练提示时执行每项练习

## **本次课程的学习目标** { #learning-objectives-for-this-session }

在本课程结束时，用户应该熟悉在 DHIS2 中创建计划指标的基础知识。用户还应该了解如何将计划指标与聚合数据元素相结合以创建组合指标。在本课程结束时，参与者应熟悉几个概念：

1. 描述程序指标的概念
2. 描述程序指示器的各个组成部分
    1. 聚集类型
    2. 分析类型
    3. 表达
    4. 过滤
3. 在 DHIS2 中创建计划指标
4. 在 DHIS2 中创建组合指标

## 指导练习概述{ #guided-exercise-overview }

**练习1**

项目：结核病治疗卡

指标：肺外结核

简称：EPTB

聚合类型：计数

分析类型：事件

**练习2**

项目：结核病治疗卡

指标：新发肺结核病例

简称：NPTB

聚合类型：计数

分析类型：事件

**练习3**

项目：结核病治疗卡

指示器：TO——失败或死亡

简短名称: TO - 失败或死亡

聚合类型：计数

分析类型：事件

创建具有相同特征的该指标的副本，但过滤掉性别 = 男性、年龄 > 60

**练习4**

项目：结核病治疗卡

指标：住院 - 初始和延续

简称： 所有治疗均住院

代码：AT_HOSP

聚合类型：计数

分析类型：注册

**练习5**

项目：结核病治疗卡

指标：体重变化

简短名称: 体重变化

代码：TB_WC

聚合类型：平均

分析类型：注册

创建注册类型的计划指标。当培养结果为阴性且治疗结果已治愈或完成时，这应计算初始诊断和治疗结束计划阶段之间的权重差异。

**练习6**

综合指标

项目：结核病治疗卡

指标：每 10 万人中的结核病发病率

分子：结核病新病例

分母：人口总数

## 练习 1 - 指标 1：EPTB 案例 { #exercise-1-indicator-1-eptb-cases }

### 概念化指标{ #conceptualize-the-indicator }

我们想要统计肺外结核病例的数量。这是从现场疾病站点获取的，该站点有一个选项集，我可以在其中选择该值。

![](Images/pi/image5.png)

### 编辑指标详细信息{ #edit-the-indicator-details }

导航至维护 -> 指示器 -> 程序指示器

选择“结核病治疗卡”作为程序

![](Images/pi/image2.png)

### 添加新指标并编辑程序指标详细信息{ #add-a-new-indicator-and-edit-the-program-indicator-details }

选择蓝色加号以添加新指示器。

首先，编辑名称、简称和代码详细信息。

![](Images/pi/image55.png)

跳过颜色和图标

接下来，添加描述。

查看聚合类型，我们想用这个指标做什么？我们想要计算 EPTB 病例的数量。

查看分析类型。我们只需要程序中一个阶段的数据，并且该阶段不重复。在此场景中，分析类型为 EVENT。

选择分析类型后，您将看到“分析周期边界”。将这些全部保留为默认值，我们不会在本学院涵盖它们。您可以在[文档](https://docs.dhis2.org/en/use/user-guides/dhis-core-version-master/configuring-the-system/programs.html#about_program_indicators)中了解有关它们的更多信息。

![](Images/pi/image18.png)

### 编辑表达式 { #edit-the-expression }

选择表达式选项卡以编辑表达式。这是我们用数学方式定义我们想要发生的事情的地方。


```
当您在跟踪器程序中创建程序指示器时，您将在右侧菜单上看到所有程序阶段。从这里，您可以选择属于这些阶段的任何数据元素。您还可以选择属于该程序的属性。此外，我们还有可以在计算中使用的变量和常量。
```

在这种情况下，我们可以使用一个称为事件计数的简单变量来定义我们的表达式。这是因为我们想要计算符合特定条件的事件数量。您可能会发现这个变量经常使用。

![](Images/pi/image3.png)


### 编辑过滤器 { #edit-the-filter }

选择过滤器选项卡以编辑过滤器。在这里，我们定义了数学计算中要包含的标准。我们想要对事件进行计数，但是哪些事件呢？在我们的例子中，那些疾病部位在肺部以外的地方。

疾病部位是我们程序中的一个数据元素，所以我们可以选择它

![](Images/pi/image16.png)

接下来，我们可以使用运算符“等于”。

在程序指示器中，选项通过选项集中的代码进行识别。在此示例中，名称和代码相同，但如果您不熟悉元数据，通常最好检查您正在使用的选项的代码。

![](Images/pi/image9.png)

复制代码并将其添加到过滤器中。我们将其添加在引号之间，因为它是文本值。所有文本值都需要位于引号之间。

![](Images/pi/image46.png)

### 测试程序指示器{ #test-the-program-indicator }

现在您已经创建了程序指标，最好测试一下它是否有效。您可以将正确配置的指标与您创建的指标进行比较，以确保该值正确。为此，您可以导航到数据透视表应用程序。

### 导航至数据可视化工具应用 { #navigate-to-the-data-visualizer-app }

使用以下详细信息创建一个新的数据透视表

* 数据 ：您制定的程序指标，程序指标“肺外结核”
* Period : Last year
* 组织单位：训练园

单击更新以验证指标中的值是否相等。这将提供一些验证来确保指标已正确创建。

![](Images/pi/image21.png)

## 练习 2 - 指标 2：新发肺结核病例 { #exercise-2-indicator-2-new-pulmonary-tb-cases }

### 概念化指标{ #conceptualize-the-indicator }

我们想要统计新发肺结核病例的数量

![](Images/pi/image32.png)

这些值取自 2 个不同的数据元素：结核病患者类型和结核病部位，两者都具有可供选择的选项集值。这意味着我们需要再次考虑这些值的代码。


### 编辑指标详细信息{ #edit-the-indicator-details }

导航至维护 -> 指示器 -> 程序指示器

选择“结核病治疗卡”作为程序

![](Images/pi/image2.png)

### 添加新指标并编辑程序指标详细信息{ #add-a-new-indicator-and-edit-the-program-indicator-details }

选择蓝色加号以添加新指示器。

首先，编辑名称、简称和代码详细信息。

![](Images/pi/image22.png)

跳过颜色和图标

接下来，添加描述。

查看聚合类型，我们想用这个指标做什么？我们想要计算 EPTB 病例的数量。

查看分析类型。我们只需要程序中一个阶段的数据，并且该阶段不重复。在此场景中，分析类型为 EVENT。

选择分析类型后，您将看到“分析周期边界”。将这些全部保留为默认值，我们不会在本学院涵盖它们。您可以在[文档](https://docs.dhis2.org/en/use/user-guides/dhis-core-version-master/configuring-the-system/programs.html#about_program_indicators)中了解有关它们的更多信息。

![](Images/pi/image13.png)

### 编辑表达式 { #edit-the-expression }

选择表达式选项卡以编辑表达式。这是我们用数学方式定义我们想要发生的事情的地方。

在这种情况下，我们可以使用一个简单的变量（称为事件计数）来定义表达式。这是因为我们想要计算满足特定条件的事件的数量。您可能会发现自己经常使用这个变量。

![](Images/pi/image3.png)

### 编辑过滤器 { #edit-the-filter }

选择过滤器选项卡以编辑过滤器。在这里，我们定义了数学计算中要包含的标准。我们想要对事件进行计数，但是哪些事件呢？在我们的案例中，患者类型是新的并且疾病部位是肺部。

患者类型和疾病站点是我们程序中的数据元素，因此我们可以选择它们。我们首先选择患者类型

接下来，我们可以使用运算符“等于”。

在程序指示器中，选项通过选项集中的代码进行识别。在此示例中，名称和代码相同，但如果您不熟悉元数据，通常最好检查您正在使用的选项的代码。

![](Images/pi/image35.png)
![](Images/pi/image42.png)

复制代码并将其添加到过滤器中。我们将其添加在引号之间，因为它是文本值。所有文本值都需要位于引号之间。

![](Images/pi/image8.png)

为了使该指标满足我们要求的标准，患者必须是新患者并且疾病部位必须是肺部。因此，在这种情况下我们必须使用“and”逻辑运算符。选择疾病部位数据元素并完成过滤。

![](Images/pi/image27.png)

### 测试程序指示器{ #test-the-program-indicator }

现在您已经创建了程序指标，最好测试一下它是否有效。您可以将正确配置的指标与您创建的指标进行比较，以确保该值正确。为此，您可以导航到数据透视表应用程序。


### 导航至数据可视化工具应用 { #navigate-to-the-data-visualizer-app }

使用以下详细信息创建一个新的数据透视表

* 数据：您制作的程序指示符，程序指示符“新，肺结核”
* Period : Last year
* 组织单位：训练园

单击更新以验证指标中的值是否相等。这将提供一些验证来确保指标已正确创建。


![](Images/pi/image34.png)

## 练习 3 - 指标 3：治疗失败或死亡的患者 { #exercise-3-indicator-3-patients-on-who-failed-treatment-or-died }

### 概念化指标{ #conceptualize-the-indicator }

我们想要统计死亡或治疗失败的病例数

![](Images/pi/image10.png)

这些值取自 1 个数据元素“治疗结果”，并具有可供选择的选项集值。这意味着我们需要再次考虑这些值的代码。

### 编辑指标详细信息{ #edit-the-indicator-details }

导航至维护 -> 指示器 -> 程序指示器

选择“结核病治疗卡”作为程序

![](Images/pi/image2.png)

### 添加新指标并编辑程序指标详细信息{ #add-a-new-indicator-and-edit-the-program-indicator-details }

选择蓝色加号以添加新指示器。

首先，编辑名称、简称和代码详细信息。

![](Images/pi/image36.png)

跳过颜色和图标

接下来，添加描述。

查看聚合类型，我们想用这个指标做什么？我们想要统计 DOT 设施或社区的病例数。

查看分析类型。我们只需要程序中一个阶段的数据，并且该阶段不重复。在此场景中，分析类型为 EVENT。

选择分析类型后，您将看到“分析周期边界”。将这些全部保留为默认值，我们不会在本学院涵盖它们。您可以在[文档](https://docs.dhis2.org/en/use/user-guides/dhis-core-version-master/configuring-the-system/programs.html#about_program_indicators)中了解有关它们的更多信息。


![](Images/pi/image12.png)

### 编辑表达式 { #edit-the-expression }

选择表达式选项卡以编辑表达式。这是我们用数学方式定义我们想要发生的事情的地方。

在这种情况下，我们可以使用一个简单的变量（称为事件计数）来定义表达式。这是因为我们想要计算满足特定条件的事件的数量。您可能会发现自己经常使用这个变量。

![](Images/pi/image3.png)

### 编辑过滤器 { #edit-the-filter }

选择过滤器选项卡以编辑过滤器。在这里，我们定义了数学计算中要包含的标准。我们想要对事件进行计数，但是哪些事件呢？在我们的案例中，那些治疗结果要么治疗失败，要么死亡的人。

治疗结果是我们程序的最终治疗阶段的一个数据元素，因此我们可以选择它。

接下来，我们可以使用运算符“等于”。

在程序指示器中，选项通过选项集中的代码进行识别。在此示例中，名称和代码相同，但如果您不熟悉元数据，通常最好检查您正在使用的选项的代码。


![](Images/pi/image49.png)
![](Images/pi/image38.png)

复制代码并将其添加到过滤器中。我们将其添加在引号之间，因为它是文本值。所有文本值都需要位于引号之间。

![](Images/pi/image56.png)

为了使该指标满足我们要求的标准，患者可以接受基于设施或基于社区的 DOT 治疗。因此，在这种情况下我们必须使用“或”逻辑运算符。选择疾病部位数据元素并完成过滤。

![](Images/pi/image20.png)

### 测试程序指示器{ #test-the-program-indicator }

现在您已经创建了程序指标，最好测试一下它是否有效。您可以将正确配置的指标与您创建的指标进行比较，以确保该值正确。为此，您可以导航到数据透视表应用程序。

### 导航至数据可视化工具应用 { #navigate-to-the-data-visualizer-app }

使用以下详细信息创建一个新的数据透视表

* 数据：您制定的计划指标，计划指标“治疗结果-失败或死亡”
* Period : Last year
* 组织单位：训练园

单击更新以验证指标中的值是否相等。这将提供一些验证来确保指标已正确创建。

![](Images/pi/image52.png)

## 练习 3 第 2 部分 - 添加更多过滤器 { #exercise-3-part-2-adding-more-filters }

如果我们想修改此指标以仅计算那些男性且> 60 的病例该怎么办？

为此，我们需要修改指标过滤器。当我们添加到前一个指标时，让我们找到它并克隆它。

![](Images/pi/image30.png)

更新名称、简称、代码和描述

![](Images/pi/image15.png)
![](Images/pi/image40.png)

聚合类型和分析类型保持不变。

表达方式也是一样的。然而，我们确实需要更新我们的过滤器。

![](Images/pi/image19.png)

让我们回顾一下发生了什么变化。

1. 我们通过将 or 语句括起来引入了分组
2. 我们添加了两个额外的年龄和性别过滤器，使用和声明

请注意，如果您将多个和/或条件分组在一起以创建特定的过滤条件，则需要使用括号。这充当一种操作顺序。输入并解释过滤器后保存指标。

保存后，我们应该能够在数据可视化工具中验证该指标

![](Images/pi/image47.png)

## 创建注册类型指标{ #create-enrollment-type-indicators }

## 练习 4 - 指标 4：患者在整个治疗过程中住院{ #exercise-4-indicator-4-patients-hospitalized-the-entire-treatment }

### 概念化指标{ #conceptualize-the-indicator }

我们想要统计初始阶段和持续阶段住院的病例数。这意味着我们正在从 2 个程序阶段检索数据。

![](Images/pi/image28.png)

![](Images/pi/image25.png)

### 编辑指标详细信息{ #edit-the-indicator-details }

导航至维护 -> 指示器 -> 程序指示器

选择“结核病治疗卡”作为程序

![](Images/pi/image2.png)

### 添加新指标并编辑程序指标详细信息{ #add-a-new-indicator-and-edit-the-program-indicator-details }

选择蓝色加号以添加新指示器。

首先，编辑名称、简称和代码详细信息。

![](Images/pi/image44.png)

跳过颜色和图标

接下来，添加描述。

查看聚合类型，我们想用这个指标做什么？我们想要统计在治疗的初始阶段和持续治疗阶段住院的病例数。

查看分析类型。现在我们需要来自多个阶段的数据，因此我们的分析类型将是注册！


```
在这个特定的示例中，我们正在创建一个计算并显示其信息的注册指示器。请注意，您还可以创建一个计划指示器来计算满足特定条件的注册数量。例如，如果您想要使用来自同一计划内多个计划阶段的选项集的数据元素，以便在计算指标时过滤掉注册数量，这可能会很有用。```

选择分析类型后，您将看到“分析周期边界”。将这些全部保留为默认值，我们不会在本学院涵盖它们。您可以在[文档](https://docs.dhis2.org/en/use/user-guides/dhis-core-version-master/configuring-the-system/programs.html#about_program_indicators)中了解有关它们的更多信息。


![](Images/pi/image53.png)

### 编辑表达式 { #edit-the-expression }

选择表达式选项卡以编辑表达式。这是我们用数学方式定义我们想要发生的事情的地方。

在这种情况下，我们可以使用一个简单的变量（称为注册计数）来定义表达式。我们不再计算事件，而是计算注册人数，因为我们希望合并整个注册信息，然后使用我们的过滤器对其进行评估。

![](Images/pi/image43.png)

### 编辑过滤器 { #edit-the-filter }

选择过滤器选项卡以编辑过滤器。在这里，我们定义了数学计算中要包含的标准。我们想要对事件进行计数，但是哪些事件呢？在我们的案例中，那些治疗结果要么治疗失败，要么死亡的人。

治疗类型包含在初始和延续 1 计划阶段中。我们放入表达式中的数据元素包括它所属的程序阶段的标识。这使我们能够组合和评估来自多个程序阶段的数据。

在程序指示器中，选项通过选项集中的代码进行识别。在此示例中，名称和代码相同，但如果您不熟悉元数据，通常最好检查您正在使用的选项的代码。

![](Images/pi/image26.png)

### 编辑表达式 { #edit-the-expression }

我们来回顾一下表达式

![](Images/pi/image4.png)

表达式中的数据元素被标识为{program stage.data element}。我们可以看到我们有相同的数据元素，但程序阶段 ID 不同。我们还可以在下面的绿色验证框中看到这一点。

### 测试程序指示器{ #test-the-program-indicator }

现在您已经创建了程序指标，最好测试一下它是否有效。您可以将正确配置的指标与您创建的指标进行比较，以确保该值正确。为此，您可以导航到数据透视表应用程序。

### 导航至数据可视化工具应用 { #navigate-to-the-data-visualizer-app }

使用以下详细信息创建一个新的数据透视表

* 数据：您制作的程序指示符，程序指示符“住院 - 初始和继续”
* Period : Last year
* 组织单位：训练园

单击更新以验证指标中的值是否相等。这将提供一些验证来确保指标已正确创建。

![](Images/pi/image50.png)

## 练习 5 - 指标 5 - 体重变化 { #exercise-5-indicator-5-change-in-weight }

导航回“指标”->“程序指标”，然后单击“新建”以创建新指标

![](Images/pi/image1.png)

### 概念化指标{ #conceptualize-the-indicator }

创建一个程序指标，用于计算初始诊断和治疗结束之间的体重差异。这仅应在培养结果为阴性且治疗结果已治愈或完成的情况下计算。


### 编辑节目指示器详细信息{ #edit-the-program-indicator-details }

选择加号后，确保选择您正在使用的程序。填写详细信息如下（将您的姓名缩写替换为屏幕截图中的姓名缩写）。请注意，在本例中，您使用“注册”作为聚合类型。这种类型的计划指标使用整个注册过程中的参数而不是事件内的参数来计算指标。

我们希望该指标能够即时计算，然后直接显示在跟踪器捕获中。为了实现这一点，请确保选中“以表单显示”。

![](Images/pi/image39.png)

### 编辑表达式 { #edit-the-expression }

从时间线菜单中选择编辑表达式

![](Images/pi/image31.png)

对于表达式，您需要计算治疗结束阶段和初始诊断阶段的体重之间的差异。结核病往往会导致额外的体重减轻，治疗后他们应该有望恢复一些体重。

![](Images/pi/image51.png)

### 编辑过滤器 { #edit-the-filter }

从时间线菜单中选择编辑过滤器

![](Images/pi/image37.png)

我们现在将创建我们的标准，过滤掉所需的事件（培养结果为阴性，治疗结果为治愈或完成）。

当我们使用选项集在过滤器中设置条件时，我们必须使用选项代码。选项代码可能与名称不同，我们必须使用程序中的可用数据元素设置三个标准：

* 培养结果 ==“阴性（0 个菌落）”和
* 治疗结果==“治愈”或治疗结果==“治疗完成”

您可以像以前一样从右侧菜单中选择数据元素。在过滤器框中，您将看到表达式中的programuid.dataelementuid。在绿色框下方，您将看到它以纯文本形式表示，更容易破译。

![](Images/pi/image23.png)

请注意 **or** 条件如何包含在括号内。这是确保过滤器正常运行所必需的。请注意，如果您将多个和/或条件分组在一起以创建特定的过滤条件，则需要使用括号。输入并解释过滤器后保存指标。

### 测试程序指示器{ #test-the-program-indicator }

在本例中导航到跟踪器捕获以测试程序指示器。如果您已经访问过该程序，请清除缓存。

选择任何拥有结核病治疗卡计划的机构。

![](Images/pi/image7.png)

继续注册新的 TEI。输入详细信息后，单击保存并继续。您可能需要选择距离当前日期大约 ~5-6 个月的报告日期，因为这是初始诊断和治疗阶段结束之间的平均差异。

![](Images/pi/image48.png)


在跟踪器仪表板中，您将看到一个用于指标的空间以及时间线数据输入。当过滤器满足您之前设置的标准时，体重指标将会出现


* 培养结果 ==“阴性（0 个菌落）”和
* 治疗结果==“治愈”或治疗结果==“治疗完成”

![](Images/pi/image6.png)

首先，在 **初始诊断** 阶段输入体重值

![](Images/pi/image11.png)

添加治疗阶段结束事件

![](Images/pi/image54.png)

输入体重值，选择**阴性**作为_ **培养结果**_并选择**治愈**或**治疗完成**作为**_治疗结果_**。请参与者注意，除非满足这些标准，否则权重指示器不会出现。

![](Images/pi/image24.png)

## 创建组合指标{ #creating-combined-indicators }

## 练习 6 - 指标 6：每 10 万人的结核病发病率 { #exercise-6-indicator-6-tb-incidence-rate-per-100000 }

在这里，我们可以将程序指标与聚合数据元素结合起来，形成所需的指标。我们通过使用常规指标应用程序来做到这一点。

### 概念化指标{ #conceptualize-the-indicator }

我们想要计算每 10 万人中的结核病发病率。这等于：

（结核病新发病例数/总人口）* 100, 000

如果我们分解这个，

1. 我们可以从我们的结核病治疗卡计划中检索新发结核病病例的数量。我们需要创建一个程序指示器来检索该总数
2. 总人口是一个聚合数据元素，我们可以通过人口普查或其他估计调查将其导入 DHIS2
3. 我们将除后的值乘以 100,000 来计算我们的发病率

### 查看程序指示器{ #review-the-program-indicator }

作为该演示的一部分，已经创建了项目指标“结核病新病例”。您可以快速查看聚合类型、表达式和过滤器。

### 查看分母 { #review-the-denominator }

我们可以使用数据元素“总人口”作为分母。这已经作为我们系统中的数据元素存在，并且其中也已经有数据。

![](Images/pi/image17.png)

### 查看指标类型 { #review-the-indicator-type }

我们想要创建一个因子为 100,000 的指标。这已经存在于我们的系统中，我们可以在构建指标时使用它。

![](Images/pi/image41.png)

### 创建新指标{ #create-a-new-indicator }

导航至指标管理页面（维护 -> 指标）并继续创建新指标。

添加指标的详细信息

![](Images/pi/image45.png)

这是一个示例描述：

（新发结核病病例数/总人口）* 100, 000。新发结核病病例数取自“结核病治疗卡”计划，而总人口则是最近一次人口普查的估计值。

#### 编辑分子 { #edit-the-numerator }

我可以在指标管理页面中选择程序指标作为来源。

选择

1. 程式
2. 结核病治疗卡
3. 指标
4. 结核病新病例指标
5. 输入描述
6. 保存

![](Images/pi/image29.png)

#### 编辑分母 { #edit-the-denominator }

选择

7. 数据元素
8. 数据元素总人口
9. 输入描述
10. 保存


### 在继续之前保存指示器{ #save-the-indicator-before-proceeding }

稍事休息并通知教练您制定了指标。讲师将解释，您还无法看到输出。

### 验证数据可视化工具中的指标 { #verify-the-indicator-in-data-visualizer }

使用输入创建数据透视表：

1. 数据：
    1. 结核病新病例（结核病治疗卡的计划指标）
    2. 总人口（数据元素）
    3. 每 10 万人中的结核病发病率（您刚刚制定的指标）
2. Period : Last year
3. 组织单位：训练场

![](Images/pi/image14.png)

您可以手动验证计算，看看结果是否正确！

