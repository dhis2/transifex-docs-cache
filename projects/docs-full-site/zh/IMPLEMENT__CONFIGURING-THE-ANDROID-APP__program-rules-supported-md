---
edit_url: "https://github.com/dhis2/dhis2-android-capture-app/blob/master/docs/src/commonmark/en/content/capture-app/program-rules-supported-in-android-capture-app。 md"
revision_date: "2021-09-17"
---

# Android Capture App支持的程序规则 { #capture_app_pr }

以下是DHIS 2中可用的所有程序规则组件（变量类型和操作）的完整列表，并说明了这些功能是否已在Android Capture应用中实现。

与Android一起使用特定功能时遇到的所有问题均以感叹号\！突出显示。

| 传说 | 描述 |
| :-: | :-- |
| ![](resources/icons/icon-complete.png) | 值类型已实现 |
| ![](resources/icons/icon-incomplete.png) | 值类型未实现，但会被安全忽略（如果不是强制性的） |
| ![](resources/icons/icon-na.png) | 不适用 |
| ![](resources/icons/icon-wip.png) | 工作正在进行中。功能尚未完全实施或已报告意外行为 |

## 程序规则支持的变量源类型 { #capture_app_pr_prv }

| 变量类型 | 变量类型说明 | 注册程序 | 无需注册的程序 | 实施注意事项 |
| --- | --- | :-: | :-: | --- |
| 程序阶段来自最新事件的数据元素 | 此源类型的工作方式与“当前程序中来自最新事件的数据元素”的工作方式相同，只不过它仅评估来自特定程序阶段的值。 | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-na.png) |  |
| 来自当前程序中最新事件的数据元素（已注册） | 此源类型使用为注册中的指定数据元素收集的最新数据值进行填充。 | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-na.png) |  |
| 来自当前程序中最新事件的数据元素（无需注册） | 该程序规则变量将使用在同一组织单位中的10个最新事件中找到的最新数据值填充。 | ![](resources/icons/icon-na.png) | ![](resources/icons/icon-complete.png) |  |
| 当前事件中的数据元素（已注册） | 变量从当前事件中获取数据元素&rsquo;s的值。 | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-na.png) |  |
| 当前事件中的数据元素（无注册） | 包含来自用户当前打开的同一事件的数据值。 | ![](resources/icons/icon-na.png) | ![](resources/icons/icon-complete.png) |  |
| 来自先前事件的数据元素（已注册） | 具有这种源类型的程序规则变量将包含指定数据元素的所有先前事件的最新值。当前打开的事件未评估。 | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-na.png) |  |
| 上一个事件的数据元素（无注册） | 该程序规则变量将填充当前事件日期之前的10个事件（即不包括当前事件）中找到的最新数据值。 | ![](resources/icons/icon-na.png) | ![](resources/icons/icon-complete.png) |  |
| 跟踪实体属性 | 使用当前TEI（例如当前患者）的指定跟踪实体属性填充程序规则变量。 | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-na.png) |  |
| 计算值 | 计算值。 | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-complete.png) |  |

## 程序规则支持的操作（当前事件中的数据元素） { #capture_app_pr_pra }

| 行动 | 动作说明 | 注册程序 | 无需注册的程序 | 实施注意事项 |
| --- | --- | :-: | :-: | --- |
| 隐藏场 | 如果规则为true，则隐藏单个数据元素。 | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-complete.png) | ！如果在隐藏字段后更改值，它将根据值类型规则引擎默认值还原操作。我们建议将其与hasvalue函数结合使用。 |
| 隐藏部分 | 如果规则为true，则隐藏整个节及其数据元素。 | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-complete.png) |  |
| 隐藏选项 | 隐藏给定数据元素/跟踪实体属性中选项集的单个选项。与 **显示选项组** 结合使用时，**隐藏选项** 优先 | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-complete.png) |  |
| 隐藏选项组 | 隐藏给定选项组和数据元素/跟踪实体属性中的所有选项。与 **显示选项组** 结合使用时，**隐藏选项** 优先 | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-complete.png) |  |
| 显示选项组 | 用于仅显示给定数据元素/跟踪的实体属性中给定选项组中的选项。要显示选项组，将隐式隐藏不属于所显示组的所有选项。 | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-complete.png) |  |
| 赋值 | 如果规则为true，则将值分配给指定的数据元素或属性。 | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-complete.png) | 要添加文本，必须使用单引号引起来。例如：“ 2 + 2”将显示文本2 + 2和2 + 2，不带单引号的文本将显示4。 |
| 显示警告 | 如果规则为true，则向用户显示弹出警告；不会阻止用户继续。 | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-complete.png) |  |
| 完成警告 | 如果在单击“完成”时，规则为真，则向用户显示弹出警告。这不会阻止用户继续。 | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-complete.png) |  |
| 显示错误 | 在规则为真时立即向用户显示弹出错误消息，并阻止用户继续操作直到规则不再为真。 | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-complete.png) | 该值不会保存，但不会清除文本，以便用户轻松修复它。 |
| 完成时出错 | 如果“完成”，则向用户显示弹出警告；单击表示规则为真，并阻止用户继续执行，直到规则不再为真。 | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-complete.png) |  |
| 使字段强制 | 将数据元素设置为“强制”；如果规则为真。 | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-complete.png) |  |
| 显示文字（事件程序） | 用于显示不是错误或警告的信息，例如反馈。 | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-complete.png) | 与源变量类型无关，文本将以形式显示为最后一节的最后一个元素。文本将显示为指示符选项卡中的消息。 |
| 显示文字（跟踪程序） | 用于显示不是错误或警告的信息，例如反馈。 | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-complete.png) | **1.程序规则配置为“仅针对程序阶段触发规则”。** 文本将仅在表单中显示为最后部分的最后一个元素。文本将作为消息显示在指示器选项卡中。 </br>-> 如果程序规则使用任何非当前阶段的变量类型，则规则将无法评估，并且不会显示消息。</br>**2.程序规则未配置为“仅针对程序阶段的触发规则”。**文本将仅显示在指标选项卡中，而不显示在表单中。</br>--> 如果程序规则使用当前事件类型的任何变量，该规则将无法评估并且不会显示消息。 |
| 显示键值/对（事件程序） | 用于显示从数据元素中提取的信息。 | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-complete.png) | **变量类型：** </br>_ 当前程序中最新事件的数据元素</br>_ 上一个事件的数据元素</br>_ 当前事件中的数据元素</br>_ 内置变量</br>键/值对将仅显示在指定部分的表单中。 |
| 显示键值/对（跟踪程序） | 用于显示从数据元素中提取的信息。 | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-complete.png) | **1.变量类型：**</br>_ 当前事件中的数据元素</br>键/值对将仅在表单中显示指定部分。</br>**2.变量类型：**</br>_ 当前节目中最新事件的数据元素</br>_ 上一个事件的数据元素</br>_ 程序阶段最新事件的数据元素</br>_ 跟踪的实体属性</br>_ 内置变量</br>键/值对将仅显示在指标选项卡中，而不显示在表单中。 |
| 隐藏程序阶段 | 如果规则为真，则向用户隐藏整个程序阶段。 | ![](resources/icons/icon-na.png) | ![](resources/icons/icon-na.png) | 仅支持当前程序类型中最新事件的 ** 数据元素和跟踪实体 ** 属性变量的操作规则。 |
| 发信息 | 发送消息会根据提供的消息模板触发通知。只要数据值发生更改，就会执行此操作。但是，可以通过在程序规则表达式中提供事件注册状态来控制此行为 | ![](resources/icons/icon-na.png) | ![](resources/icons/icon-na.png) | 此功能在服务器端执行。 |
| 排程讯息 | Schedule Message将在Expression在数据字段中提供的日期安排通知。 | ![](resources/icons/icon-na.png) | ![](resources/icons/icon-na.png) | 此功能在服务器端执行。 |

## 程序规则支持的操作（其他变量） { #capture_app_pr_pra_other }

| 行动 | 动作说明 | 当前程序中最新事件的数据元素（已注册） | 当前程序中最新事件的数据元素（无需注册） | 来自上一个事件的数据元素（已注册） | 来自上一个事件的数据元素（未注册） | 程序阶段最新事件的数据元素（注册） | 跟踪的实体属性（已注册） | 实施注意事项 |
| --- | --- | :-: | :-: | :-: | :-: | :-: | :-: | --- |
| 隐藏场 | 如果规则为true，则隐藏单个数据元素。 | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-complete.png) |  |
| 隐藏部分 | 如果规则为true，则隐藏整个节及其数据元素。 | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-complete.png) |  |
| 隐藏选项 | 隐藏给定数据元素/跟踪实体属性中选项集的单个选项。与 **显示选项组** 结合使用时，**隐藏选项** 优先。 | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-complete.png) |  |
| 隐藏选项组 | 隐藏给定选项组和数据元素/跟踪的实体属性中的所有选项。与显示选项组组合时，隐藏选项优先。 | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-complete.png) |  |
| 赋值 | 如果规则为true，则将值分配给指定的数据元素或属性。 | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-complete.png) | 要添加文本，必须使用单引号引起来。例如：“ 2 + 2”将显示文本2 + 2和2 + 2，不带单引号的文本将显示4。 |
| 显示警告 | 如果规则为true，则向用户显示弹出警告；不会阻止用户继续。 | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-complete.png) |  |
| 完成警告 | 如果在单击“完成”时，规则为真，则向用户显示弹出警告。这不会阻止用户继续。 | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-na.png) |  |
| 显示错误 | 在规则为真时立即向用户显示弹出错误消息，并阻止用户继续操作直到规则不再为真。 | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-complete.png) | 该规则将使用户完成注册，但会阻止完成事件，直到规则不再成立为止。该值不会保存，但不会清除文本，以便用户轻松修复它。 |
| 完成时出错 | 如果在单击“完成”时，规则为真，则向用户显示弹出警告。这不会阻止用户继续。 | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-na.png) |  |
| 使字段强制 | 如果规则为true，则将数据元素设置为“强制性”。 | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-complete.png) |  |
| 显示文字（事件程序） | 用于显示不是错误或警告的信息，例如反馈。 | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-complete.png) | 与源变量类型无关，文本将以形式显示为最后一节的最后一个元素。文本将显示为指示符选项卡中的消息。 |
| 显示文字（跟踪程序） | 用于显示不是错误或警告的信息，例如反馈。 | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-complete.png) | **1.程序规则配置为“仅针对程序阶段触发规则”。** 文本将仅在表单中显示为最后部分的最后一个元素。文本将作为消息显示在指示器选项卡中。 </br>-> 如果程序规则使用任何非当前阶段的变量类型，则规则将无法评估，并且不会显示消息。</br>**2.程序规则未配置为“仅针对程序阶段的触发规则”。**文本将仅显示在指标选项卡中，而不显示在表单中。</br>--> 如果程序规则使用当前事件类型的任何变量，该规则将无法评估并且不会显示消息。 |
| 显示键值/对（事件程序） | 用于显示从数据元素中提取的信息。 | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-complete.png) | **变量类型：** </br>_ 当前程序中最新事件的数据元素</br>_ 上一个事件的数据元素</br>_ 当前事件中的数据元素</br>_ 内置变量</br>键/值对将仅显示在指定部分的表单中。 |
| 显示键值/对（Traker程序） | 用于显示从数据元素中提取的信息。 | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-complete.png) | **1.变量类型：**</br>_当前事件中的数据元素</br>键/值对将仅在表单中显示指定部分。</br>**2.变量类型：**</br>_ 当前节目中最新事件的数据元素</br>_ 上一个事件的数据元素</br>_ 程序阶段最新事件的数据元素</br>_ 跟踪的实体属性</br>_ 内置变量</br>键/值对将仅显示在指标选项卡中，而不显示在表单中。 |
| 隐藏程序阶段 | 如果规则为真，则向用户隐藏整个程序阶段。 | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-na.png) | ![](resources/icons/icon-na.png) | ![](resources/icons/icon-na.png) | ![](resources/icons/icon-na.png) | ![](resources/icons/icon-complete.png) | 仅支持当前程序变量 ** 类型中最新事件的 ** 数据元素的操作规则。如果事件是自动生成的，则该规则将不适用。 |
| 发信息 | 发送消息会根据提供的消息模板触发通知。只要数据值发生更改，就会执行此操作。但是，可以通过在程序规则表达式中提供事件注册状态来控制此行为 | ![](resources/icons/icon-na.png) | ![](resources/icons/icon-na.png) | ![](resources/icons/icon-na.png) | ![](resources/icons/icon-na.png) | ![](resources/icons/icon-na.png) | ![](resources/icons/icon-na.png) | 此功能在服务器端执行。 |
| 排程讯息 | Schedule Message将在Expression在数据字段中提供的日期安排通知。 | ![](resources/icons/icon-na.png) | ![](resources/icons/icon-na.png) | ![](resources/icons/icon-na.png) | ![](resources/icons/icon-na.png) | ![](resources/icons/icon-na.png) | ![](resources/icons/icon-na.png) | 此功能在服务器端执行。 |

## 程序规则表达式中使用的函数 { #capture_app_pr_pre }

| 功能 | 功能说明 | 状态 | 实施注意事项 |
| --- | --- | :-: | --- |
| d2：ceil | 将输入参数四舍五入到最接近的整数。 | ![](resources/icons/icon-complete.png) |  |
| d2：楼层 | 将输入参数四舍五入到最接近的整数。 | ![](resources/icons/icon-complete.png) |  |
| d2：圆 | 将输入参数四舍五入到最接近的整数。 | ![](resources/icons/icon-complete.png) |  |
| d2：模数 | 将第一个参数除以第二个参数时产生模数。 | ![](resources/icons/icon-complete.png) |  |
| d2：zing | 如果值是负数，则将数字类型的参数评估为零，否则为值本身。 | ![](resources/icons/icon-complete.png) |  |
| d2：oizp | 如果值为零或正数，则将类型为number的参数评估为1，否则为零。 | ![](resources/icons/icon-complete.png) |  |
| d2：串联 | 从输入参数生成字符串连接的字符串。支持任意数量的参数。 | ![](resources/icons/icon-complete.png) | 请使用d2：concatenate函数，而不要使用“ +”，因为应用程序中的表达式评估器将添加数字。 |
| d2：daysBetween | 产生第一个和第二个参数之间的天数。如果第二个参数日期在第一个参数之前，则返回值为两个日期之间的负天数。静态日期格式为“ yyyy-MM-dd”。 | ![](resources/icons/icon-complete.png) |  |
| d2：星期之间 | 产生第一个参数和第二个参数之间的整周数。如果第二个参数日期在第一个参数之前，则返回值将是两个日期之间的负周数。静态日期格式为“ yyyy-MM-dd”。 | ![](resources/icons/icon-complete.png) |  |
| d2：monthsBetween | 产生第一个参数和第二个参数之间的完整月份数。如果第二个参数日期在第一个参数之前，则返回值为两个日期之间的负月份数。静态日期格式为“ yyyy-MM-dd”。 | ![](resources/icons/icon-complete.png) |  |
| d2：年之间 | 产生第一个参数和第二个参数之间的年数。如果第二个参数日期在第一个参数之前，则返回值为两个日期之间的负年数。静态日期格式为“ yyyy-MM-dd”。 | ![](resources/icons/icon-complete.png) |  |
| d2：addDays | 根据第一个参数日期产生一个日期，加上第二个参数天数。 | ![](resources/icons/icon-complete.png) |  |
| d2：计数 | 计算在参数中为源字段输入的值的数量。 | ![](resources/icons/icon-complete.png) |  |
| d2：countIfValue | 计算在第一个参数中为源字段输入的匹配值的数量。仅计算与第二个参数匹配的出现次数。 | ![](resources/icons/icon-complete.png) |  |
| d2：countIfZeroPos | 计算在参数中为源字段输入的零或正值的数量。源字段参数是程序中已定义源字段之一的名称。 | ![](resources/icons/icon-complete.png) |  |
| d2：hasValue | 返回给定对象参数中数字零和正值的数量。可以提供任意数量的参数。 | ![](resources/icons/icon-complete.png) |  |
| d2：validatePattern | 如果输入文本与提供的正则表达式模式完全匹配，则评估为true。正则表达式需要转义。 | ![](resources/icons/icon-complete.png) |  |
| d2：左 | 从第一个字符开始算起num-chars，计算到文本的左侧。 | ![](resources/icons/icon-complete.png) |  |
| d2：对 | 从最后一个字符开始计算num-chars，计算到文本的右侧。 | ![](resources/icons/icon-complete.png) |  |
| d2：子字符串 | 求值到由开始和结束字符号指定的字符串部分。 | ![](resources/icons/icon-complete.png) |  |
| d2：分割 | 用定界符分割文本，并保留第n个元素（第一个元素为0）。 | ![](resources/icons/icon-complete.png) |  |
| d2：长度 | 查找字符串的长度。 | ![](resources/icons/icon-complete.png) |  |
| d2：zpvc | 返回给定对象参数中数字零和正值的数量。可以提供任意数量的参数。 | ![](resources/icons/icon-complete.png) |  |
| d2：inOrgUnitGroup \ * | 评估当前组织单位是否在参数组中。可以使用ID或组织单位组代码定义自变量。 | ![](resources/icons/icon-complete.png) |  |
| d2:hasUserRole\*\* | 如果当前用户具有此角色，则返回true，否则返回false。 | ![](resources/icons/icon-complete.png) |  |
| d2:zScoreWFA\*\*\* | 函数根据WHO年龄加权指标提供的数据计算z得分。根据重量值，其值在-3.5至3.5之间变化。 | ![](resources/icons/icon-complete.png) |  |

> **注释**
>
> \* 在 DHIS 2 v2.30 中可用
>
> \*\* 在 DHIS 2 v2.31 及以上版本中可用
>
> \*\*\* 在 DHIS 2 v2.32 中可用

## 程序规则表达式中使用的标准变量 { #capture_app_pr_standard_vars }

在DHIS2 v2.30中可用

| 变量 | 功能说明 | 状态 | 实施注意事项 |
| --- | --- | :-: | --- |
| V {current_date} | 执行规则时包含当前日期。 | ![](resources/icons/icon-complete.png) |  |
| V {event_date} | 包含当前事件执行的事件日期。规则作为注册表格的一部分执行时将没有值。 | ![](resources/icons/icon-complete.png) |  |
| V {event_status} | 包含当前事件或注册的状态。 | ![](resources/icons/icon-complete.png) |  |
| V {due_date} \ * | 执行规则时，此变量将包含当前日期。注意：这意味着该规则可能会在不同时间产生不同的结果，即使没有其他改变。 | ![](resources/icons/icon-complete.png) |  |
| V {event_count} | 包含注册中的事件总数。 | ![](resources/icons/icon-complete.png) |  |
| V {enrollment_date} \ * | 包含当前注册的注册日期。对于单个事件程序将没有值。 | ![](resources/icons/icon-complete.png) |  |
| V {incident_date} \ * | 包含当前注册的事件日期。对于单个事件程序将没有值。 | ![](resources/icons/icon-complete.png) |  |
| V {enrollment_id} \ * | 当前注册的通用标识符字符串（UID）。对于单个事件程序将没有值。 | ![](resources/icons/icon-complete.png) |  |
| V {event_id} | 当前事件上下文的通用标识符字符串（UID）。规则作为注册表格的一部分执行时将没有值。 | ![](resources/icons/icon-complete.png) |  |
| V {orgunit_code} | 包含链接到当前注册的组织单位的代码。对于单个事件程序，将改用当前事件组织单元中的代码。 | ![](resources/icons/icon-complete.png) |  |
| V {environment} | 包含代表规则的当前运行时环境的代码。可能的值为“ WebClient”，“ AndroidClient”和“ Server”。当程序规则仅应在一种或多种客户端类型中运行时可以使用。 | ![](resources/icons/icon-complete.png) |  |
| V {program_stage_id} | 包含触发规则的当前程序阶段的ID。这可用于在特定程序阶段运行规则，或避免在某些阶段执行。在TEI注册表单中执行规则时，变量将为空。 | ![](resources/icons/icon-complete.png) |  |
| V {program_stage_name} | 包含触发规则的当前程序阶段的名称。这可用于在特定程序阶段运行规则，或避免在某些阶段执行。在TEI注册表单中执行规则时，变量将为空。 | ![](resources/icons/icon-complete.png) |  |

> **注意**
>
> \ *仅适用于跟踪器

## 网络版计划规则与Android版之间的区别 { #capture_app_pr_differences_web_android }

由于网络和Android应用程序当前使用的是不同的_program rule engine_，因此可能存在程序规则在一个系统中起作用，而在另一个系统中不起作用。一般而言，可以说Android的_程序规则引擎_更严格，因此，某些在DHIS2的网络版本中运行的程序规则在Android中将失败。本小节描述了主要差异以及如何修改规则以使它们在两个系统中均有效。

### 布尔类型的求值 { #capture_app_pr_differences_web_android_bool }

DHIS2 Web 版本将布尔类型视为 0 或 1（可以评估为 true 或 false），但 Android 仅将它们评估为 true 或 false。虽然这使得在 Web 中添加布尔值成为可能，但在 Android 中将失败；为了解决这个问题，需要额外的_程序规则变量_来将布尔值转换为可以操作的数字。请查看下表以获取示例和可能的解决方案。

对于下面的示例，请考虑以下事项：

- yn_prv1：是一个程序规则变量，已配置为获取“是/否”数据元素的值
- yn_prv2：是程序规则变量，已配置为获取“是/否”数据元素的值
- prv_boolean_one：是一个程序规则变量，已配置为获取“是/否”数据元素的值
- prv_boolean_two：是一个程序规则变量，已配置为获取“是/否”数据元素的值
- prv_boolean_one_to_number：是具有计算值的程序规则变量
- prv_boolean_two_to_number：是具有计算值的程序规则变量
- 有时将true用作程序规则条件，表示始终执行该操作
- 使用以下缩写词：
  - DE（数据元素）
  - PR（计划规则）
  - PRE（程序规则表达式）
  - PRC（程序规则条件）
  - PRV（程序规则变量）
  - PRA（程序规则操作）

| 计划规则条件 | 计划规则动作 | 网络版 | Android版 | 评论 |
| --- | --- | :-: | :-: | --- |
| d2：hasValue（'yn_prv1'）\|\| d2：hasValue（'yn_prv2'） | 为DE分配固定值 | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-complete.png) |  |
| ＃|\| ＃ | 为DE分配固定值 | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-complete.png) |  |
| d2：hasValue（'yn_prv1'）\|\| d2：hasValue（'yn_prv2'） | 将值分配给DE：＃{yn_prv1} +＃{yn_prv2} + 1 | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-negative.png) | 当布尔值被标记为表达式会导致 _true_+_false_+1 时，Android 中就会崩溃 |
| PR1: #{prv_boolean_one} <br /><br />PR2: #{prv_boolean_two} <br /><br />PR3: #{prv_boolean_one} \|\| ＃ | PRA1。将值“ 1”分配给PRV“＃{prv_bool_one_to_number}” <br /> <br /> PRA2。将值：“ 1”分配给PRV“＃{prv_bool_two_to_number}” <br /> <br /> PRA3。将值分配给DE：“＃{prv_bool_one_to_number} +＃{prv_bool_two_to_number} + 1” | ![](resources/icons/icon-negative.png) | ![](resources/icons/icon-negative.png) | 布尔值有2个变量，一个通过PRV定义“值形式DE”获取值，另一个通过PRA获得。如果未标记布尔值，则将其视为字符串而不是数字 |
| 四个PR为布尔值分配1或0，另外一个为加法运算。优先级从上到下<br /> <br /> PRC1：！d2：hasValue（'prv_boolean_one'）\|\| !#{prv_boolean_one} <br /><br />PRC2: d2:hasValue('prv_boolean_one') && #{prv_boolean_one}<br /><br />PRC3: !d2:hasValue('prv_boolean_two')  \|\| !#{prv_boolean_two} <br /><br />PRC4: d2:hasValue('prv_boolean_two') && #{prv_boolean_two} <br /><br />PRC5: true | PRA1: Assign value: "0" to PRV "#{prv_bool_one_to_number}" <br /><br />PRA2: Assign value: "1" to PRV "#{prv_bool_one_to_number}" <br /><br />PRA3: Assign value: "0" to PRV "#{prv_bool_two_to_number}" <br /><br />PRA4: Assign value: "1" to PRV "#{prv_bool_two_to_number}" <br /><br />PRA5: Assign value: "#{prv_bool_one_to_number} + #{prv_bool_two_to_number} + 1" to DE <br /> | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-complete.png) | 布尔值有2个变量，一个通过PRV定义“值形式DE”获取值，另一个通过PRA获得。 |

### 数字评估 { #capture_app_pr_differences_web_android_numbers }

DHIS2 Web版本以更灵活的方式评估数字（如果需要除法，则将值从整数转换为浮点数），但是，Android照这样进行数字转换（不进行转换），最终我得到了意外的结果。请查看下表以获取示例和可能的解决方案。

| 计划规则条件 | 计划规则动作 | 网络版 | Android版 | 评论 |
| --- | --- | :-: | :-: | --- |
| 真正 | 将值分配给DE：d2：daysBetween（'2020-05-13'，'2020-05-17'）/ 3 | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-negative.png) | 用户期望将除法计算为4/3，结果为1.3333。但是，Android不会将4强制转换为浮点数（与Web版本相同，为4.0），因此Android的结果是纯1，这是整数除法4/3的结果 |
| 真正 | 将值分配给DE：d2：daysBetween（'2020-05-13'，'2020-05-17'）/ 3.0 | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-complete.png) | 网页和Android中的除法结果均为1.33333 |

## 计划规则的更改（从应用程序 2.2 版开始）{ #capture_app_pr_changes }

该应用程序的 2.2 版本（2020 年 8 月发布）包含了一个新的规则引擎。该规则引擎需要对程序规则表达式执行一些可选和一些强制更改，以便使其在新应用程序中工作。以下小节包含这些更改的列表、如何检测它们以及如何修复它们。

### 评估“ d2：hasValue” { #capture_app_pr_changes_hasvalue }

#### 描述 { #description }

这是一个可选的更改。 _d2:hasValue_ 现在可以使用单引号或完整变量表达式。以下表达式有效：`(d2:hasValue('variable_name') 和 d2:hasValue(#{variable_name}))`

#### 如何通过API进行识别？ { #how-to-identify-via-api }

获取条件或程序规则操作使用d2：hasValue函数的programRules。

`https://example.org/api/programRules?fields=program[name],name,programRuleActions[data],condition&filter=programRuleActions.data:like:hasValue&filter=condition:like:hasValue&rootJunction=OR`

```xml
<programRule name="PR01 - Check variable with hasValue(#{variable})">
<condition>d2:hasValue(#{Age in years})</condition>
<program name="JB_Testing_2.2"/>
<programRuleActions>
<programRuleAction/>
</programRuleActions>
</programRule>
<programRule name="PR01 - Check variable with hasValue('variable')">
<condition>d2:hasValue('Age in years')</condition>
<program name="JB_Testing_2.2"/>
<programRuleActions>
<programRuleAction/>
</programRuleActions>
</programRule>
```

#### 如何解决？ { #how-to-fix-it }

上面的示例显示了使用hasValue函数的不同方式如何与2.2版产生相同的效果。没有强制性的更改，但是要记住，在编写新程序规则时，保持一致可能有助于避免问题。

### 变量评估 { #capture_app_pr_changes_eval_var }

#### 描述 { #description }

这是强制性的改变。 _!#{variable_name}_ 只能使用布尔类型变量（BOOLEAN 和 TRUE_ONLY）。

#### 如何通过API进行识别？ { #how-to-identify-via-api }

获取类型为NOT BOOLEAN或TRUE_ONLY的dataElements的programRulesVariables

`https://example.org/api/programRuleVariables?fields=name&filter=dataElement.valueType:!in:[TRUE_ONLY,BOOLEAN]&paging=False`

获取所有programRule.conditions `https://example.org/api/programRules?fields=displayName,condition&paging=False`

手动（或通过脚本以编程方式）检查是否在programRule.conditions列表（通过第二个API调用获得）中使用了任何程序规则变量（通过第一个API调用获得）。

例如，从第一个列表中，我们得到：

```xml
<programRuleVariable name="AdditionalMedication"/>
<programRuleVariable name="age"/>
<programRuleVariable name="Age in years"/>
<programRuleVariable name="AgeYears"/>
<programRuleVariable name="allergies"/>
<programRuleVariable name="apgarcomment"/>
```

我们可以与第二个列表进行比较：

```xml
<programRule>
<condition>!#{Pregant}</condition>
<displayName>PR03- !#{variable_name} - BOOLEAN</displayName>
</programRule>
<programRule>
<condition>!#{Age in years}</condition>
<displayName>PR03- !#{variable_name} - NOT BOOLEAN</displayName>
</programRule>
<programRule>
<condition>#{PregnancyStatus} != 'YES'</condition>
<displayName>Pregnancy status : false</displayName>
</programRule>
```

这表明NON BOOLEAN变量被错误地使用。

#### 如何解决？ { #how-to-fix-it }

确保在您的条件下评估BOOLEAN或TRUE_ONLY变量。如果程序规则变量不是该类型，请使用d2：hasValue（＃{variable_name}）或d2：hasValue（'variable_name'）更新程序规则条件

在上面的示例中，条件应更改为：

`<condition>!#{年龄}</condition>`
到：
`<condition>d2:hasValue('年龄')</condition>`

### 评估文字 { #capture_app_pr_changes_eval_text }

#### 描述 { #description }

这是强制性的改变。在 ASSIGN、DISPLAY TEXT、DISPLAY KEY/VALUE PAIR、SHOW WARNING、SHOW ERROR、WARNING ON COMPLETE 或 ERROR ON COMPLETE 类型的程序规则操作中，如果要计算和分配/显示的表达式是文本，则必须用单引号括起来引号。

#### 如何通过API进行识别？ { #how-to-identify-via-api }

Get the Program Rules which actions are of type text, with something on the field `data` and verify their data content to find strings without quotes.

`https://example.org/api/programRules?fields=program[name],name,programRuleActions[programRuleActionType,content,data]&filter=programRuleActions.programRuleActionType:in:[ASSIGN,DISPLAYTEXT,DISPLAYKEYVALUEPAIR,SHOWWARNING,SHOWERROR,WARNINGONCOMPLETE ,ERRORONCOMPLETE]&filter=programRuleActions.data:!null&paging=false`

例如，我们可以在此处检测到第一个“程序规则操作”中没有引号的文本字段错误，而第二个正确。

```xml
<programRule name="PR04- !#{variable_name} - BOOLEAN - Assign text without quotes">
<program name="JB_Testing_2.2"/>
<programRuleActions>
<programRuleAction>
<programRuleActionType>SHOWWARNING</programRuleActionType>
<data>embarazada</data>
<content>PR04 text with quotes is: </content>
</programRuleAction>
</programRuleActions>
</programRule>
```

```xml
<programRule name="PR04- !#{variable_name} - BOOLEAN - Assign text with quotes">
<program name="JB_Testing_2.2"/>
<programRuleActions>
<programRuleAction>
<programRuleActionType>SHOWWARNING</programRuleActionType>
<data>'embarazada'</data>
<content>PR04 text with quotes is: </content>
</programRuleAction>
</programRuleActions>
</programRule>
```

#### 如何解决？ { #how-to-fix-it }

Scan the generated list (via the suggested API calls) to find `data` components of the Program Rule Action where text is not quoted, then go to each of the identified Program Rules and update them.

### 字符串和对象的串联 { #capture_app_pr_changes_concat }

#### 描述 { #description }

这是强制性的改变。在 ASSIGN、DISPLAY TEXT、DISPLAY KEY/VALUE PAIR、SHOW WARNING、SHOW ERROR、WARNING ON COMPLETE 或 ERROR ON COMPLETE 类型的程序规则操作中，如果要计算和分配/显示的表达式是文本，则必须用单引号括起来引号（与之前的更改相同）；但是，最重要的是，如果需要连接两个字符串或函数组合，则必须使用 _d2:concatenate_ 函数。

#### 如何通过API进行识别？ { #how-to-identify-via-api }

获取字段 `data` 中任何内容的文本类型操作的程序规则，并验证其数据内容，以检查是否使用了 d2:concatenate 函数来连接两个或多个字符串（或其他对象）。

获取程序规则，其中哪些操作为文本类型，并验证其数据内容以查找不带引号的字符串。

`http://localhost:8034/api/programRules?fields=program[name],name,programRuleActions[programRuleActionType,content,data]&filter=programRuleActions.programRuleActionType:in:[ASSIGN,DISPLAYTEXT,DISPLAYKEYVALUEPAIR,SHOWWARNING,SHOWERROR,WARNINGONCOMPLETE ,ERRORONCOMPLETE]&filter=programRuleActions.data:!null&paging=false`

例如，我们可以在不使用d2：concatenate的情况下在一个动作中检测到两个字符串的错误。

```xml
<programRule name="PR08- Assign text and variable without concatenate">
<program name="JB_Testing_2.2"/>
<programRuleActions>
<programRuleAction>
<programRuleActionType>SHOWWARNING</programRuleActionType>
<data>'Age is 10 and modulus' 'another string'</data>
<content>PR05 text without concat is: </content>
</programRuleAction>
</programRuleActions>
</programRule>
```

#### 如何解决？ { #how-to-fix-it }

Scan the generated list (via the suggested API calls) to find `data` components of the Program Rule Action where two or more objects are being concatenated and update them to use the _d2:concatenate_ function.

In the example above the `data` should change from:

`<data>'年龄为 10 且模数''另一个字符串'</data>`
到：
`<data>d2:concatenate('年龄为 10 和模数','另一个字符串')</data>`
