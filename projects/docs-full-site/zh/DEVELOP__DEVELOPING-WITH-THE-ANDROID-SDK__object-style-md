---
edit_url: "https://github.com/dhis2/dhis2-android-sdk/blob/master/docs/content/developer/object-style.md"
revision_date: '2024-05-06'
tags:
- Develop
---

# 对象样式 { #android_sdk_object_style }

一些元素包括称为“样式”的属性，该属性定义图标和颜色。这些视觉信息对于快速浏览应用程序非常有用。一些典型的用例：

- 在程序列表中区分不同的程序和trackedEntityType。
- 在带有optionSet的数据输入表单中，显示带有图标和颜色而不是名称的选项。
- 程序中的不同程序阶段。

此属性是可选的，在大多数情况下未定义。对象样式可能具有图标，或颜色或两者兼有。

## 图标 { #icon } 

DHIS2 includes a predefined set of icons. Those icons are included in the SDK and are located within the resources, in the "drawable" folder.

Staring on version v41, it is possible to upload user-defined icons and assign them to metadata objects. The actual images of these icons are stored as a FileResource and must be explicitly downloaded in a separate query.

```kt
d2.fileResourceModule().fileResourceDownloader()
    .byDomainType().eq(FileResourceDomainType.ICON)
    .download()
```

You can get the information about a particular icon by using the IconCollectionRepository. It returns an Icon object, which is a sealed class with two possible values: Default or Custom.  

The way to render the actual image will depend on the Icon type.

```kt

val icon = d2.iconModule().icons().key("icon_key").blockingGet()

icon?.let {
    when (icon) {
        is Icon.Custom -> {
            val path = icon.path
            val fileResourceUid = icon.fileResourceUid
            // Use this information to load the file
        }

        is Icon.Default -> {
            val resourceName = icon.key
            // Use this information to load the resource
        }
    }
}
```

## 颜色 { #color } 

它包含颜色的十六进制值。它可用于自定义背景，文本颜色，行标题等。

```kt
program.style().color()    // For example #9C33FF
```

