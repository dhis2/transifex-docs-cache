---
edit_url: "https://github.com/dhis2/dhis2-android-sdk/blob/master/docs/content/developer/object-style.md"
revision_date: '2024-05-06'
tags:
- Develop
---

# 对象样式 { #android_sdk_object_style }

一些元素包括称为“样式”的属性，该属性定义图标和颜色。这些视觉信息对于快速浏览应用程序非常有用。一些典型的用例：

- 在程序列表中区分不同的程序和trackedEntityType。
- 在带有optionSet的数据输入表单中，显示带有图标和颜色而不是名称的选项。
- 程序中的不同程序阶段。

此属性是可选的，在大多数情况下未定义。对象样式可能具有图标，或颜色或两者兼有。

## 图标 { #icon } 

DHIS2 包含一组预定义的图标。这些图标包含在 SDK 中，位于资源的 "可绘制 "文件夹中。

从 v41 版本开始，可以上传用户定义的图标并将其分配给元数据对象。这些图标的实际图像存储为文件资源（FileResource），必须在单独的查询中明确下载。

```kt
d2.fileResourceModule().fileResourceDownloader()
    .byDomainType().eq(FileResourceDomainType.ICON)
    .download()
```

您可以使用 IconCollectionRepository 获取特定图标的信息。它返回一个图标对象，这是一个密封类，有两种可能的值：默认值或自定义值。  

渲染实际图像的方式取决于图标类型。

```kt

val icon = d2.iconModule().icons().key("icon_key").blockingGet()

icon.let {
    当 (图标) {
        is Icon.Custom -> {
            val path = icon.path
            val fileResourceUid = icon.fileResourceUid
            // 使用此信息加载文件
        }

        是 Icon.Default -> {
            val resourceName = icon.key
            // 使用此信息加载资源
        }
    }
}
```

## 颜色 { #color } 

它包含颜色的十六进制值。它可用于自定义背景，文本颜色，行标题等。

```kt
program.style().color()    // For example #9C33FF
```

