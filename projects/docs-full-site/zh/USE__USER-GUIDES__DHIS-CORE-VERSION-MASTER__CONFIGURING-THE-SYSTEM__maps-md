---
edit_url: "https://github.com/dhis2/dhis2-docs/blob/master/src/user/configure-the-gis-app.md"
revision_date: '2024-04-05'
tags:
- 使用
- DHIS核心 主版
---

# 配置 DHIS2 映射 { #gis_creating }

## 语境 { #gis_creating_context }

设置 DHIS2 地图仅意味着存储组织的坐标
您想要在数据库中的地图上显示的单位。坐标常常是
以专有格式分发，并且需要转换为
DHIS2 理解的格式。 ESRI shapefile 是一个常见的
用于桌面应用程序的地理空间矢量数据格式。你可能会发现
您所在国家/地区的 shapefile [此处](http://www.diva-gis.org/gdata) 或
网络上还有许多其他地理空间数据存储库。一定的工作量
需要完成才能在 DHIS2 地图中使用这些坐标，即
将数据转换为合适的格式并确保名称
包含在地理空间数据中与名称完全匹配
他们应该匹配的组织单位。

仅具有 POINT 几何类型的组织单位可以通过
此时维护应用程序。要修改 POLYGON 几何形状，请使用
**导入/导出应用程序中的组织单位几何导入**。

要编辑组织单位的 POINT 坐标，请打开维护
应用程序并导航至“组织单位”部分。点击组织
您想要查看或编辑的单位，您可以搜索或过滤列表
在屏幕的左侧。选择组织单位后，
您可以编辑 **纬度** 和 **经度** 值来更新 POINT
坐标。如果组织单位具有 POLYGON 几何图形，则坐标
无法编辑。

如果您要添加或更新大量单位的坐标，或者
如果您需要更新多边形几何形状，您应该使用自动
**组织单位几何导入**将在下一节中进行说明。

> **Important**
>
> The only coordinate reference system (CRS) supported by DHIS2 is EPSG:4326,
> also known as geographic longitude/latitude. Coordinates must be
> stored with the longitude (east/west position) preceding the latitude
> (north/south position). If your vector data is in a different CRS than
> EPSG 4326, you will need to reproject the data first before importing
> into DHIS2.

## 导入 GeoJSON 格式的坐标 { #geojson_creating_setup }

步骤 1 - 将地理空间数据转换为 GeoJSON 格式

如果您的数据已经是使用地理数据的 GeoJSON 格式，请跳过此步骤
经度和纬度。

推荐的地理格式转换工具称为
“ogr2ogr”。这应该适用于大多数 Linux 发行版
`sudo apt-get install gdal-bin`。对于 Windows，请访问
<http://fwtools.maptools.org/>并下载“FWTools”，安装并打开
打开 FWTools 命令 shell。在格式转换过程中我们还想要
确保输出具有正确的坐标投影
（称为 EPSG:4326，带有地理经度和纬度）。为了更多
详细地理坐标参考请参考这里
[网站](http://www.epsg-registry.org/)。如果您已经重新投影
将地理数据传输到地理纬度/经度 (EPSG:4326) 系统，
无需显式定义输出坐标系，假设
`ogr2ogr` 可以确定输入空间参考系。注意
大多数 GeoJSON 文件使用 EPSG:4326 系统。您可以确定
通过执行以下命令来建立空间参考系统。

    ogrinfo -al -so 文件名.shp

此命令假设您的地理空间数据采用 ESRI Shapefile (.shp) 格式，
但[支持其他几种格式](https://gdal.org/drivers/vector/)。

假设 `ogrinfo` 报告的投影为 EPSG:27700、
我们可以执行以下命令将其转换为 EPSG:4326
命令将其转换为 EPSG:4326。

    ogr2ogr -s_srs EPSG:27700 -t_srs EPSG:4326 -f GeoJSON 文件名.geojson 文件名.shp

如果地理数据已经在 EPSG:4326 中，您可以简单地转换
通过执行以下命令将 shapefile 转换为 GeoJSON。

    ogr2ogr -f GeoJSON 文件名.geojson 文件名.shp

您将在与 shapefile 相同的文件夹中找到创建的 GeoJSON 文件。

第 2 步 - 简化/概括您的地理数据

地理数据文件中的边界通常也非常准确
更能满足基于网络的 GIS 的需求。这通常不会影响
在本地系统上使用 GIS 文件时的性能，但它是
通常需要优化基于网络的地理数据
DHIS2 GIS系统。所有地理数据都需要从以下位置下载
服务器并在浏览器中呈现，因此如果数据过于复杂，
DHIS2 地图的性能将受到负面影响。这
优化过程可以描述如下：

对于多边形，我们可以通过以下方式使边界线不那么详细
删除一些线点。这种概括将
导致多边形退化。然而，之后
进行一些实验，可以得到最佳的泛化水平
发现，多边形的精度在视觉上是可以接受的，并且
性能最佳。备份您的文件
在你开始之前。一种可能的方法是使用
[MapShaper](http://www.mapshaper.org/) 这是一个在线工具，可以
用于概括地理数据。要使用 MapShaper，只需上传
您的文件到该网站。然后，单击顶部菜单中的_Simplify_，然后
选择一种简化方法。屏幕顶部将显示一个滑块
从 100% 开始。通常将其拖至 30% 左右是可以接受的。
当您对结果感到满意时，单击右上角的“导出”
角落。选择“GeoJSON”文件格式，然后单击“导出”按钮
下载文件。使用新的简化版继续下一步
GeoJSON 文件。

第 3 步 - 准备 GeoJSON 文件

不幸的是，GeoJSON 文件尚未准备好导入。打开它在
强大的文本编辑器，例如 Geany (Linux) 或 Notepad++ (Windows)。 GeoJSON 是
基于 JSON 的格式。在 GeoJSON 文件中，组织单位表示为
特征。每个特征都应该有几何形状、属性（attribute）和
他们可以有一个ID。

为了从 GeoJSON 文件导入地理空间数据，DHIS2 必须匹配
每个组织的数据库中都有一个组织单位。每个 GeoJSON
换句话说，功能必须包含对其相应的引用
组织单位。引用本身必须是三种可能的之一
DHIS2 标识符：**uid**、**代码** 或 **名称**。

默认情况下，我们将尝试将组织单位 uid 与 GeoJSON 进行匹配
功能 ID。您可以添加或更改 id 字段，使其与 uid 匹配
组织单位。您还可以通过 GeoJSON 中的属性进行匹配
特征属性。该属性可以与组织**uid**进行匹配，
**代码**或**名称**。

请注意，使用的标识符必须**唯一**标识
组织单位（例如，如果有两个组织单位
相同名称或代码的数据库，这些无法正确匹配
任何一个）。由于 _uid_ 是唯一保证唯一的标识符
最稳健的选择。但是，由于名称匹配通常更容易
（假设该名称已经是您数据的一部分）。

简要查看标识符，并将其与
数据库中的相应值。如果它们看起来相当不错，
现在是时候在import-export模块中进行预览了。

转到 **导入/导出应用程序**，然后单击 **组织单位几何导入**。
选择 GeoJSON 文件以及您希望如何将 GeoJSON 功能与
组织单位。单击 **开始试运行** 并查看摘要。
寻找新的/更新的组织单位。我们的目的是添加坐标
数据库中已有的组织单位，因此我们需要尽可能多的
尽可能更新，0 新。那些列为新的将被创建为
根单位并弄乱 DHIS2 中的组织单位树。如果有列出的话
作为新的，单击数字，将出现相关的组织单位
在下面的列表中。如果与以下内容相比有任何轻微的拼写错误
数据库中的组织单位名称 - 修复它们并再次开始试运行。
否则，请单击列表下方的“全部放弃”按钮，然后单击
**开始导入**按钮。

如果导入过程成功完成，您现在应该能够
利用 DHIS2 地图中的地理数据。如果没有，检查日志
获取提示并查找常见错误，例如：

\- GeoJSON 文件中的名称重复。数据库中的名称列是
唯一且不接受两个同名的组织单位。

\-数据库中organizationalunit表中的“ shortname”列
varchar定义太小。将其增加到100。

\- GeoJSON 文件中的特殊名称字符。

\- 输入 GeoJSON 格式错误，请使用 [GeoJSONLint](https://geojsonlint.com/)
来测试内容。

## 以 GML 格式导入坐标 { #gis_creating_setup }

第1步-简化/概括您的地理数据

地理数据文件中的边界通常也非常准确
更能满足基于网络的 GIS 的需求。这通常不会影响
在本地系统上使用 GIS 文件时的性能，但它是
通常需要优化基于网络的地理数据
DHIS2 GIS系统。所有地理数据都需要从以下位置下载
服务器并在浏览器中呈现，因此如果数据过于复杂，
DHIS2 地图的性能将受到负面影响。这
优化过程可以描述如下：

对于多边形，我们可以通过以下方式使边界线不那么详细
删除一些线点。这种概括将
导致多边形退化。然而，之后
进行一些实验，可以得到最佳的泛化水平
发现，多边形的精度在视觉上是可以接受的，并且
性能最佳。备份您的 shapefile
在你开始之前。一种可能的方法是使用
[MapShaper](http://www.mapshaper.org/) 这是一个在线工具，可以
用于概括地理数据。要使用 MapShaper，只需将文件上传到站点即可。然后，单击顶部菜单中的“简化”并选择一种简化方法。屏幕顶部将显示一个滑块，从 100% 开始。通常将其拖至 30% 左右是可以接受的。当您对结果感到满意时，单击右上角的“导出”。选择 GeoJSON 文件格式，然后单击导出按钮将文件下载到您的计算机。

第 2 步 - 转换为 GML

推荐的地理格式转换工具称为
“ogr2ogr”。这应该适用于大多数 Linux 发行版 `sudo apt-get install gdal-bin`。对于 Windows，请转至 <http://fwtools.maptools.org/> 并下载
“FWTools”，安装它并打开 FWTools 命令 shell。在此期间
格式转换我们还要确保输出有正确的
坐标投影（称为 EPSG:4326，带有地理经度和
纬度）。如需更详细的地理坐标参考，
请参阅此[网站](http://www.epsg-registry.org/)。如果你有
已经将地理数据重新投影到地理
纬度/经度 (EPSG:4326) 系统，无需明确
定义输出坐标系，假设`ogr2ogr`可以
确定输入空间参考系统。请注意，大多数 shapefile
使用 EPSG:4326 系统。您可以确定空间参考
系统通过执行以下命令。

    ogrinfo -al -so 文件名.json

假设 `ogrinfo` 报告的投影为 EPSG:27700、
我们可以执行以下命令将其转换为 EPSG:4326
命令将其转换为 EPSG:4326。

    ogr2ogr -s_srs EPSG:27700 -t_srs EPSG:4326 -f GML 文件名.gml 文件名.json

如果地理数据已经在EPSG：4326中，则只需进行转换
通过执行以下命令将shapefile转换为GML。

    ogr2ogr -f GML 文件名.gml 文件名.json

您将在shapefile所在的文件夹中找到创建的GML文件。

第3步-准备GML文件

不幸的是，GML文件尚未准备好导入。在其中打开
强大的文本编辑器，例如Geany（Linux）或Notepad ++（Windows）。 GML是
基于XML的格式，这意味着您将识别常规XML
标签层次结构。在GML文件中，组织单位表示为
\ <gml:featureMember\>。在功能成员内部，我们通常会发现很多
属性，但是我们只是要导入它们的坐标。

为了从 GML 的要素成员导入地理空间数据
输入，DHIS2 必须将它们中的每一个与其中的组织单位相匹配
数据库。换句话说，功能成员元素必须包含
参考其相应的组织单位。参考文献本身
必须是三个可能的 DHIS2 标识符之一：**uid**、**code** 或
**姓名**。选择的标识符必须作为属性提供
每个特征成员元素。进口商将寻找具有
_Uid_、_Code_ 或 _Name_ 的本地名称，例如“ogr:姓名”或
“任何前缀：代码”。

如果您的功能成员已经包含标识符的属性，则您
希望使用（例如区域名称）可以使用搜索和替换
在文本编辑器中将这些元素重命名为DHIS2将识别的名称
（请参见下表）。这通常是适用的工作流程
使用名称作为标识符时（源shapefile甚至GML
通常会包含其定义的每个区域的名称）。

表：GML 导入支持的组织单位标识符

| 匹配优先级 | 识别码 | 有效拼写  | 保证独一无二 |
| ----------------- | ---------- | ---------------- | ----------------- |
| 1                 | 用户标识        | uid、uid、uid    | 是的               |
| 2                 | 码       | 代码，代码，代码 | 不                |
| 3                 | 名称       | 姓名，姓名，姓名 | 不                |

在重命名属性的情况下，通常会找到一个名为
类似“ogr:DISTRICT*NAME”、“ogr:NAME_1”并将其重命名为
“食人魔：名字”。另一方面，如果使用 \_code* 或 _uid_ 标识符，
在 DHIS2 数据库中查找正确的值并进行检查
GML 文件，添加每个相应特征的属性
会员可能是必要的。在任何情况下，重要的是
认识到所使用的标识符必须**唯一**标识一个
组织单位（例如，如果有两个组织单位
相同名称或代码的数据库，这些无法正确匹配
任何一个）。由于 _uid_ 是唯一保证唯一的标识符
最稳健的选择。但是，由于名称匹配通常更容易
（假设该名称已经是您数据的一部分），这是一种可行的方法
解决唯一性冲突可以是匹配任何非唯一命名的
不同标识符（最好是 uid）上的组织单位以及
安息在他们的名字上。

如上表所示，有一个匹配的优先级，即
为同一功能成员提供了两个或多个标识符，
匹配将在最高优先级的标识符上执行。另请注意
GML中可以使用的有效属性。命名空间前缀
不重要，因为仅使用本地名称。

执行 GML 文件准备的一个常见陷阱是语法 -
或元素命名错误。因此请确保所有属性
GML 文件的启动和终止均正确对应
标签。还要确保属性遵循给定的有效
属性名称的拼写。假设识别属性
看起来像例如\<ogr:Name\>莫扬巴区\</ogr:Name\>,
\<somePrefix:uid\>x7uuia898nJ\</somePrefix:uid\> 或
\<CODE\>OU*12345\</CODE\>。另一个常见错误是没有确保
标识符完全匹配，尤其是在使用 \_name* 属性时。
所有匹配均按精确值进行，这意味着“Moyamba”在
源 GML 文件不会与“Moyamba District”匹配
数据库。

简要查看标识符，并将其与
数据库中的相应值。如果它们看起来相当不错，
现在是时候在import-export模块中进行预览了。

转到 **导入/导出应用程序**，单击 **组织单位几何导入** 并选择 **GML** 格式。选择 GML 文件并单击 **开始试运行** 并查看摘要。寻找新的/更新的组织单位。我们的
目的是为现有的组织单位添加坐标
在数据库中，所以我们希望尽可能多的更新和 0 新的。那些
列为新的将被创建为根单位并搞乱组织
DHIS2 中的单元树。如果有任何列为新的，请单击该编号和
相关组织单位将出现在下面的列表中。如果有
与以下组织单位名称相比是否存在轻微拼写错误
数据库 - 修复它们并再次进行预览。否则，请单击
列表下方的“全部放弃”按钮，然后“全部导入”按钮
位于列表上方。

如果导入过程成功完成，您现在应该可以
利用DHIS2 GIS中的地理数据。如果没有，请检查日志
寻找提示并查找常见错误，例如：

\-名称在GML文件中重复。数据库中的名称列为
唯一，并且不接受两个具有相同名称的组织单位。

\-数据库中organizationalunit表中的“ shortname”列
varchar定义太小。将其增加到100。

\-GML文件中的特殊名称字符。确保将它们转换为
适当的XML等效项或转义序列。

\-输入GML格式错误，标签不匹配

