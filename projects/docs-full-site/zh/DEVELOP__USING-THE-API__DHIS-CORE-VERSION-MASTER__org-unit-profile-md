---
edit_url: "https://github.com/dhis2/dhis2-docs/blob/master/src/developer/web-api/organization-unit-profile.md"
revision_date: '2021-11-19'
tags:
- DHIS核心 主版
- Develop
---

# 组织部门资料{ #org_unit_profile }

组织单位配置文件资源允许您定义和检索 DHIS 2 中组织单位的信息配置文件。

```
/api/organisationUnitProfile
```

可以创建单个组织单位配置文件并将其应用于所有组织单位。

组织单位概况的信息部分包括：

- 名称、简称、描述、上级组织单位、级别、开放日期、关闭日期、URL。
- 联系人、地址、电子邮件、电话号码（如果存在）。
- 位置（经度/纬度）。
- 元数据属性（可配置）。
- 组织单位组集和组（可配置）。
- 数据元素、指标、报告率、计划指标（可配置）的汇总数据。

## 创建组织部门资料{ #create-organisation-unit-profile }

To define the organisation unit profile you can use a `POST` request:

```
POST /api/organisationUnitProfile
```

The payload in JSON format looks like this, where `attributes` refers to metadata attributes,  `groupSets` refer to organisation unit group sets and `dataItems` refers to data elements, indicators, data sets and program indicators:

```json
{
  "attributes": [
    "xqWyz9jNCA5",
    "n2xYlNbsfko"
  ],
  "groupSets": [
    "Bpx0589u8y0",
    "J5jldMd8OHv"
  ],
  "dataItems": [
    "WUg3MYWQ7pt",
    "vg6pdjObxsm",
    "DTVRnCGamkV",
    "Uvn6LCg7dVU",
    "eTDtyyaSA7f"
  ]
}
```

定义配置文件需要使用 `F_ORG_UNIT_PROFILE_ADD` 权限。

## 获取组织部门资料{ #get-organisation-unit-profile }

要检索组织单位配置文件定义，可以使用 `GET` 请求：

```
GET /api/organisationUnitProfile
```

响应将采用 JSON 格式。

## 获取组织部门资料数据{ #get-organisation-unit-profile-data }

要检索组织单位配置文件数据，可以使用 `GET` 请求：

```
GET /api/organisationUnitProfile/{org-unit-id}/data?period={iso-period}
```

组织单位配置文件数据端点将配置文件定义与关联的信息/数据值结合起来。

* `org-unit-id` 路径变量是必需的，指的是为其提供聚合数据的组织单位的 ID。
* `iso-period` 查询参数是可选的，指的是该时段的 ISO 时段 ID，为数据项提供聚合数据。如果未指定，_今年_相对期间将用作后备。

响应将包括以下部分：

* `info`：有关组织单位的固定信息。
* `attributes`：具有相应属性值的元数据属性。
* `groupSets`：组织单元组与该组织单元所属的相应组织单元组的集合。
* `dataItems`：具有相应聚合数据值的数据项。

请注意，将执行访问控制检查，并且将省略当前用户无法访问的元数据项。

请求示例如下所示：

```
GET /api/organisationUnitProfile/DiszpKrYNg8/data?period=2021
```

JSON 格式的配置文件数据响应有效载荷如下所示，其中 `id` 和 `label` 字段指的是元数据项，而 `value` 字段指的是相关值：

```json
{
  "info": {
    "id": "DiszpKrYNg8",
    "code": "OU_559",
    "name": "Ngelehun CHC",
    "shortName": "Ngelehun CHC",
    "parentName": "Badjia",
    "level": 4,
    "levelName": "Facility",
    "openingDate": "1970-01-01T00:00:00.000",
    "longitude": -11.4197,
    "latitude": 8.1039
  },
  "attributes": [
    {
      "id": "n2xYlNbsfko",
      "label": "NGO ID",
      "value": "GHE51"
    },
    {
      "id": "xqWyz9jNCA5",
      "label": "TZ code",
      "value": "NGE54"
    }
  ],
  "groupSets": [
    {
      "id": "Bpx0589u8y0",
      "label": "Facility Ownership",
      "value": "Public facilities"
    },
    {
      "id": "J5jldMd8OHv",
      "label": "Facility Type",
      "value": "CHC"
    }
  ],
  "dataItems": [
    {
      "id": "WUg3MYWQ7pt",
      "label": "Total Population",
      "value": 3503
    },
    {
      "id": "DTVRnCGamkV",
      "label": "Total population < 1 year",
      "value": 140
    },
    {
      "id": "vg6pdjObxsm",
      "label": "Population of women of child bearing age (WRA)",
      "value": 716
    },
    {
      "id": "Uvn6LCg7dVU",
      "label": "ANC 1 Coverage",
      "value": 368.2
    },
    {
      "id": "eTDtyyaSA7f",
      "label": "FIC <1y",
      "value": 291.4
    }
  ]
}
```

## 上传组织部门的图片 { #upload-image-for-organisation-unit }

要为组织单位上传图片，可以使用 `fileResources` 端点。

```
/api/fileResources
```

The `fileResource` endpoint accepts a raw file as the request body. The `JPG`, `JPEG` and `PNG` formats are supported for organisation unit images. The domain for organisation unit images is `ORG_UNIT`.

有关 `fileResources` 端点的详细信息，请参阅*元数据*部分中的*文件资源*。 

To upload an image you can send a `POST` request with `ORG_UNIT` as domain query parameter together with the image as the request payload. The `Content-Type` header should match the type of file being uploaded.

```
POST /api/fileResources?domain=ORG_UNIT
```

JSON 响应中的 `response` > `fileResource` 对象的 `id ` 属性将包含文件资源标识符的引用。

组织单位实体有一个 `image` 属性，指向文件资源图像。要在组织单位上设置文件资源引用，可以向组织单位发送带有 JSON 有效负载的`PATCH`请求：

```
PATCH /api/organisationUnits/{id}
```

```json
{ 
  "image": "{file-resource-id}" 
}
```

或者，也可以使用带有完整组织单位有效载荷（为简洁起见省略字段）的 `PUT` 请求：

```
PUT /api/organisationUnits/{id}
```

```json
{
  "id": "Rp268JB6Ne4",
  "name": "Adonkia CHP",
  "image": {
    "id":  "{file-resource-iid}"
  }
}
```

## 获取组织部门的图片 { #get-image-for-organisation-unit }

组织单位实体有一个 `image` 对象，该对象通过标识符指向文件资源。您可以从 `organisationUnits` 端点获取组织单位信息。如果设置了，JSON 格式如下：

```
GET /api/organisationUnits/{id}
```

```json
{
  "id": "Rp268JB6Ne4",
  "name": "Adonkia CHP",
  "image": {
    "id":  "{file-resource-id}"
  }
}
```

图像文件资源标识符可用于向 `fileResources` 端点发出请求，以检索文件内容：

```
GET /api/fileResources/{id}/data
```

The `Content-Type` header will reflect the type of file being retrieved.

