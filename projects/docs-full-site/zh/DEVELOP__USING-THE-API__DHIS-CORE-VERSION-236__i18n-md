---
edit_url: "https://github.com/dhis2/dhis2-docs/blob/2.36/src/developer/web-api/i18n.md"
revision_date: "2021-06-14"
tags:
    - Develop
    - DHIS 核心版本 2.36
---

# 国际化 { #i18n }

## 语言环境 { #webapi_locales }

DHIS2 支持用户界面和数据库的翻译
内容。

### UI语言环境 { #ui-locales }

您可以通过以下方式检索用户界面的可用区域设置
以下资源带有 GET 请求。 XML 和 JSON 资源
支持表示。

    / api / 33 / locales / ui

### 数据库内容语言环境 { #database-content-locales }

您可以使用 GET 和
通过以下资源 POST 请求。 XML 和 JSON 资源
支持表示。

    / api / 33 / locales / db

## 翻译 { #webapi_translations }

DHIS2 允许翻译数据库内容。您可以使用 _translations_ 资源通过 Web API 处理翻译。

    / api / 33 / translations

### 创建翻译 { #create-a-translation }

您可以使用JSON格式的POST请求创建翻译：

```json
{
    "objectId": "P3jJH5Tu5VC",
    "className": "DataElement",
    "locale": "es",
    "property": "name",
    "value": "Casos de fiebre amarilla"
}
```

    POST / api / 33 / translations

下表列出了支持翻译的属性。

 <table>
 <caption>属性名称</caption>
 <colgroup>
 <col style="width: 50%" />
 <col style="width: 50%" />
 </colgroup>
 <thead>
 <tr class="header">
 <th>属性名称</th>
 <th>说明</th>
 </tr>
 </thead>
 <tbody>
 <tr class="odd">
 <td>名称</td>
 <td>对象名称</td>
 </tr>
 <tr class="even">
 <td>短名称</td>
 <td>对象简称</td>
 </tr>
 <tr class="odd">
 <td>说明</td>
 <td>对象描述</td>
 </tr>
 </tbody>
 </table>

下表列出了支持翻译的类。

 <table>
 <caption>类名称</caption>
 <colgroup>
 <col style="width: 34%" />
 <col style="width: 65%" />
 </colgroup>
 <thead>
 <tr class="header">
 <th>类名称</th>
 <th>说明</th>
 </tr>
 </thead>
 <tbody>
 <tr class="odd">
 <td> DataElementCategoryOption </td>
 <td>类别选项</td>
 </tr>
 <tr class="even">
 <td> DataElementCategory </td>
 <td>类别</td>
 </tr>
 <tr class="odd">
 <td> DataElementCategoryCombo </td>
 <td>类别组合</td>
 </tr>
 <tr class="even">
 <td>数据元素</td>
 <td>数据元素</td>
 </tr>
 <tr class="odd">
 <td> DataElementGroup </td>
 <td>数据元素组</td>
 </tr>
 <tr class="even">
 <td> DataElementGroupSet </td>
 <td>数据元素组集</td>
 </tr>
 <tr class="odd">
 <td>指示灯</td>
 <td>指示灯</td>
 </tr>
 <tr class="even">
 <td>指标类型</td>
 <td>指示器类型</td>
 </tr>
 <tr class="odd">
 <td>指标组</td>
 <td>指标组</td>
 </tr>
 <tr class="even">
 <td> IndicatorGroupSet </td>
 <td>指标组设置</td>
 </tr>
 <tr class="odd">
 <td>组织单位</td>
 <td>组织单位</td>
 </tr>
 <tr class="even">
 <td> OrganisationUnitGroup </td>
 <td>组织单位组</td>
 </tr>
 <tr class="odd">
 <td> OrganisationUnitGroupSet </td>
 <td>组织单位组设置</td>
 </tr>
 <tr class="even">
 <td>数据集</td>
 <td>数据集</td>
 </tr>
 <tr class="odd">
 <td>部分</td>
 <td>数据集部分</td>
 </tr>
 <tr class="even">
 <td>验证规则</td>
 <td>验证规则</td>
 </tr>
 <tr class="odd">
 <td> ValidationRuleGroup </td>
 <td>验证规则组</td>
 </tr>
 <tr class="even">
 <td>程序</td>
 <td>程序</td>
 </tr>
 <tr class="odd">
 <td>程序阶段</td>
 <td>程序阶段</td>
 </tr>
 <tr class="even">
 <td> TrackedEntityAttribute </td>
 <td>跟踪的实体属性</td>
 </tr>
 <tr class="odd">
 <td> TrackedEntity </td>
 <td>跟踪的实体</td>
 </tr>
 <tr class="even">
 <td> RelationshipType </td>
 <td>跟踪实体实例的关系类型</td>
 </tr>
 <tr class="odd">
 <td>选项设置</td>
 <td>选项集</td>
 </tr>
 <tr class="even">
 <td>属性</td>
 <td>元数据的属性</td>
 </tr>
 </tbody>
 </table>

### 获取翻译 { #get-translations }

您可以通过翻译资源浏览所有翻译：

    获取/api/33/翻译

您可以使用标准过滤技术来获取翻译
兴趣。例如。获取西班牙语数据元素的所有翻译
您可以使用此请求的语言环境：

    /api/33/translations.json?fields=*&filter=className:eq:DataElement&filter=locale:eq:es

要获取所有属性的特定对象的翻译，请执行以下操作：

    /api/33/translations.json?fields=*&filter=className:eq:DataElement
      ＆filter = locale：eq：fr＆filter = objectId：eq：fbfJHSPpUQD

## 国际化 { #webapi_i18n }

为了检索翻译字符串的键值对，您可以使用 _i18n_ 资源。

    / api / 33 / i18n

端点位于 _/api/i18n_ ，请求格式是一个简单的键值对数组：

```json
[
  "access_denied",
  "uploading_data_notification"
]
```

请求必须是 _POST_ 类型，并使用 _application/json_ 作为内容类型。使用 curl 的示例，假设请求数据保存为文件 `keys.json`：

```bash
curl -d @keys.json "play.dhis2.org/demo/api/33/i18n" -X POST
  -H "Content-Type: application/json" -u admin:district
```

结果将如下所示：

```json
{
    "access_denied": "Access denied",
    "uploading_data_notification": "Uploading locally stored data to the server"
}
```
