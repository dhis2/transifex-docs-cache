---
edit_url: "https://github.com/dhis2-metadata/REHAB_AGG/blob/master/docs/rehab_agg-installation.md"
revision_date: "2022-05-25"
---

# 修复 - 骨料安装指南{ #rehab-installation }

本文件包括康复汇总软件包的安装指南。

系统默认语言：系统默认语言：英语

可用翻译：法语、西班牙语、葡萄牙语、阿拉伯语

## 总览 { #overview }

=== "DHIS2.35"

    ```json
    "package": {
        "DHIS2Build": "834b25f",
        "DHIS2Version": "2.35.8",
        "code": "RHAG00",
        "description": "",
        "lastUpdated": "20220221T181704",
        "locale": "en",
        "name": "RHAG00_DHIS2.35",
        "type": "AGG",
        "version": "1.0.0"
    }
    ```

=== "DHIS2.36"

    ```json
    "package": {
        "DHIS2Build": "aa38c7f",
        "DHIS2Version": "2.36.8",
        "code": "RHAG00",
        "description": "",
        "lastUpdated": "20220222T131957",
        "locale": "en",
        "name": "RHAG00_DHIS2.36",
        "type": "AGG",
        "version": "1.0.0"
    }
    ```

=== "DHIS2.37"

    ```json
    "package": {
        "DHIS2Build": "a7328e1",
        "DHIS2Version": "2.37.3",
        "code": "RHAG00",
        "description": "",
        "lastUpdated": "20220222T132004",
        "locale": "en",
        "name": "RHAG00_DHIS2.37",
        "type": "AGG",
        "version": "1.0.0"
    }
    ```

## 安装 { #installation }

模块的安装包括以下几个步骤：

1. [使用 DHIS2 元数据准备元数据文件]（#preparing-the-metadata-file）。
2. [将元数据文件导入 DHIS2]（#importing-metadata）。
3. [配置导入的元数据](#configuration)。
4. [导入后调整程序](#调整程序)

在开始 DHIS2 的安装和配置过程之前，建议首先阅读安装指南的各个部分。根据导入类型确定适用的章节：

1. 导入空白的 DHIS2 实例
2. 导入具有现有元数据的 DHIS2 实例。

本文件中概述的步骤应在测试/暂存 DHIS2 实例中进行测试，然后才应用于生产环境。

## 要求 { #requirements }

安装模块需要 DHIS2 的管理员用户账户。

应格外注意确保服务器本身和 DHIS2 应用程序的安全，并应定义对所收集数据的访问权限。有关 DHIS2 系统安全的详细信息不在本文讨论范围之内，请参阅[DHIS2 文档](https://docs.dhis2.org/)。

## 元数据文件{ #metadata-files }

尽管并非总是必要，但在将元数据文件导入DHIS2之前对其进行某些修改通常可能是有利的。

## 准备元数据文件{ #preparing-the-metadata-file }

### 默认数据维度 { #default-data-dimension }

在 DHIS2 早期版本中，默认数据维度的 UID 是自动生成的。因此，虽然所有 DHIS2 实例都有默认类别选项、数据元素类别、类别组合和类别选项组合，但这些默认值的 UID 可能不同。DHIS2 的后期版本对默认维度的 UID 进行了硬编码，这些 UID 在配置包中使用。

为避免导入元数据时发生冲突，建议搜索并替换整个 .json 文件中所有出现的这些默认对象，将 .json 文件中的 UID 替换为导入该文件的实例中的 UID。表 1 显示了应替换的 UID，以及用于识别现有 UID 的 API 端点

| 目的 | 用户标识 | 应用程序接口端点 |
| --- | --- | --- |
| 类别 | `GLevLNI9wkl` | `.../api/categories.json?filter=name:eq:default`。 |
| 类别选项 | `xYerKDKCefk` | `.../api/categoryOptions.json?filter=name:eq:default`。 |
| 类别组合 | `bjDvmb4bfuf` | `.../api/categoryCombos.json?filter=name:eq:default`。 |
| 类别选项组合 | `HllvX50cXC0` | `../api/categoryOptionCombos.json?filter=name:eq:default` |

使用列出的 API 请求识别实例中默认 dimesions 的 UID，并用实例中的 UID 替换 json 文件中的 UID。

> **注意**
>
> 请注意，必须使用纯文本编辑器，而不是 Microsoft Word 等文字处理程序来执行搜索和替换操作。

### 指标类型 { #indicator-types }

指标类型是另一种可能造成导入冲突的对象类型，因为某些名称在不同的 DHIS2 数据库中 使用（如 "百分比"）。由于指标类型由其因子（包括 "仅分子 "指标的 1）定义，因此它们是明确的，可通过搜索和替换 UID 来替换。这种方法有助于避免潜在的导入冲突，并防止实施者创建重复的指标类型。下表包含可替换的 UID，以及用于识别现有 UID 的 API 端点：

| 目的 | 用户标识 | 应用程序接口端点 |
| --- | --- | --- |
| 仅分母（数字） | `kHy61PbChXr` | `../api/indicatorTypes.json?filter=number:eq:true&filter=factor:eq:1` |

### 使用根组织单位 UID 进行可视化{ #visualizations-using-root-organisation-unit-uid }

分配给特定组织单位级别或组织单位组的可视化、事件报告、报告表和地图都有一个对根（第 1 级）组织单位的引用。此类对象（如果存在于元数据文件中）包含一个占位符 `<OU_ROOT_UID>`。使用 .json 文件编辑器中的搜索功能可以识别该占位符，并将其替换为目标实例中 1 级组织单位的 UID。

### 选项代码{ #option-codes }

根据 DHIS2 命名规则，元数据代码使用大写字母、下划线和空格。可能出现的一些例外情况在相应的软件包文档中有所说明。当前软件包中元数据对象的所有代码都符合命名约定。目标数据库中使用的现有元数据对象的代码可能使用小写字母。在这种情况下，必须直接在数据库中更新这些值。

> **Important**
>
> During the import, the existing option codes will be overwritten with the updated upper case codes. In order to update the data values for existing data in the database, it is necessary to update the values stored in the database using database commands. Make sure to map existing old option codes and new option codes before replacing the values. Use staging instance first, before making adjustments on the production server.

对于数据元素值，请使用

```SQL
UPDATE programstageinstance
SET eventdatavalues = jsonb_set(eventdatavalues, '{"<affected data element uid>","value"}', '"<new value>"')
WHERE eventdatavalues @> '{"<affected data element uid>":{"value": "<old value>"}}'::jsonb
AND programstageid=<database_programsatgeid>;
```

### 选项的排序顺序{ #sort-order-for-options }

检查系统中选项的排序顺序 `sortOrder` 是否与元数据包中选项的排序顺序一致。这仅适用于 json 文件和目标实例包含相同 UID 的选项和选项集时。

导入后，确保选项集中选项的排序顺序从 1 开始，排序顺序值中不应有间隙（如 1、2、3、5、6）。

排序顺序可在维护应用程序中调整。

1. 转到适用的选项集
2. 打开 "选项 "部分
3. 使用 "按名称排序"、"按代码/数值排序 "或 "手动排序"。

康复包包含一个选项集和两个选项：

```json
{
    "optionSets": [
        {
            "name": "YES/NO (numeric)",
            "id": "TdDqpX1kdd2",
            "code": "YES_NO_NUM",
            "valueType": "INTEGER_ZERO_OR_POSITIVE",
            "options": [
                {
                    "id": "VavIEUmBv8j"
                },
                {
                    "id": "Xu8ieCbS7jH"
                }
            ]
        }
    ],
    "options": [
        {
            "name": "Yes",
            "id": "VavIEUmBv8j",
            "code": "1",
            "sortOrder": 1,
            "optionSet": {
                "id": "TdDqpX1kdd2"
            }
        },
        {
            "name": "No",
            "id": "Xu8ieCbS7jH",
            "code": "0",
            "sortOrder": 2,
            "optionSet": {
                "id": "TdDqpX1kdd2"
            }
        }
    ]
}
```

该 "是/否 "选项集以 "INTEGER_ZERO_OR_POSITIVE "选项值为基础，在预测器中进行评估，以确定**初级保健中心一级的康复基本套餐可用性**，并统计提供基本套餐的设施数量。

### 组织单位组和组套{ #rehab-orgunitgroups }

该软件包包括以下组织单位组：

| 名称 | 用户标识 | 描述 | 目的 |
| --- | --- | --- | --- |
| PHC | `aT5pkgRLbw5` | 初级保健设施 | 数据集分配、分析 |
| REHAB - 设施总清单 | `Uvefj6bDfzo` | 包括报告康复情况的所有设施 | 数据集分配、分析 |
| 康复治疗 - 初级保健 | `bbsxlCu3Vya` | 包括所有报告康复情况的初级保健设施 | 分析工具 |
| 康复中心 | `wZJCB2cj9jg` | 包括所有报告康复情况的二级医疗机构 | 分析工具 |
| 戒毒 - THC | `Re0iJ3vtBzE` | 包括所有报告康复情况的三级医疗机构 | 分析工具 |
| 康复住院病房 | `AGK6oOK4ncb` | 包括所有设有专门康复病房的设施 | 分析工具 |
| 医院区 | `Y9lBaYVm9j7` | 包括所有地区医院 | 分析工具 |

和以下组织单位组套：

| 名称 | 用户标识 | 描述 | 目的 |
| --- | --- | --- | --- |
| 行政护理级别 | `dSwpdHITQ85` | 医疗保健的行政级别，如初级保健中心（PHC）、高级保健中心（SHC）、技术保健中心（THC | 分析工具 |
| REHAB - 行政级别 | `wkjpdklqOIt` | 康复护理级别，例如：REHAB PHC、REHAB SHC、REHAB THC | 分析工具 |
| 类型 | `VQT2m5uMawR` | 包括各类设施，如地区医院、保健中心等。 | 分析工具 |

必须对这些元数据对象进行配置。

1. 如果目标实例不包含任何与软件包中包含的组的描述相匹配的组织单位组，请在配置和导入过程中按照以下步骤操作：

    1. 将软件包和所含组织单位组一起导入。
    2. 在维护应用程序中为新的组织单位组分配适用的设施。

2. 如果目标实例已包含与给定元数据对象描述相匹配的组织单位组，请在配置和导入时按照以下 步骤操作：

    1. 注意目标实例中匹配组织单位组的 UID。
    2. 用步骤 1 中的相应 UID 替换元数据 json 文件中所有出现的 organisationUnitGrop UID。
    3. 导入前从元数据 json 文件中删除组织单位组元数据对象。这一步非常重要，否则目标实例中组织单位对现有组的当前分配将被覆盖。
    4. 如果不需要其他预配置/编辑，则继续导入软件包。

3. 如果目标实例不包含与所提供描述相符的组织单位组集，则必须将这些组织单位组导入目标实例。必须在用户界面或使用 API 将适用的组织单位组添加到组织单位组集中。

4. 如果目标实例已包含与所提供描述相匹配的组织单位组集，请在配置和导入时按照以下步骤进行：

    1. 用目标实例中组织单位组的相应 UID 替换元数据文件中匹配组织单位组的 UID。
    2. 导入前从元数据文件中删除组织单位组对象。这一步非常重要，否则目标实例中组织单位组对现有组集的当前分配将被覆盖。
    3. 将新导入的组织单位组添加到组织单位组集中。(见上表）。

> **示例**
>
> 目标实例可能已包含 PHC 组织单位组。在这种情况下，请在导入前用目标实例中的相应 UID 替换该组的 UID `aT5pkgRLbw5`及其在 json 文件中的所有出现次数。然后，从 json 文件中删除 orgUnitGroup "PHC "元数据对象。您可以在 `"organisationUnitGroups":`下找到它。

### 人口、发病率和人员密度数据{ #population-incidence-and-personnel-density-data }

康复软件包包括用于**人口**、**发病**和**人员密度**数据的数据元素、指标和其他元数据对象。

在目标实例中输入人口数据的组织单位级别可能会有所不同。

在通用康复软件包中，该元数据被添加到下表所列的设施级数据集中。

| 数据元素 | 用户标识 | 数据集名称 | 数据集 UID | 数据集周期类型 | 数据集组织 单位组 |
| --- | --- | --- | --- | --- | --- |
| GEN - 人口 | `DkmMEcubiPv` | REHAB - 人员密度 | `Sm2fALTZROS` | 每年 | REHAB - 设施总清单 |
| REHAB - 截肢发生率 % | `jEc1P0VAPcs` | REHAB - 床位密度和发病率数据 | `giKizLegiUW` | 每年 | 康复住院病房 |
| REHAB - 烧伤发生率 % | `rtYJONzb7OY` | REHAB - 床位密度和发病率数据 | `giKizLegiUW` | 每年 | 康复住院病房 |
| 戒毒治疗 - MMT 发生率 % | `jlS0RS2LplZ` | REHAB - 床位密度和发病率数据 | `giKizLegiUW` | 每年 | 康复住院病房 |
| 康复治疗 - SCI 发生率 % | `Iy6ylb65g4V` | REHAB - 床位密度和发病率数据 | `giKizLegiUW` | 每年 | 康复住院病房 |
| REHAB - 中风发生率 % | `OIADGq0kCHW` | REHAB - 床位密度和发病率数据 | `giKizLegiUW` | 每年 | 康复住院病房 |
| REHAB -创伤性脑损伤发生率 % | `rzVRv6GpduW` | REHAB - 床位密度和发病率数据 | `giKizLegiUW` | 每年 | 康复住院病房 |

如果目标实例已有元数据基础设施，用于收集**人口、人员或发病率数据**，请参考以下步骤：

1. 选择对齐目标实例和 .json 文件中人口元数据的策略。

    - 替代方案 1：用目标系统中的 UID 替换 json 文件中数据元素的 UID 及其所有出现次数
    - 替代方案 2：考虑用 json 文件中的 UID 替换目标系统中这些数据元素的 UID。GEN 数据元素是 DHIS2 核心元数据文件库的一部分，并在其他元数据包中使用。

2. 使用**人口、人员或发病率数据**的指标将在输入数据的层面/层面上汇总数据。

3. 导入软件包后可能还需要额外的映射和配置。请参阅[数据集配置部分](#rehab-dataset-config)

> **注意**
>
> 当更新现有 DHIS2 实例中元数据元素的 UID 时，您需要在数据库中运行 SQL 命令，并在其他元数据对象（预测器、指标、验证规则表达式等）中替换其 UID 的所有出现和引用。

### 预测因素{ #rehab-predictors }

该软件包包括以下预测因子：

| 名称 | 用户标识 | 期间类型 | 缺失值策略 | 输出数据元素 - 名称 | 输出数据元素 - UID | 组织单位级别 |
| --- | --- | --- | --- | --- | --- | --- |
| REHAB - 可用性（基本包） | `zYbrCP7xGtk` | 每年 | 如果所有值都缺失，则跳过 | REHAB - 套餐供应情况（总体） | `bUJKsy9u2xv` | 设施级别 |
| REHAB - 可用性（职业治疗师） | `MaWSMzXDLkm` | 每年 | 如果所有值都缺失，则跳过 | REHAB - 可用性（职业治疗师） | `RPKfAe7voO3` | 设施级别 |
| REHAB - 可用性（其他人员） | `aphqcwJiK5s` | 每年 | 如果所有值都缺失，则跳过 | REHAB - 可用性（其他人员） | `qVvudaOdniT` | 设施级别 |
| REHAB - 可用性（理疗师） | `ydlTJLDcFBj` | 每年 | 如果所有值都缺失，则跳过 | REHAB - 可用性（理疗师） | `N6ru55bPe1o` | 设施级别 |
| REHAB - 可用性（假肢修复师/矫正师） | `K3QZ2zs0opc` | 每年 | 如果所有值都缺失，则跳过 | REHAB - 可用性（假肢修复师/矫正师） | `klLHQzY0lw2` | 设施级别 |
| REHAB - 可用性（心理学家） | `RpxclhlYJxw` | 每年 | 如果所有值都缺失，则跳过 | REHAB - 可用性（心理学家） | `pNNIXV0kOus` | 设施级别 |
| REHAB - 可用性（康复医生） | `CbnJeF5K1cM` | 每年 | 如果所有值都缺失，则跳过 | REHAB - 可用性（康复医生） | `LQ10SQqGKyf` | 设施级别 |
| REHAB - 可用性（语言治疗师） | `qHJTzQcMSd4` | 每年 | 如果所有值都缺失，则跳过 | REHAB - 可用性（语言治疗师） | `SuZDPYOgFbN` | 设施级别 |

预测器元数据包括用于聚合数据值的组织单位级别。软件包元数据文件包含占位符，需要用目标数据库中相应组织单位级别的 UID 替换。

准备导入预测因子的步骤如下：

1. 确定将汇总预测因子数据的设施级别的组织单位级别 UID。使用以下 API 端点确定所需的 UID：`.../api/organisationUnitLevels.json?fields=id,name`。
2. 在 json 文件中找到以下组织单位级别占位符：`<OU_LEVEL_FACILITY_UID>`
3. 用目标实例中已识别设备级别的 UID 替换占位符。
4. 确定目标实例中设施级别的编号。
5. 使用 "输出数据元素 - UID "列中提供的 UID，查找 json 文件中**输出数据元素**的属性。
6. Look for property: `"aggregationLevels": [4]`
7. 如果级别与目标实例中的级别一致，则保持数字不变。如果目标实例中的设施级别编号不同，则相应调整编号。

### 验证规则{ #rehab-validation-rules }

软件包中包含的验证规则按已配置的数据集分组。

本安装指南的附录中列出了所有验证规则组和相应的验证规则：

[康复--验证规则](resources/rehab_validation_rules.xlsx)

The organisation unit groups for all validation rules are set to facility level. The facility level value is located in the `"organisationUnitLevels"` property of each validation rule. It is set to `4` by default. Adjust these levels in the metadata file to match the facility level in the target instance befre importing the package.

## 导入元数据 { #importing-metadata }

使用 [Import/Export](#import_export) DHIS2 应用程序导入元数据包。建议在尝试实际导入元数据之前使用 "模拟运行 "功能来发现问题。如果 "模拟运行 "报告了任何问题或冲突，请参阅下面的[导入冲突]（#处理-导入-冲突）部分。如果 "试运行"/"验证 "导入无误，请尝试导入元数据。如果导入成功且无任何错误，则可以继续[配置](#configuration) 模块。在某些情况下，"模拟运行 "时不会显示导入冲突或问题，但在尝试实际导入时会显示。在这种情况下，导入摘要将列出需要解决的任何错误。

### 处理导入冲突 { #handling-import-conflicts }

> **注意**
>
> 如果将软件包导入新的 DHIS2 实例，由于目标数据库中没有元数据，因此不会发生导入冲突。导入元数据后，进入"[配置](#configuration) "部分。

可能会发生多种冲突，但最常见的是配置包中的元数据对象的名称、简称和/或代码已经存在于目标数据库中。这些问题有几种不同的解决方案，各有利弊。例如，哪种方案更合适取决于发生冲突的对象类型。

#### 备选方案1 { #alternative-1 }

重新命名 DHIS2 数据库中存在冲突的现有对象。这种方法的优点是无需修改 .json 文件，而是通过 DHIS2 的用户界面进行更改。这可能更不容易出错。这也意味着配置包保持原样，例如在发布包更新时，这可能是一个优势。在培训材料和文档中也经常引用原始软件包对象。

#### 备选方案2 { #alternative-2 }

重命名.json文件中存在冲突的对象。这种方法的优点是现有的DHIS2元数据保持不变。当存在培训材料或文档（例如链接到所讨论对象的数据字典的SOP）时，这可能是一个因素，并且不存在通过修改用户熟悉的元数据而使用户感到困惑的风险。

请注意，对于备选项1和2，修改可以简单到在名称中添加一个小的前缀/后缀，以最大程度地减少混乱的风险。

#### 备选3 { #alternative-3 }

第三种也是更复杂的方法是修改.json文件以重新使用现有的元数据。例如，在某个概念的某个选项集已经存在的情况下（例如“性别”），可以从.json文件中删除该选项集，并且对其UID的所有引用都将替换为数据库中已经存在的相应选项集。这样做的最大优点（不限于直接导入冲突的情况）是避免在数据库中创建重复的元数据。执行这种类型的修改时，需要考虑一些关键因素：

-   它需要有关DHIS2详细元数据结构的专业知识
-   该方法不适用于所有类型的对象。特别地，某些类型的对象具有依赖关系，这种依赖关系以这种方式难以解决，例如与分解有关。
-   将来对配置包的更新将很复杂。

## 组态 { #configuration }

成功导入所有元数据后，需要执行一些步骤，模块才能正常运行。

### 分享中 { #sharing }

首先，您必须使用 DHIS2 的_共享_功能来配置哪些用户（用户组）应查看与程序相关的元数据和数据，以及谁可以在程序中注册/输入数据。默认情况下，共享配置如下：

-   仪表板
-   可视化、地图、事件报告和报告表格
-   数据集
-   类别选项

有关共享的更多信息，请参阅 [DHIS2 文档](#sharing)。

软件包包括三个核心用户组：

-   恢复访问（查看元数据/查看数据）
-   康复管理员（查看和编辑元数据/无法访问数据）
-   康复--（查看元数据/捕捉和查看数据）

用户会根据其在系统中的角色被分配到相应的用户组。软件包中其他对象的共享可能会根据设置进行调整。更多信息请参阅 [DHIS2 共享文档](#sharing)。

### 用户角色 { #user-roles }

用户将需要用户角色才能参与DHIS2中的各种应用程序。建议以下最低角色：

1. 跟踪器数据分析：可以查看事件分析并访问仪表板，事件报告，事件可视化器，数据可视化器，数据透视表，报告和地图。
2. 跟踪器数据捕获：可以添加数据值，更新跟踪的实体，跨组织单位搜索跟踪的实体以及访问跟踪器捕获

有关配置用户角色的更多信息，请参阅 [DHIS2 文档](https://docs.dhis2.org/)。

### 组织单位分配{ #organisation-unit-assignment }

数据集必须分配给现有层次结构中的组织单位，才能通过采集应用程序访问。下表提供了有关康复数据集组织单位分配的信息：

| 资料集 | 用户标识 | 数据集表格类型 | 数据收集期 | 设施类型 |
| --- | --- | --- | --- | --- |
| 病床密度和发病率数据 | `giKizLegiUW` | 默认 | 每年 | 设有专门康复住院病房的康复设施 |
| 初级保健中心提供的基本套餐 | `MGzqZDWvPhL` | 部分 | 每年 | 报告康复情况的初级保健机构（Rehab PHC） |
| 人员密度 | `Sm2fALTZROS` | 部分 | 每年 | 在康复中心报告的所有设施（设施总清单） |
| 住院病人报告 | `WjN1YoDtlOd` | 风俗 | 按月 | 所有设有住院病房（非专用康复病房）的机构均报告康复情况（机构总清单） |
| 康复病房报告 | `tP8et8TNWgF` | 风俗 | 按月 | 所有设有专门康复住院病房的设施均在康复（设施总清单）上进行报告 |
| 门诊报告 | `zInFVXb98JD` | 风俗 | 按月 | 所有设有门诊部的康复中心（康复中心总清单） |

### 组织单位小组任务{ #organisation-unit-group-assignment }

目标系统中的组织单位必须根据[组织单位组](#rehab-orgunitgroups)部分中的概述分配给康复组织单位组。

### 数据集{ #rehab-dataset-config }

以下数据集需要在导入后进行额外配置：

#### 床铺密度{ #bed-density }

如果现有的 HMIS 已经收集了康复病床总数的年度数据，则不需要康复病床密度数据集。确保在所有元数据对象中，将所有出现的数据元素**"可用康复床位（总数）"** `K0Y94lADtGw` 替换为现有数据元素 UID，该数据元素在所有元数据对象中均有引用：

| 元数据对象 UID | 元数据对象类型 | 详细信息 |
| --- | --- | --- |
| `VOdQ2YRmSzf` | 指示符 | 数据元素在分子中被引用 |

#### 人员密度{ #personnel-density }

If the annual population data is already collected in the existing HMIS, the **"GEN - Population"** data element `DkmMEcubiPv` may be removed from the data set `Sm2fALTZROS`. Make sure to replace all occurences of the \*"GEN - Population"\*\* data element with the existing data element UID in all metadata objects, where this data element is referenced:

| 元数据对象 UID | 元数据对象类型 | 详细信息 |
| --- | --- | --- |
| `OnxT9nXB9yB` | 指示符 | 数据元素在分母中被引用 |
| `hLkZBsoxgwG` | 指示符 | 数据元素在分母中被引用 |
| `VOdQ2YRmSzf` | 指示符 | 数据元素在分母中被引用 |
| `n0cE7LiP4j8` | 指示符 | 数据元素在分母中被引用 |
| `peWxNUcIjZw` | 指示符 | 数据元素在分母中被引用 |
| `dXNfY2I7umm` | 指示符 | 数据元素在分母中被引用 |
| `hpP5GW43n1J` | 指示符 | 数据元素在分母中被引用 |
| `s9SRcnMtI0K` | 指示符 | 数据元素在分母中被引用 |
| `RRCtatVRlI0` | 指示符 | 数据元素在分母中被引用 |
| `PuSDjaFs2we` | 指示符 | 数据元素在分母中被引用 |
| `tsIeJwq6x8L` | 指示符 | 数据元素在分母中被引用 |
| `U5tL3Eqq3Vj` | 指示符 | 数据元素在分母中被引用 |
| `NcA1znaVgFH` | 指示符 | 数据元素在分母中被引用 |
| `M0UPequfEYf` | 指示符 | 数据元素在分母中被引用 |
| `U5WwSS3zxlX` | 指示符 | 数据元素在分母中被引用 |
| `fhZ9MI3qTaA` | 指示符 | 数据元素在分母中被引用 |
| `YEjkkya4JCJ` | 指示符 | 数据元素在分母中被引用 |
| `xW6TcvEMhwG` | 指示符 | 数据元素在分母中被引用 |
| `TNjjTJr7fLe` | 指示符 | 数据元素在分母中被引用 |
| `uKK11dDx8HH` | 指示符 | 数据元素在分母中被引用 |
| `qTq20E3B08y` | 指示符 | 数据元素在分母中被引用 |
| `ePjfu6Fr4Jq` | 指示符 | 数据元素在分母中被引用 |
| `zNzm3AUiQ3B` | 指示符 | 数据元素在分母中被引用 |
| `Vq98oh9BIB1` | 指示符 | 数据元素在分母中被引用 |
| `klNqjksyNAL` | 指示符 | 数据元素在分母中被引用 |
| `bW75ZyPq9aZ` | 指示符 | 数据元素在分母中被引用 |
| `ME2YCnift7x` | 指示符 | 数据元素在分母中被引用 |
| `HTZ7STQR648` | 指示符 | 数据元素在分母中被引用 |
| `Z2f5wDvVxUL` | 指示符 | 数据元素在分母中被引用 |
| `XlISfeHbzxc` | 指示符 | 数据元素在分母中被引用 |
| `NVbwb4XlTVo` | 指示符 | 数据元素在分母中被引用 |
| `t26ObhmhjOb` | 指示符 | 数据元素在分母中被引用 |
| `FjVJNnVOu6S` | 指示符 | 数据元素在分母中被引用 |
| `fDj7xDywd5C` | 指示符 | 数据元素在分母中被引用 |
| `BLUTcTXPhts` | 指示符 | 数据元素在分母中被引用 |
| `RFVOIDIULVO` | 指示符 | 数据元素在分母中被引用 |

**发病**数据的数据收集水平必须与**人口**数据的数据收集水平相同或更低。

The organisation unit assignmnet of the **Personnel density** data set should remain at facility level for the purpose of analytical outputs.

### 重复的元数据 { #duplicated-metadata }

> **注意**
>
> 本节仅适用于导入已有元数据的 DHIS2 数据库。如果您使用的是新的 DHIS2 实例，请跳过本节，转到[调整跟踪程序](#adapting-the-tracker-program)。如果您正在使用任何依赖于当前元数据的第三方应用程序，请考虑到此更新可能会破坏它们"。

即使成功导入了元数据而没有任何导入冲突，元数据中也可能存在重复项-数据元素，跟踪的实体属性或已存在的选项集。正如上面有关解决冲突的部分所述，要牢记的一个重要问题是，在DHIS2中更改元数据的决定还需要考虑与现有元数据有不同关联的其他文档和资源。 ，以及通过配置包导入的元数据。因此，解决重复项不仅是“清理数据库”的问题，而且还要确保做到这一点，例如，不破坏与其他系统的集成，使用培训材料的可能性，破坏SOP等。这将非常很大程度上取决于上下文。

需要牢记的重要一点是，DHIS2 有一些工具可以隐藏元数据中潜在重复的一些复杂问题。例如，如果存在重复的选项集，可以通过[共享]（#sharing）为用户组隐藏这些选项集。

## 调整计划{ #adapting-the-program }

Once the program has been imported, you might want to make certain modifications to the program. Examples of local adaptations that _could_ be made include:

-   向表单添加其他变量。
-   根据国家惯例修改数据元素/选项名称。
-   向变量和/或数据输入表单添加翻译。
-   根据当地案例定义修改指标

但是，如果您决定更改或删除任何包含的表格/元数据，强烈建议格外小心。修改可能会破坏功能，例如程序规则和程序指示器。

### 指标映射{ #indicator-mapping }

如需部分实施康复一揽子方案，即实施一套定制的世卫组织核心指标，请参阅[世卫组织-DHIS2 指标映射表](resources/rehab_indicator_mapping.xlsx)。

在调整元数据时，请务必确定使用了适用指标的可视化和仪表盘，以及相应数据集中使用的数据元素和类别组合。

## 删除元数据{ #removing-metadata }

为了保持实例清洁并避免出错，建议您删除实例中不必要的元数据。删除不必要的元数据需要 DHIS2 和各种附属程序的高级知识。
