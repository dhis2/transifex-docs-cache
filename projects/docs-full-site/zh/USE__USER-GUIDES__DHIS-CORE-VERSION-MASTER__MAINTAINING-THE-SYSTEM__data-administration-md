---
edit_url: "https://github.com/dhis2/dhis2-docs/blob/master/src/user/data-administration.md"
revision_date: '2024-05-21'
tags:
- 使用
- DHIS核心 主版
---

# 资料管理 { #data_admin }

数据管理模块提供了一系列功能来确保
DHIS2数据库中存储的数据是完整的，并且
数据库性能得到优化。这些功能应在
由数据管理员定期检查以确保
存储的数据是最佳的。

## 数据完整性{ #data_admin_data_integrity }

DHIS2可以对数据执行各种数据完整性检查
包含在数据库中。识别和纠正数据完整性
问题对于确保用于
分析目的是否有效。每个数据完整性检查
将描述系统执行的操作以及一般步骤
可以解决这些问题。

### 没有数据集的数据元素 { #data-elements-without-data-set } 

每个数据元素必须分配给一个数据集。数据值
如果有数据，将无法将元素输入系统
元素未分配给数据集。选择
在主菜单中选择维护->数据库集->编辑，然后添加
将“孤立的”数据元素添加到适当的数据集。

### 没有组的数据元素 { #data-elements-without-groups } 

一些数据元素已经分配给几个数据元素组。
目前不允许这样做，因为这会导致重复
分析记录集中的链接数据记录提供了汇总
数据。转到维护->数据元素组以查看每个数据
确定元素并删除不正确的组分配。

### 违反排他组的数据元素 { #data-elements-violating-exclusive-group-sets } 

一些数据元素已被分配到多个数据元素组
它们是同一数据元素组集的成员。所有组均设置为
DHIS2 被定义为独占的，这意味着数据元素可以
*仅*被分配给该组集中的*一个*数据元素组。
转到维护 -\> 数据元素和指标 -\> 数据元素
小组审查完整性检查中确定的每个数据元素。
要么从所有组中删除该数据元素，但它所在的组除外
应该分配给，或者看看是否应该将其中一组放入
不同的组集。

### 数据集中的数据元素，但不在表单或节中 { #data-elements-in-data-set-but-not-in-form-or-sections } 

数据元素已分配给数据集，但尚未分配
分配给数据集表格的任何部分。使用的所有数据集
部分表格，通常应在数据集中包含所有数据元素
恰好分配给数据集的一部分。

### 分配给具有不同期间类型的数据集的数据元素 { #data-elements-assigned-to-data-sets-with-different-period-types } 

数据元素不应分配给两个单独的数据集
期间类型不同。建议的方法是创建两个
单独的数据元素（例如，每月和每年的数据元素）
并将它们分配给各自的数据集。

### 数据集未分配给组织单位 { #data-sets-not-assigned-to-organisation-units } 

所有数据集应分配给至少一个组织单位。

### 类别组合无效的部分 { #sections-with-invalid-category-combinations } 

使用节表的数据集应仅具有一个类别
每个部分中的组合。违反可能是由于
将数据元素分配给节，然后更改类别
此数据元素在以后的某个时间点的组合。

### 具有相同公式的指标 { #indicators-with-identical-formulas } 

尽管此规则不会影响数据质量，但通常不会
具有两个定义完全相同的指标是有意义的。评论
确定的指标及其公式，并删除或修改任何
指示器似乎是重复的。

### 没有分组的指标 { #indicators-without-groups } 

All data elements and indicators must be assigned to at least one group,
so these Indicators need to be allocated to their correct Data Element
and Indicator Group. From the main menu, go to Data elements/Indicators
-\> Indicator Groups, and allocate each of the \`Orphaned\` indicators
to its correct group.

### 无效的指标分子 { #invalid-indicator-numerators } 

违反此规则的原因可能是错误地引用了
删除或修改的数据元素。查看指标并进行
分子定义的更正。

### 无效的指标分母 { #invalid-indicator-denominators } 

违反此规则的原因可能是错误地引用了
删除或修改的数据元素。查看指标并进行
分母定义的更正。

### 违反排他性组的指标 { #indicators-violating-exclusive-group-sets } 

Some indicators have been allocated to several indicator groups that are
members of the same indicator group set. All group sets in DHIS2 are
defined as exclusive, which means that an indicator can *only* be
allocated to *one* indicator group within that group set. Go to
Maintenance -\> Data elements and indicators -\> Indicator groups to
review each indicator identified in the integrity check. Either remove
the indicator from all groups except the one that it should be allocated
to, or see if one of the groups should be placed in a different group
set.

### 重复期间 { #duplicate-periods } 

如果已从外部应用程序导入了期间，则可能是
某些时期可能会重复。如果您有任何时期
在这里似乎重复的，您将需要解决这些问题
直接在DHIS2数据库中。所有已分配给
重复的期间，应移至正确的期间，并且
重复期间应删除。

### 具有循环引用的组织单位 { #organisation-units-with-cyclic-references } 

组织单位不能同时是父级和子级，
直接或间接。如果发生这种情况，您将需要
直接在DHIS2数据库中解析循环引用
通过重新分配“组织单位”表中的“上级”字段
组织单位。

### 孤立的组织单位 { #orphaned-organisation-units } 

所有组织单位必须存在于组织单位内
等级制度。转到组织单位 -\> 层次结构操作并将
将违规组织单位移至层次结构中的适当位置。

### 没有团体的组织单位 { #organisation-units-without-groups } 

所有组织单位*必须*分配给至少*一个*组。这
问题可能是您没有定义任何强制性的 OrgUnit
根本没有组集，或者有违反强制规则的情况
对于某些 OrgUnits 。注意：如果您没有定义强制的 OrgUnit
组集，然后您必须首先通过转到组织来定义它们
单位-\>组织单位组设置并定义至少一项必修项
组集（组集“类型”几乎普遍相关）。如果你
有相关的组集，请转到维护 -\> 组织单元组
查看已识别的每个组织单位并添加相关的组分配。

### 组织单位违反必修课 { #organisation-units-violating-compulsory-group-sets } 

这些组织单位尚未分配给任何组织
*强制*组织单元组集合之一内的单元组。
当一组组被定义为强制性时，这意味着一个组织
单位必须分配给至少一个组织单位组
那个组集。例如，所有组织单位必须属于一个
“类型”组集中的组的数量。它可能属于
\`医院\`或\`诊所\`或任何其他“类型”团体 - 但它必须
恰好属于其中之一。转到组织单位-\>组织
单位组审查完整性中确定的每个组织单位
查看。将所有组织单位准确分配到一个强制组。

### 违反专属组的组织单位 { #organisation-units-violating-exclusive-group-sets } 

一些组织单元已分配给同一组织单元组集的多个组织单元组。所有组集都被定义为互斥的，意味着一个组织单元*只能*属于该组集中的*一个*组织单元组。请转到组织单元->组织单元组以查看完整性检查中识别出的每个组织单元。从除了应分配给它的组织单元之外的所有组中移除该组织单元。

### 没有组集的组织单位组 { #organisation-unit-groups-without-group-sets } 

此处列出的组织单位组尚未分配给
组集。转到维护->组织单位->组织单位
组设置并将组织单位组分配给适当的
组集。

### 无组验证规则 { #validation-rules-without-groups } 

所有验证规则必须分配给一个组。转到**维护**
app \> **验证规则组**并分配有问题的验证
对一个群体进行统治。

### 无效的验证规则左侧表达式 { #invalid-validation-rule-left-side-expressions } 

左侧验证规则定义中存在错误。去
**维护**应用程序 -\> **验证规则**，然后点击**编辑**
违规规则。单击**左侧**并进行所需的更正。

### 无效的验证规则右侧表达式 { #invalid-validation-rule-right-side-expressions } 

右侧验证规则定义中存在错误。去
**维护**应用程序 -\> **验证规则**，然后点击**编辑**
违规规则。单击**右侧**并进行所需的更正。

### 无条件的程序规则 { #programrules-with-no-condition } 

Report will highlight all the **Program rules** not configured with **Condition**. Evaluation for rules not having condition are always evaluated as false.

### 没有优先权的ProgramRules { #programrules-with-no-priority } 

Report will highlight all the **Program rules** not configured with **Priority**. This is optional but its existence is very important when **ProgramRuleActionType** is **ASSIGN**. Rules with ASSIGN action type should have higher priority then the rest of the action types.

### 不采取行动的ProgramRules { #programrules-with-no-action } 

Report will highlight all the **Program rules** not configured with any **ProgramRuleAction**.

### 没有dataElements的ProgramRuleVariables { #programrulevariables-without-dataelements } 

Report will highlight all the **Program rule variables** not configured with **DataElement**. Report will be based on source type configuration. DataElement should be provided when the source type of ProgramRuleVariable is **DataElement**.

### 没有属性的ProgramRuleVariables { #programrulevariables-without-attributes } 

Report will highlight all the **Program rule variables** not configured with **TrackedEntityAttribute**. Report will be based on source type configuration. TrackedEntityAttribute should be provided when the source type of ProgramRuleVariable is **Attribute**.

### 没有数据对象的ProgramRuleActions。 { #programruleactions-with-no-data-objects } 

Report will highlight all the **Program rule actions** not configured with any Data object. Data object can be either **DataElement** of **TrackedEntityAttribute**. There are certain ProgramRuleActions which are responsible for assigning values to either dataElement or trackedEntityAttribute.

### 没有通知的ProgramRuleActions { #programruleactions-with-no-notification } 

Report will highlight all the **Program rule actions** which have ProgramRuleActionType set to SENDMESSAGE/SCHEDULEMESSAGE where the configuration does not provide any link to notification.

### 没有部分ID的ProgramRuleActions { #programruleactions-with-no-section-id } 

Report will highlight all the **Program rule actions** which have ProgramRuleActionType set to **HIDESECTION** but configuration does not provide any section id.

### 没有程序阶段ID的ProgramRuleActions { #programruleactions-with-no-program-stage-id } 

Report will highlight all the **Program rule actions** which have ProgramRuleActionType set to **HIDEPROGRAMSTAGE** but configuration does not provide any program stage id.

### 无效的程序指示符表达式 { #invalid-program-indicator-expression } 

报告由无效** DataElement **或无效** TrackedEntityAttribute **引起的程序指示器表达式中的所有冲突。

### 无效的程序指示器过滤器表达式 { #invalid-program-indicator-filter-expression } 

报告由无效** DataElement **或无效** TrackedEntityAttribute **引起的程序指示器过滤器表达式中的所有冲突。

## 保养 { #data_admin_maintenance }

表：数据管理应用程序中的数据维护功能

| 功能 | 描述 |
|---|---|
| 清除分析表 | 完全清空分析表。这些表用于生成数据透视表、GIS 和报告的聚合数据。 |
| 删除零数据值 | 从数据库中删除零数据值。使用聚合运算符 Average 为数据元素注册的值不会被删除，因为这些值在聚合数据时非常重要，这与使用聚合运算符 sum 为数据元素注册的值相反。<br> <br>减少数据值的数量将提高系统性能。 |
| 永久删除软删除的数据值 | 当在 DHIS2 中删除数据值时，系统会将相应的数据库行标记为已删除，而不是实际删除该行。<br> <br>运行此维护功能将从数据库中物理删除这些数据值行。 |
| 修剪期 | 删除所有没有注册数据值的期间。减少周期数将提高系统性能。 |
| 删除过期的邀请 | 将删除代表用户帐户邀请现已过期的用户。 |
| 删除 SQL 视图 | DHIS2 允许您将 SQL 视图设置为具有相应数据库 SQL 视图的系统对象并进行管理。<br> <br>运行此维护功能将会下降所有系统视图的基础 SQL 视图。使用 **创建 SQL 视图** 函数重新创建这些 SQL 视图。 |
| 创建 SQL 视图 | 重新创建数据库中的所有 SQL 视图。 |
| 更新类别选项组合 | 重建类别选项组合。在更改属于给定类别的类别选项后，可能需要执行此操作。 |
| 更新组织部门路径 | DHIS2 数据库中的组织单位表有一列“路径”，其中包含每个组织单位层次结构中所有祖先的串联字符串。<br> <br>运行此维护功能将更新并确保这些值与当前组织单位层次结构同步。此列由 DHIS2 管理，但直接在数据库中加载数据时，手动更新可能会很有用。 |
| 清除应用程序缓存 | 清除系统缓存。 |
| 重新加载应用 | 手动重新加载并检测已安装的 DHIS2 应用。<br> <br>系统启动以及安装或卸载应用时也会检测已安装的应用。 |

## 资源表{ #data_admin_resource_tables }

资源表是在分析过程中使用的支持表
数据。通常，将这些表的内容与
从第三方应用程序（例如，
Microsoft Excel。分析模块也广泛使用它们
DHIS2。资源表的重新生成只能执行一次
解决了所有数据完整性问题。资源表也
每次运行分析过程时，
系统。

  - 组织单位结构（\ _orgunitstructure）

    只要有任何情况，都应重新生成该表
    对组织单位层次结构所做的更改。这个桌子
    提供有关组织单位层次结构的信息。它有
    每个组织单位一行，每个组织一行
    单位级别以及以下所有父级的组织单位标识符
    作为价值的血统。

  - 数据元素组集结构（\ _dataelementgroupsetstructure）

    该表提供有关哪些数据元素是
    数据元素组集的成员。该表有一行
    每个数据元素，每个数据元素组集合的一列，以及
    数据元素组的名称作为值。

  - 指标组集结构（\ _indicatorgroupsetstructure）

    下表提供有关哪些指标是成员的信息
    哪个指标组设置。该表各有一行
    指标，每个指标组集的一列，以及
    指标组作为值。

  - 组织单位组集结构
    （\ _organisationunitgroupsetset结构）

    下表提供有关哪些组织单位是
    组织单位组的成员。桌子有一排
    对于每个组织单位，每个组织单位一列
    组集和组织单位组的名称作为值。

  - 类别结构（\ _categorystructure）

    该表提供有关哪些数据元素是
    成员属于哪个类别。该表的每个数据都有一行
    元素，每个类别一列，并且类别名称
    选项作为值。

  - 数据元素类别选项组合名称（\ _categoryoptioncomboname）

    只要有更改，就应该重新生成该表
    进行类别组合名称。它包含可读的名称
    用于类别的各种组合。

  - 数据元素结构（\ _dataelementstructure）

    该表提供有关所有数据元素以及哪些数据的信息
    捕获数据的周期类型（频率）。期间类型为
    通过数据集成员身份确定，因此依赖于数据
    要成为具有类似周期类型的数据集的成员的元素
    明确的行为。

  - 期间结构（\ _dataperiodstructure）

    该表提供有关所有期间以及哪个期间的信息
    与它们关联的类型。对于每个较低的期间类型
    频率比其本身，它包含有关其周期的信息
    将落入。

  - 数据元素类别选项组合
    （\ _dataelementcategoryoptioncombo）

    该表提供了数据元素与所有可能元素之间的映射
    类别选项组合。

## 分析表管理 { #data_admin_analytics_tables }

DHIS2 生成数据库表，然后系统将其用作基础
各种分析功能。如果您写这些表也很有价值
高级 SQL 报告。在**数据管理**应用程序中，您可以执行表
立即生成。如果您想安排它们定期执行，
这可以在 **Scheduler** 应用程序中完成。这意味着您可以刷新最近的分析
需求并查看更新的数据透视表，而无需等待过去几年的所有数据
重新处理。

> **注意**
>
> 您还可以通过 Web API 生成表格。这个任务是
> 通常由系统管理员执行。

1.  Open the **Data Administration** app and click **Analytics Tables**.

2.  选择要跳过的分析过程部分：

      - **跳过资源表的生成**

      - **跳过汇总数据和完整性数据的生成**

      - **跳过事件数据的生成**

      - **跳过注册数据的生成**

      - **跳过组织单位所有权数据的生成**

3.  Select **Number of last years of data to include**.  (If 0 is selected,
then you will run latest or continuous analytics, as defined in
[Continuous analytics table](scheduling.html#scheduling_continuous_analytics_table).)

4.  点击**开始导出**。

## Data statistics { #data_admin__data_statistics }

数据统计模块提供了对象数量的概述
存储在DHIS2数据库中。


![](resources/images/maintenance/data_stats.png)

每种类型的对象的总数以一系列
表，其中包含每个对象的摘要统计信息。

## Lock exceptions { #data_admin__lock_exception }

Lock exceptions provide fine-grained control over exemption from a
locked data set. After the expiry of the data set, data entry will be
denied by default, unless an exception has been granted through the Lock
exception interface.

### Adding a lock exception { #adding-a-lock-exception } 

By granting a lock exception, data entry will be enabled even after the
expiry period of the data set has passed.

1. Open the **Data Administration** app and click **Lock Exception**.
2. Click **Add lock exception** at the top of the page
3. Select the desired data set, organisation units and time period (see
   screenshot below)
4. Click **Add lock exception**

![](resources/images/maintenance/create_lock_exception.png)

In the example above, a data lock exception would be created for "Bo" for the
"ART monthly summary" dataset for "February 2014".

In order to run this function, no extra authority is needed.

## Min-Max Value Generation { #data_admin_min_max_value_generation }

This administrative function can be used to generate min-max values,
which are used as part of the data quality and validation process for
specific organization units and data sets. Simply select the dataset
from the left hand frame, and then select the required organisation
units to generate the min-max values for from the organisational units
selector on the right. Press the "Generate" button to generate or
regenerate all min-max values. Press "Remove" to remove all min-max
values which are currently stored in the database. In order to run this
function, the user MUST have the authority `F_GENERATE_MIN_MAX_VALUES`.

![](resources/images/maintenance/min_max_value_generation.png)

## Cache Statistics { #data_admin_cache_statistics }

此选项仅供系统管理员使用。缓存
统计信息显示应用程序级别缓存的状态。的
应用程序级缓存是指对象和查询结果
应用程序正在缓存以提高性能。如果数据库
已直接修改，需要清除应用程序缓存
它才能生效。

