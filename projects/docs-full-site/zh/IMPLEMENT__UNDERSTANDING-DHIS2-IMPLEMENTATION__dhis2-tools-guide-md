---
edit_url: "https://github.com/dhis2/dhis2-docs/blob/master/src/implementation/dhis2-tools-guide.md"
revision_date: "2021-06-14"
---

# DHIS2工具指南 { #dhis2-tools-guide }

## 总览 { #overview }

dhis2-tools 软件包是用于在 ubuntu 服务器上安装和管理 DHIS2 应用程序的工具和实用程序的集合。这些工具能够在几分钟内从仅运行 ssh 的“空白”服务器转变为功能齐全的 dhis2 安装。一起使用它们还可以组合成自动化脚本，以促进给定配置的快速重建。

这些工具是经过多年收集和开发的。本文档在某些方面与 dhis2 用户手册中的安装指南不同，因为它描述了特定方法的实现，而不是用户手册的更一般的教程性质。建议实施者也研究用户手册中的材料，因为它提供了附加信息，例如。如何调整 postgresql 服务器。本手册中描述的工具的基本原理包括：

1.  简化安装过程，使其易于解释、记录和执行；

2.  协助系统管理员（特别是但不限于经验不足的管理员）默认实施合理的安全措施，从而最大限度地减少人为错误和疏忽造成的漏洞；

3.  提供一组脚本来协助管理员完成与管理其 dhis2 系统相关的任务，而不仅仅是一次性安装过程。

该一揽子计划仍在进行中，有许多领域可以而且应该（并且希望能够）得到改进。例如，

1.  目前不包括postgresql数据库的调优。有多种方法可以至少实现半自动化；

2.  通过提供示例配置文件来辅助 nginx 配置。这种配置可以变得更加动态；

3.  目前打包的格式是Ubuntu linux deb包。人们对运行 dhis2 的 Redhat/CentOS 风格的 Linux 也很感兴趣。应该可以提供 yum 格式的包来方便在这些系统上的使用。

## 建筑 { #architecture }

下图显示了DHIS2系统中涉及的主要组件。

![单机一体式安装](resources/images/dhis2tools/architecture.png)

dhis2-tools 主要涉及创建和管理提供 Web 应用程序的 tomcat 实例。正如您在图中所看到的，可能有一个或多个。此外，系统还需要一个 postgresql 数据库服务器和一个 nginx Web 代理服务器。有许多可能的配置，这些配置可以在与 dhis2 实例不同的服务器上运行。这些工具大部分假设它们都一起安装在一台机器上。需要进行一些定制才能将它们分开。

当使用 dhis2-create-instance 命令创建实例时，会使用该实例的名称创建一个新用户（假设其名为 hmis）。该用户的主目录位于 /var/lib/dhis2/hmis。创建一个数据库角色（也称为 hmis）以及一个名为 hmis 的数据库。实例的 DHIS2_HOME 环境变量设置为用户的同一主目录。

独立 tomcat 实例的基本组件也在同一目录中创建（以 ubuntu tomcat7-user 包为模型）。该 tomcat 实例的 web.xml 文件已被定制，以允许上游 Web 代理服务器（例如 nginx）缓存 dhis2 应用程序的静态内容。

用户还将自动设置一个 crontab 配置来管理日常备份、计算机重新启动和日志文件轮换。

请注意，如 dhis2 用户文档中所述，postgresql 优化不受此软件包管理，需要作为安装后步骤完成。

## 安装 { #installation }

本手册假设您已经安装了 ubuntu 服务器 12.04 LTS、14.04 LTS 或 16.04 LTS 的最小发行版。我们所说的“最小化”是指仅将基本操作系统与 openssh 服务器一起安装。在安装过程中，您应该避免安装任何其他软件包 dhis2-tools 软件包将确保所需的软件包作为依赖项安装。

建议作为一般准则，在继续操作之前，您应该通过提高 ssh 服务的安全性并安装基于主机的防火墙（如 ufw）来加强系统的安全性。

正确安装并保护基本系统后，您可以继续从 PPA 存储库（https://launchpad.net/~simjes91/+archive/ubuntu/dhis2-tools）安装 dhis2-tools 软件包。最简单的方法是运行 https://github.com/dhis2/dhis2tools 上提供的 install.sh 脚本（包含包的源代码）。

从这里启动并运行 dhis2 实例的简化步骤如下：

1.  通过运行以下命令将您的用户（例如bobj）转变为dhis2-admin用户：

    须藤dhis2-create-admin bobj

2.  使用以下命令创建一个名为dhis的实例：

    dhis2-实例创建dhis

3.  使用以下命令部署最新的稳定战文件：

    dhis2-部署战争dhis

4.  使用以下命令设置基本的nginx模板：

    dhis2-nginx

    请注意，nginx 配置不会自动完成。虽然运行命令 dhis2-nginx 会在 /etc/nginx/sites-enabled/dhis2 下创建一个简单的站点配置文件。您可能需要编辑此文件以确保实例名称和端口号正确。

5.  使用以下命令启动您的dhis实例：

    dhis2-启动dhis

下面的命令参考部分包含这些命令和其他用于管理实例的命令的完整说明。

## DHIS2工具参考 { #dhis2-tools-reference }

以下页面列出了包中包含的命令的参考文档。安装软件包时，该文档也应作为手册页包含在内。例如，您应该能够输入

`man dhis2-实例创建`

阅读系统上该命令的文档。打字

`apropos dhis2`

将显示所有与dhis2相关的手册页。

---

**名称：** dhis2-instance-create
**目的：**创建一个新的dhis2实例

` /usr/bin/dhis2-instance-create

[选项]

名字`

使用此工具在 tomcat 容器中创建新的 dhis2 实例。指定的名称将用于创建新用户和具有该用户名称的新数据库。用户将被分配到 **dhis2** 组。用户将在 /var/lib/dhis2/\<username\> 中创建一个主目录。此目录既充当 **DHIS2_HOME** 目录，又充当 tomcat servlet 容器的 **CATALINA_BASE** 目录。

默认情况下，实例分配 2G 堆空间 RAM。这可以通过编辑 **/var/lib/dhis2/\<name\>/bin/setenv.sh** 中的参数来调整。

servlet 容器配置为使用最多 100 个线程的 http 连接器池运行。该参数可以通过编辑 **/var/lib/dhis2/\<name\>/conf/server.conf** 进行调整。

servlet 容器配置已针对运行 DHIS2 进行了专门调整。例如，tomcat 过滤器用于确保 Web 应用程序中的所有静态内容都可以由 Web 代理服务器（例如 nginx 或 apache）缓存。 webapp 的 lib 目录已显式放置在应用程序类路径中，以便 DHIS2 应用程序可以使用其他 jar，例如 java 编译的 apache Camel 路由。

请注意，默认情况下不部署 dhis2 war 文件。请参阅 **dhis2-deploy-war** 的手册页，了解如何通过互联网从最新的稳定全局构建、最新的主干构建或文件系统上用户指定的 war 文件部署 dhis2 war 文件。

您需要成为 **dhis2-admin** 组的成员才能使用这些工具和其他工具来管理实例。请参阅 **dhis2-create-admin** 的手册页。

- \ -p
  HTTP端口

- \ -n
  创建实例时不要创建数据库。请注意，如果您使用此选项，则必须手动编辑位于 /var/lib/dhis2/\<instance\>/dhis.conf 的属性文件。

`dhis2-instance-create -p 8080 hmis`

创建一个名为hmis的新实例，该实例在http端口8080上侦听。

dhis2-create-admin (1)、dhis2-deploy-war (1)、dhis2-startup (1)、dhis2-shutdown (1)、dhis2-deploy-war (1) 和 dhis2-log (1)。

---

**名称：** dhis2-startup
**目的：**启动dhis2实例

`/usr/bin/dhis2-startup 实例名称`

启动dhis2实例

dhis2-启动 myInstance

dhis2-shutdown（1），dhis2-deploy-war（1）和dhis2-instance-create（1）。

---

**名称：** dhis2-shutdown
**目的：**停止dhis2实例

`/usr/bin/dhis2-shutdown 实例名称`

停止dhis2实例

dhis2-关闭myInstance

dhis2-启动（1）

---

**名称：** dhis2-clone
**目的：**将一个实例的数据库克隆到另一个实例

`/usr/bin/dhis2-clone 主副本`

此命令将一个实例的数据库和 war 文件的副本创建到另一个实例中。其主要用例是您想要设置一个实例以进行培训。学员可以在训练实例上“放松”，而不必担心干扰生产实例的数据或配置。然而，他们将使用主数据库中存在的相同用户名、表单和报告。该命令应谨慎执行，因为它将完全替换目标实例的现有数据库

计划的数据集市和分析生成作业在目标实例中被禁用。

可以想象，该命令可以安排在清晨运行，以确保数据库恢复到原始状态，以便每天的训练开始。或者它可以按需运行。

dhis2-clone hmis培训

从名为 hmis 的现有实例创建一个名为 Training 的新实例。

---

**名称：** dhis2-deploy-war
**目的：**部署战争文件

` /usr/bin/dhis2-deploy-war

[选项]

实例名称`

- \ -t
  从最新的主干版本部署战争。不推荐用于生产系统

- \ -l
  部署位于自定义网址的战争

- \-F
  从文件系统上的文件部署战争

将 dhis2 war 文件部署到实例。未给出任何选项时的默认行为是从 http://stable.dhis2.org 下载并部署最新的稳定版本。

`dhis2-deploy-war myInstance` 将最新的稳定版本从 dhis2.org 部署到 myInstance 中。

`dhis2-deploy-war -f wars/dhis.war myInstance` 将 wars/dhis.war 处的 war 文件部署到 myInstance 中。

`dhis2-deploy-war -t myInstance` 将最新的主干构建从 dhis2 团队集成服务器部署到 myInstance 中。不要在生产中使用它。

`dhis2-deploy-war -l http://mywars.org/dhis.war myInstance` 将 war 文件从用户提供的 url 部署到 myInstance 中。

---

**名称：** dhis2-logview
**目的：**显示日志文件

`/usr/bin/dhis2-logview 实例名称`

使用此工具使用 less 查看 dhis2 实例的日志。输入“:q”退出。有关导航和搜索文件的提示，请参阅 less 的手册页。

dhis2-logview myInstance

dhis2-logtail（1）。

---

**名称：** dhis2-logtail
**用途：**实时显示底层日志文件。键入 Ctrl-C 退出。

`/usr/bin/dhis2-logtail 实例名称`

使用此工具实时显示dhis2实例的日志。

dhis2-logtail myInstance

dhis2-logview（1）。

---

**名称：** dhis2-create-admin
**目的：**创建一个用于管理dhis2实例的用户

`/usr/bin/dhis2-create-admin 用户名`

创建新的 dhis2 管理员用户。如果指定的用户不存在，系统将创建她。否则现有用户将被修改。 dhis2 管理员用户将拥有 postgres 超级用户权限，并且将成为 dhis2admin 组的成员。

像这样创建它

---

**名称：** dhis2-nginx
**目的：**使用指定或示例文件配置nginx

` /usr/bin/dhis2-nginx

[文件名]

`

使用该工具来配置nginx。如果未指定文件，则将使用示例文件。

该示例文件位于** / usr / share / dhis2-tools / samples / nginx / **

`dhis2-nginx`

将nginx配置为使用示例配置。

---

**名称：** dhis2-integrity
**目的：**检查DHIS2实例的数据库完整性

` /usr/bin/dhis2-integrity

[实例名称]

`

使用此工具检查 dhis2 数据库的完整性。该工具对指定数据库运行多个 SQL 查询。

`dhis2-完整性 dhis`

在名为dhis的数据库上运行各种完整性测试

---

**名称：** dhis2-restoredb
**目的：**将数据库转储恢复到dhis2实例。

` /usr/bin/dhis2-restoredb

[实例名称]

[数据库转储]

`

使用此工具还原数据库。

关闭指定的 dhis2 实例并获取当前数据库的快照备份。然后它会删除当前数据库并创建一个新的空白数据库。然后用指定的数据库转储填充新数据库。

`dhis2-restoredb myInstance db.sql`

将db.sql转储恢复到myInstance数据库

---

**名称：** dhis2-backup
**目的：**创建dhis2数据库的备份

`/usr/bin/dhis2-backup`

使用此工具创建数据库的备份。

`dhis2-备份`

在 ~/backup 文件夹中创建备份

---

**名称：** dhis2-delete-instance
**目的：**删除指定的DHIS2实例及其数据库。

` /usr/bin/dhis2-删除实例

[选项]

名字`

使用此工具删除 DHIS2 实例。这将删除用户及其主目录。它还删除数据库用户和数据库。

- \ -d
  数据库名称

`dhis2-删除实例 -d dhisdb dhis`

删除名为“ dhis”的dhis2实例及其名为“ dhisdb”的数据库

## 故障排除指南 { #troubleshooting-guide }

下表显示了一些常见问题以及可能的补救措施：

表：故障排除指南

| 问题 | 解决方案 |
| --- | --- |
| 当您尝试使用浏览器访问该站点时，它无法连接。 | 要么是网络有问题，要么是nginx没有运行。首先检查是否可以 ping 通主机。如果不是，则说明网络有问题。如果可以 ping 通该站点，则最有可能的问题是 nginx 未安装或未运行。通过输入以下内容验证 nginx 是否已启动、正在运行并侦听端口 443 和 80：<br> <br>`sudo netstat -ntlp`<br> <br>您应该看到 nginx 进程正在侦听这 2 个端口 |
| 您可以访问该站点，但在浏览器中看到 502 网关错误。 | 这意味着 nginx 无法连接到您的后台 dhis2 实例。要么是实例未运行，要么是nginx位置配置出错。运行上述相同的 netstat 命令，应该会显示你的实例正在 127.0.0.1 上监听，端口号通常为 8080 或你配置的任何端口。<br> <br>如果没有运行，请尝试使用 `dhis2-startup [实例名]`启动它<br> <br> 如果仍然没有运行，请使用 `dhis2-logview [实例名]`查看日志文件，看看是否有任何信息表明它为何无法启动。<br> <br>如果已经运行，并且可以通过 netstat 看到，则需要检查 nginx 配置文件，确保位置映射正确。 |
| 您可以访问该网站，但在浏览器中看到空白页面。 | 这通常意味着 dhis2 实例正在运行，但您忘记向其部署 war 文件。您需要在该实例上运行 dhis2-deploy-war。有关选项的详细信息，请参阅上面的参考部分。 |
