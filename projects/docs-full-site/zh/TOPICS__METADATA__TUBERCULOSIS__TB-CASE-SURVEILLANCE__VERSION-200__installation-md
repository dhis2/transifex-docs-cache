---
edit_url: "https://github.com/dhis2-metadata/TB_CS/blob/master/docs/tb_cs-installation.md"
revision_date: "2022-09-14"
tags:
    - 版本 2.0.0
    - 元数据
---

# 结核病例监测跟踪器安装指南{ #tb-cs-installation }

软件包版本 2.0.0

系统默认语言：系统默认语言：英语

可用翻译：法语、西班牙语、葡萄牙语

## 安装 { #installation }

模块的安装包括以下几个步骤：

1. [准备]（#准备元数据文件）元数据文件。
2. 将元数据文件[导入]（＃importing-metadata）到DHIS2中。
3. [配置]（＃additional-configuration）导入的元数据。
4. 导入后[Adapting]（＃adapting-the-tracker-program）程序

在开始 DHIS2 的安装和配置过程之前，建议首先阅读安装指南的各个部分。根据导入类型确定适用的章节：

1. 导入空白的 DHIS2 实例
2. 导入具有现有元数据的 DHIS2 实例（之前未导入其他版本的结核病例监测跟踪器）。
3. 更新现有/旧版结核病例监测跟踪器。

本文件中概述的步骤应在测试/暂存 DHIS2 实例中进行测试，然后才应用于生产环境。

## 要求 { #requirements }

安装模块需要 DHIS2 管理员用户账户。

应格外注意确保服务器本身和 DHIS2 应用程序的安全，并应定义对所收集数据的访问权限。有关 DHIS2 系统安全的详细信息不在本文讨论范围之内，请参阅[DHIS2 文档](https://docs.dhis2.org/)。

## 元数据文件{ #metadata-files }

元数据参考和元数据 json 文件提供了软件包版本和内容的技术细节。

在将元数据文件导入 DHIS2 之前，通常需要对其进行某些修改，但这并非总是必要的。

## 准备元数据文件 { #preparing-the-metadata-file }

建议在使用和调整任何 DHIS2 元数据包之前，将 DHIS2 通用 HIS 元数据包导入目标实例。DHIS2 支持的版本可在[元数据包下载](https://dhis2.org/metadata-package-downloads)下载通用 HIS 元数据包。

### 默认数据维度 { #default-data-dimension }

在 DHIS2 早期版本中，默认数据维度的 UID 是自动生成的。因此，虽然所有 DHIS2 实例都有默认类别选项、数据元素类别、类别组合和类别选项组合，但这些默认值的 UID 可能不同。DHIS2 的后期版本对默认维度的 UID 进行了硬编码，这些 UID 在配置包中使用。

为避免导入元数据时发生冲突，建议搜索并替换整个 .json 文件中所有出现的这些默认对象，将 .json 文件中的 UID 替换为导入该文件的实例中的 UID。表 1 显示了应替换的 UID，以及用于识别现有 UID 的 API 端点

| 目的 | 用户标识 | 应用程序接口端点 |
| --- | --- | --- |
| 类别 | `GLevLNI9wkl` | `.../api/categories.json?filter=name:eq:default`。 |
| 类别选项 | `xYerKDKCefk` | `.../api/categoryOptions.json?filter=name:eq:default`。 |
| 类别组合 | `bjDvmb4bfuf` | `.../api/categoryCombos.json?filter=name:eq:default`。 |
| 类别选项组合 | `HllvX50cXC0` | `../api/categoryOptionCombos.json?filter=name:eq:default` |

使用列出的 API 请求识别实例中默认维度的 UID，并用实例中的 UID 替换 json 文件中的 UID。

> **注意**
>
> 请注意，必须使用纯文本编辑器，而不是 Microsoft Word 等文字处理程序来执行搜索和替换操作。

### 指标类型 { #indicator-types }

指标类型是另一种可能造成导入冲突的对象类型，因为某些名称在不同的 DHIS2 数据库中 使用（如 "百分比"）。由于指标类型由其因子（包括 "仅分子 "指标的 1）定义，因此它们是明确的，可通过搜索和替换 UID 来替换。这种方法有助于避免潜在的导入冲突，并防止实施者创建重复的指标类型。下表包含可替换的 UID，以及用于识别现有 UID 的 API 端点：

| 目的 | 用户标识 | 应用程序接口端点 |
| --- | --- | --- |
| 仅分母（数字） | `CqNPn5KzksS` | `../api/indicatorTypes.json?filter=number:eq:true&filter=factor:eq:1` |

### 追踪实体类型 { #tracked-entity-type }

与指标类型一样，您的 DHIS2 数据库中可能已有跟踪实体类型。应更改对跟踪实体类型的引用，以反映系统中的情况，从而避免产生重复。下表包含可替换的 UID，以及用于识别现有 UID 的 API 端点：

| 目的 | 用户标识 | 应用程序接口端点 |
| --- | --- | --- |
| 个人 | `MCPQUTHX1Ze` | `../api/trackedEntityTypes.json?filter=name:eq:Person` |

### 选项代码{ #option-codes }

根据 DHIS2 命名规则，元数据代码使用大写字母、下划线和空格。可能出现的一些例外情况在相应的软件包文档中有所说明。当前软件包中元数据对象的所有代码都符合命名约定。目标数据库中使用的现有元数据对象的代码可能使用小写字母。在这种情况下，必须直接在数据库中更新这些值。

> **Important**
>
> During the import, the existing option codes will be overwritten with the updated upper case codes. In order to update the data values for existing data in the database, it is necessary to update the values stored in the database using database commands. Make sure to map existing old option codes and new option codes before replacing the values. Use staging instance first, before making adjustments on the production server.

对于数据元素值，请使用

    ```SQL
    UPDATE programstageinstance
    SET eventdatavalues = jsonb_set(eventdatavalues, '{"<affected data element uid>","value"}', '"<new value>"')
    WHERE eventdatavalues @> '{"<affected data element uid>":{"value": "<old value>"}}'::jsonb
    AND programstageid=<database_programsatgeid>;
    ```

> **注意**
>
> 当更新现有 DHIS2 实例中元数据元素的 UID 时，您需要在数据库中运行 SQL 命令，并在其他元数据对象（预测器、指标、验证规则表达式等）中替换其 UID 的所有出现和引用。

### 选项的排序顺序{ #sort-order-of-options }

检查系统中选项的排序顺序 `sortOrder` 是否与元数据包中选项的排序顺序一致。这仅适用于 json 文件和目标实例包含相同 UID 的选项和选项集时。

导入后，确保选项集中选项的排序顺序从 1 开始，排序顺序值不应有间隙（如 1、2、3、5、6）。

排序顺序可在维护应用程序中调整。

1. 转到适用的选项集
2. 打开 "选项 "部分
3. 使用 "按名称排序"、"按代码/数值排序 "或 "手动排序"。

确保一个选项集中没有相同排序顺序的选项。可以使用以下 api 端点检查这一点：

`../api/options.json?paging=false&fields=id,name,sortOrder&filter=optionSet.id:in:[<optionSet UID>]`

为了固定包含大量选项的选项集的排序顺序，请参考此 [SQL 脚本](https://github.com/dhis2/dhis2-utils/blob/master/resources/sql/clean_up_option_sort_order.sql)。

### 使用根组织单位 UID 进行可视化{ #visualizations-using-root-organisation-unit-uid }

分配给特定组织单位级别或组织单位组的可视化、事件报告、报告表和地图都有一个对根（第 1 级）组织单位的引用。此类对象（如果存在于元数据文件中）包含一个占位符 `<OU_ROOT_UID>`。使用 .json 文件编辑器中的搜索功能可以识别该占位符，并将其替换为目标实例中 1 级组织单位的 UID。

某些可视化和地图可能包含对组织单位级别的引用。由多个地图视图组成的地图可能会根据地图层的配置包含不同的组织单位级别引用。在导入元数据文件之前，请调整元数据 json 文件中的组织单位级别引用，以便与目标实例中的组织单位结构相匹配。

### 升级元数据包{ #upgrading-metadata-package }

在工作中的 DHIS2 实例中将现有软件包升级到较新版本是一项复杂的操作，必须慎之又慎。在升级生产服务器上的配置之前，必须先在暂存实例中运行该过程。由于元数据对象可能已被删除、添加或更改，因此必须确保：

-   现有数据的格式可根据新配置进行映射和调整；
-   从实例中删除终止的元数据对象；
-   更新现有对象；
-   创建新对象；
-   审查将用户分配到相关用户组的情况。

差异文件]（resources/tb_cs-1.0.1-vs-2.0.0.xlsx）将帮助实施者确定必要的更改。

## 导入元数据 { #importing-metadata }

使用 [Import/Export](#import_export) DHIS2 应用程序导入元数据包。建议在尝试实际导入元数据之前使用 "模拟运行 "功能来发现问题。如果 "模拟运行 "报告了任何问题或冲突，请参阅下面的[导入冲突]（#处理-导入-冲突）部分。如果 "试运行"/"验证 "导入无误，请尝试导入元数据。如果导入成功且无任何错误，则可以继续[配置](#configuration) 模块。在某些情况下，"模拟运行 "时不会显示导入冲突或问题，但在尝试实际导入时会显示。在这种情况下，导入摘要将列出需要解决的任何错误。

### 处理导入冲突 { #handling-import-conflicts }

> **注意**
>
> 如果将软件包导入新的 DHIS2 实例，由于目标数据库中没有元数据，因此不会发生导入冲突。导入元数据后，进入"[配置](#configuration) "部分。

可能会发生多种冲突，但最常见的是配置包中的元数据对象的名称、简称和/或代码已经存在于目标数据库中。这些问题有几种不同的解决方案，各有利弊。例如，哪种方案更合适取决于发生冲突的对象类型。

#### 备选方案1 { #alternative-1 }

重新命名 DHIS2 数据库中存在冲突的现有对象。这种方法的优点是无需修改 .json 文件，而是通过 DHIS2 的用户界面进行更改。这可能更不容易出错。这也意味着配置包保持原样，例如在发布包更新时，这可能是一个优势。在培训材料和文档中也经常引用原始软件包对象。

#### 备选方案2 { #alternative-2 }

重命名.json文件中存在冲突的对象。这种方法的优点是现有的DHIS2元数据保持不变。当存在培训材料或文档（例如链接到所讨论对象的数据字典的SOP）时，这可能是一个因素，并且不存在通过修改用户熟悉的元数据而使用户感到困惑的风险。

请注意，对于备选项1和2，修改可以简单到在名称中添加一个小的前缀/后缀，以最大程度地减少混乱的风险。

#### 备选3 { #alternative-3 }

第三种也是更复杂的方法是修改.json文件以重新使用现有的元数据。例如，在某个概念的某个选项集已经存在的情况下（例如“性别”），可以从.json文件中删除该选项集，并且对其UID的所有引用都将替换为数据库中已经存在的相应选项集。这样做的最大优点（不限于直接导入冲突的情况）是避免在数据库中创建重复的元数据。执行这种类型的修改时，需要考虑一些关键因素：

-   它需要有关DHIS2详细元数据结构的专业知识
-   该方法不适用于所有类型的对象。特别地，某些类型的对象具有依赖关系，这种依赖关系以这种方式难以解决，例如与分解有关。
-   将来对配置包的更新将很复杂。

### 升级 TB CS Tracker 程序的早期版本{ #upgrading-earlier-versions-of-tb-cs-tracker-program }

本节提供有关升级 TB CS 跟踪器早期版本（如 1.0.0 或 1.0.1 版）的指导。

对于现有实施，不建议直接升级实例中的元数据包。

在选择最佳升级策略之前，请使用以下步骤：

1. 将 **TB CS tracker 2.0.0** 导入新的测试实例
2. 将现有数据与 TB CS 追踪器 2.0.0 配置进行比较和映射
3. 根据当地要求调整 TB CS 跟踪器 2.0.0
4. 使用现有或自定义数据传输工具将数据从现有配置传输到 TB CS tracker 2.0.0
5. 就升级策略（调整现有配置或将数据移至新跟踪器）做出基于评估的决策

出于演示和培训目的，建议采用以下升级流程：

1. 使用 TB CS 跟踪器创建实例备份
2. 在导入 TB CS tracker.2.0.0 之前，必须从目标实例中删除以下列出的 TB CS 元数据对象。 如果您在以前版本的软件包中自定义或添加了任何元数据对象，则需要在升级后对这些对象进行备份、重新配置和导入。从目标实例中删除以下元数据对象：
    - 仪表板
    - 可视化
    - 地图
    - 事件报告
    - 程序指示器组
    - 计划指标
    - 指标组
    - 指标
    - 跟踪实体实例过滤器
    - dataElementGroups
    - 程序规则
    - 程序规则动作
    - 程序规则变量
3. 如果演示/培训实例中有现有数据，则需要导出所有 TB CS 追踪器注册数据，在实例中删除这些数据，并在数据映射和 TB CS 追踪器更新升级后重新导入。在 TB CS tracker 1.0.0 中，只有确诊的肺结核病例才会加入该计划。TB CS tracker 2.0.0 允许推测病例和确诊病例加入。1.0.0 中的注册日期（诊断日期）将成为 2.0.0 中的注册日期。对于现有的注册病例，注册日期必须与诊断日期进行映射，后者是注册阶段的一个数据元素。通知日期和其他数据元素将需要额外的映射。
4. 将 TB CS tracker 2.0.0 导入实例。
5. 导入映射数据和缺失数据。
6. 测试数据输入、仪表盘和一般功能。

## 组态 { #configuration }

成功导入所有元数据后，需要执行一些步骤，模块才能正常运行。

### 分享中 { #sharing }

首先，您必须使用 DHIS2 的_共享_功能来配置哪些用户（用户组）应查看与程序相关的元数据和数据，以及谁可以在程序中注册/输入数据。默认情况下，共享配置如下：

-   仪表板
-   可视化、地图、事件报告和报告表格
-   数据集
-   类别选项
-   计划和计划阶段

这些核心用户群都包含在软件包中：

-   TB 管理员
-   结核病防治
-   结核病实验室访问
-   结核病数据采集
-   结核病实验室数据采集

默认情况下，将以下内容分配给这些用户组

| 目的 | 用户组 |  |  |  |  |
| :-- | :-- | :-- | :-- | :-- | :-- |
|  | 结核病防治 | 结核病实验室访问 | TB 管理员 | 结核病数据采集 | 结核病实验室数据采集 |
| 追踪实体类型 | **元数据：** 可以查看<br> **数据：** 可以查看 | **元数据：** 可以查看<br> **数据：** 可以查看 | **元数据：** 可以编辑和查看<br> **数据：** 无法访问 | **元数据：** 可以查看<br> **数据：** 可以捕获和查看 | **元数据：** 可以查看<br> **数据：** 可以捕获和查看 |
| 程序 | **元数据：** 可以查看<br> **数据：** 可以查看 | **元数据：** 可以查看<br> **数据：** 可以查看 | **元数据：** 可以编辑和查看<br> **数据：** 无法访问 | **元数据：** 可以查看<br> **数据：** 可以捕获和查看 | **元数据：** 可以查看<br> **数据：** 可以捕获和查看 |
| 计划阶段 | **元数据：** 可以查看<br> **数据：** 可以查看 | **组访问仅限于阶段：结核病登记、诊断和化验结果**<br> **元数据：** 可查看<br> **数据：** 可查看 | **元数据：** 可以编辑和查看<br> **数据：** 无法访问 | **元数据：** 可以查看<br> **数据：** 可以捕获和查看 | **组访问仅限于阶段：结核病登记和实验室结果**<br> **元数据：** 可查看<br> **数据：** 可捕获和查看 |
| 仪表板 | **元数据：** 可以查看<br> **数据：** 可以查看 | **元数据：** 可以查看<br> **数据：** 可以查看 | **元数据：** 可以编辑和查看<br> **数据：** 无法访问 | 无法访问 | 无法访问 |

需要根据用户在系统中的角色将其分配到相应的用户组。应根据需要设置软件包中其他对象的共享。有关配置共享的详细信息，请参阅 [DHIS2 Documentation](https://docs.dhis2.org/en/develop/using-the-api/dhis-core-version-master/sharing.html) 。

### 用户角色 { #user-roles }

用户将需要用户角色才能参与DHIS2中的各种应用程序。建议以下最低角色：

1. 跟踪器数据分析：可以查看事件分析并访问仪表板，事件报告，事件可视化器，数据可视化器，数据透视表，报告和地图。
2. 跟踪器数据捕获：可以添加数据值，更新跟踪的实体，跨组织单位搜索跟踪的实体以及访问跟踪器捕获

有关配置用户角色的更多信息，请参见[DHIS2文档]（http://dhis2.org/documentation）。

### 组织单位 { #organisation-units }

计划必须分配给组织单位层次结构中的适用组织单位。

### 重复的元数据 { #duplicated-metadata }

> **注意**
>
> 本节仅适用于导入已有元数据的 DHIS2 数据库。如果您使用的是新的 DHIS2 实例，请跳过本节，转到[调整跟踪程序](#adapting-the-tracker-program)。如果您正在使用任何依赖于当前元数据的第三方应用程序，请考虑到此更新可能会破坏它们"。

即使成功导入了元数据而没有任何导入冲突，元数据中也可能存在重复项-数据元素，跟踪的实体属性或已存在的选项集。正如上面有关解决冲突的部分所述，要牢记的一个重要问题是，在DHIS2中更改元数据的决定还需要考虑与现有元数据有不同关联的其他文档和资源。 ，以及通过配置包导入的元数据。因此，解决重复项不仅是“清理数据库”的问题，而且还要确保做到这一点，例如，不破坏与其他系统的集成，使用培训材料的可能性，破坏SOP等。这将非常很大程度上取决于上下文。

### 常数 { #constants }

肺结核病例监测跟踪软件包包括一套检测项目和一份药物清单，实施国可根据本国国情（如本国使用/可用的药物和检测项目）对其进行修改。通过使用常量和相应的程序规则，实施国的系统管理员可根据需要轻松 "打开 "或 "关闭 "药物和检测类型。常量对象的说明中提供了配置常量的说明。

### 配置跟踪器捕获界面、小工具和顶栏{ #configuring-tracker-capture-interface-widgets-and-top-bar }

安装软件包后，您必须配置跟踪捕获仪表板。该配置包括数据输入表单、小工具和顶栏。

#### 数据输入表 { #data-entry-forms }

-   注册第一个（测试）案例后，访问跟踪捕获表单中的**设置**菜单，选择**显示/隐藏小工具**
-   使用**时间轴数据录入**
-   确保选中**注册**、**反馈**和**档案**部件。点击**关闭**。

#### 顶部酒吧{ #top-bar }

-   进入**设置**菜单，选择**顶栏设置**
-   选择 **激活顶栏**
-   选择所需信息字段并指定 ** 排序**

| 推荐领域                     | 排序顺序 |
| :------------------------------------- | :--------- |
| **属性**                         |            |
| 结核病登记号                 | 2          |
| **指标**                         |            |
| 案例分类                    | 8          |
| 患者年龄（岁）                  | 5          |
| 诊断时的艾滋病毒感染状况                | 6          |
| 诊断时的抵抗力                | 10         |
| 治疗方案                      | 9          |
| 诊断日期                      | 1          |
| 诊断后的月份                 | 3          |
| 诊断时的抗药性分类 | 7          |
| 患者年龄（月）                 | 4          |

-   点击**保存**
-   返回**设置**菜单。单击**保存仪表板布局为默认**。为所有用户锁定布局。

### 计划通知{ #program-notifications }

TB CS Tracker 2.0.0 包含 4 个通知模板，可根据本地要求进行编辑。设置短信或电子邮件通知需要额外配置。

### 将基于案例的数据报告到汇总数据集{ #reporting-case-based-data-into-aggregate-data-sets }

基于病例的结核病监测跟踪系统获取的数据可纳入标准的汇总报告（即月度、季度、年度或由国家决定）。DHIS2 结核病 HMIS 系统的总体设计可在 [https://dhis2.org/metadata-package-downloads/#tb](https://dhis2.org/metadata-package-downloads/#tb) 上查阅。

该[Tracker-to-Aggregate 工具](https://github.com/dhis2/integration-t2a)可轻松配置用于数据传输。

更多信息请参阅[追踪汇总数据整合指南](https://docs.dhis2.org/en/implement/maintenance-and-use/tracker-and-aggregate-data-integration.html#how-to-saving-aggregated-tracker-data-as-aggregate-data-values)。

结核病例监测和实验室软件包中的**计划指标**与 DHIS2 结核病综合软件包（实验室、通知和结果）中的**数据元素**和**类别选项组合**进行了映射。

## 调整跟踪器程序 { #adapting-the-tracker-program }

Once the programme has been imported, you might want to make certain modifications to the programme. Examples of local adaptations that _could_ be made include:

-   向表单添加其他变量。
-   根据国家惯例修改数据元素/选项名称。
-   向变量和/或数据输入表单添加翻译。
-   根据当地案例定义修改计划指标。

但是，如果您决定更改或删除任何包含的表格/元数据，强烈建议格外小心。修改可能会破坏功能，例如程序规则和程序指示器。
