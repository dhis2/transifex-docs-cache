---
edit_url: "https://github.com/dhis2-metadata/NCD_HTN/blob/master/docs/ncd_htn-installation.md"
revision_date: '2022-09-27'
tags:
- 元数据
---

# 高血压注册表 - 安装指南{ #ncd-htn-installation }

## 安装 { #installation } 

模块的安装包括以下几个步骤：

1. [准备]（＃preparing-the-metadata-file）具有DHIS2元数据的元数据文件。
2. 将元数据文件[导入]（＃importing-metadata）到DHIS2中。
3. [配置]（＃additional-configuration）导入的元数据。
4. 导入后[Adapting]（＃adapting-the-tracker-program）程序

建议在开始DHIS2中的安装和配置过程之前先通读每个部分。根据要导入到新的DHIS2实例还是具有元数据的DHIS2实例，已识别出不适用的节。在重复或转移到DHIS2的生产实例之前，应在测试/分阶段环境中测试本文档中概述的过程。

## 要求 { #requirements } 

为了安装该模块，需要DHIS2上的管理员用户帐户。在DHIS2的生产实例上执行此文档中概述的过程之前，应在测试/分阶段环境中进行测试。

应格外注意确保服务器本身和 DHIS2 应用程序的安全，以限制对所收集数据的访问。有关 DHIS2 系统安全的详细信息不在本文讨论范围之内，请参阅[DHIS2 文档](https://docs.dhis2.org/)。

## 准备元数据文件 { #preparing-the-metadata-file } 

**注意**：如果要将软件包安装在DHIS2的新实例上，则可以跳过“准备元数据文件”部分，然后立即移至“ [将元数据文件导入DHIS2]（＃importing-元数据）。”

尽管并非总是必要，但在将元数据文件导入DHIS2之前对其进行某些修改通常可能是有利的。

### 默认数据维度 { #default-data-dimension } 

在早期版本的DHIS2中，默认数据维的UID是自动生成的。因此，尽管所有DHIS2实例都具有默认类别选项，数据元素类别，类别组合和类别选项组合，但这些默认的UID可以不同。 DHIS2的更高版本具有用于默认维度的硬编码UID，并且这些UID在配置包中使用。

为避免导入元数据时发生冲突，建议搜索并替换整个 .json 文件中所有出现的这些默认对象，将 .json 文件中的 UID 替换为导入该文件的数据库的 UID。表 1 显示了应替换的 UID，以及用于识别现有 UID 的 API 端点

|目的|用户标识|应用程序接口端点|
|--|--|--|
|类别|GLevLNI9wkl|../api/categories.json?filter=name:eq:default|
|类别选项|xYerKDKCefk|../api/categoryOptions.json?filter=name:eq:default|
|类别组合|bjDvmb4bfuf|../api/categoryCombos.json?filter=name:eq:default|
|类别选项组合|HllvX50cXC0|../api/categoryOptionCombos.json?filter=name:eq:default|

例如，如果将配置包导入 [https://play.dhis2.org/demo](https://play.dhis2.org/demo)，则默认类别选项组合的 UID 可以通过<https://play.dhis2.org/demo/api/categoryOptionCombos.json?filter=name:eq:default> 识别为 bRowv6yZOF2。

然后，您可以在.json文件中搜索所有出现的HllvX50cXC0并将其替换为bRowv6yZOF2，因为这是您要导入的系统中的默认ID。 ***请注意，此搜索和替换操作必须使用纯文本编辑器***，而不是像Microsoft Word这样的字处理器。

### 指标类型 { #indicator-types } 

指标类型是另一种可能导致导入冲突的对象，因为在不同的DHIS2数据库中使用了某些名称（例如“百分比”）。由于指标类型仅由其因子以及是否为无分母的简单数字定义，因此它们是明确的，可以通过搜索和替换UID进行替换。这样可以避免潜在的导入冲突，并避免创建重复的指标类型。表2显示了可以替换的UID以及用于标识现有UID的API端点

|目的|用户标识|应用程序接口端点|
|--|--|--|
|仅分母（数字）|kHy61PbChXr|../api/indicatorTypes.json?filter=number:eq:true&filter=factor:eq:1|
|百分比|hmSnCXmLYwt|../api/indicatorTypes.json?filter=number:eq:false&filter=factor:eq:100|

#### 追踪实体类型 { #tracked-entity-type } 

像指示器类型一样，您的DHIS2数据库中可能已经存在跟踪的实体类型。对跟踪实体类型的引用应该更改以反映系统中的内容，因此您不会创建重复项。表3显示了可以替换的UID以及用于标识现有UID的API端点

|目的|用户标识|应用程序接口端点|
|--|--|--|
|个人|MCPQUTHX1Ze|../api/trackedEntityTypes.json?filter=name:eq:Person|


#### 使用根组织单位的可视化{ #visualizations-using-root-organisation-unit } 

可视化（如果包含在软件包中）可能包含根组织单元的占位符。占位符标签示例为<OU_ROOT_UID> 。在尝试导入软件包之前，您需要用系统中根组织单位的 UID 替换该标签。

## 导入元数据 { #importing-metadata } 

.json 元数据文件是通过 DHIS2 的 [Import/Export](https://docs.dhis2.org/en/use/user-guides/dhis-core-version-master/maintaining-the-system/importexport-app.html) 应用程序导入的。建议在尝试实际导入元数据之前使用 "模拟运行 "功能来发现问题。如果 "模拟运行 "报告了任何问题或冲突，请参阅下面的 [导入冲突](https://who.dhis2.org/documentation/installation_guide_complete.html#handling-import-conflicts) 部分。如果 "模拟"/"验证 "导入无误，请尝试导入元数据。如果导入成功且无任何错误，则可以继续[配置](https://who.dhis2.org/documentation/installation_guide_complete.html#configuration) 模块。在某些情况下，"试运行 "期间不会显示导入冲突或问题，但在尝试实际导入时会显示。在这种情况下，导入摘要将列出需要解决的任何错误。

### 处理导入冲突 { #handling-import-conflicts } 

***注意***：如果要导入到新的DHIS2实例中，则不必担心导入冲突，因为要导入的数据库中没有与之冲突的内容。按照说明导入元数据，然后继续进行“ [附加配置]（＃additional-configuration）”部分。

可能会发生许多不同的冲突，尽管最常见的是配置包中有目标数据库中已经存在名称，简称和/或代码的元数据对象。对于这些问题，有两种替代解决方案，具有不同的优缺点。哪一个更合适将取决于例如发生冲突的对象的类型。

#### 备选方案1 { #alternative-1 } 

重命名DHIS2数据库中存在冲突的现有对象。这种方法的优点是无需修改.json文件，因为更改是通过DHIS2的用户界面完成的。这很可能不太容易出错。这也意味着配置包将保留原样，例如在使用基于配置包的培训材料和文档时，这可能是一个优势。

#### 备选方案2 { #alternative-2 } 

重命名.json文件中存在冲突的对象。这种方法的优点是现有的DHIS2元数据保持不变。当存在培训材料或文档（例如链接到所讨论对象的数据字典的SOP）时，这可能是一个因素，并且不存在通过修改用户熟悉的元数据而使用户感到困惑的风险。

请注意，对于备选项1和2，修改可以简单到在名称中添加一个小的前缀/后缀，以最大程度地减少混乱的风险。

#### 备选3 { #alternative-3 } 

第三种也是更复杂的方法是修改.json文件以重新使用现有的元数据。例如，在某个概念的某个选项集已经存在的情况下（例如“性别”），可以从.json文件中删除该选项集，并且对其UID的所有引用都将替换为数据库中已经存在的相应选项集。这样做的最大优点（不限于直接导入冲突的情况）是避免在数据库中创建重复的元数据。执行这种类型的修改时，需要考虑一些关键因素：

* 它需要有关DHIS2详细元数据结构的专业知识
* 该方法不适用于所有类型的对象。特别地，某些类型的对象具有依赖关系，这种依赖关系以这种方式难以解决，例如与分解有关。
* 将来对配置包的更新将很复杂。

### 已知导入问题{ #known-import-issues } 

1. 选项的排序顺序不一致
  症状：导入失败且无错误。请检查服务器/实例中的 dhis.log。如果出现以下错误

  ```* ERROR 2021-07-15 10:05:58,018 java.lang.NullPointerException
             于
     org.hisp.dhis.dxf2.metadata.objectbundle.hooks.OptionSetObjectBundleHook.lambda$updateOption$0(OptionSetObjectBundleHook.java:71)
             at java.lang.Iterable.forEach(Iterable.java:75)
  ```

  该问题与软件包中包含的选项集中的选项排序顺序与实例/服务器中相同选项的排序顺序不匹配有关。
2. 重复键值违反了唯一性约束
  症状：导入失败且无错误。请检查服务器/实例中的 dhis.log。如果出现以下错误

  ```* ERROR 2021-07-15 10:12:20,272 ERROR: duplicate key value violates unique constraint "uk_myox13mr8r27oxl7ts33ntpd5"
   详细信息：键 (uid)=(YYtAbckt77l) 已存在。(SqlExceptionHelper.java [taskScheduler-23])
     * ERROR 2021-07-15 10:12:20,303 javax.persistence.PersistenceException: org.hibernate.exception.ConstraintViolationException: 无法执行语句
  ```

## 附加配置 { #additional-configuration } 

成功导入所有元数据后，需要执行一些步骤，模块才能正常运行。

### 分享中 { #sharing } 

首先，您将必须使用DHIS2的*共享*功能来配置哪些用户（用户组）应查看与程序关联的元数据和数据，以及谁可以在程序中注册/输入数据。默认情况下，已为以下配置共享：

* 追踪实体类型
* 程序
* 计划阶段
* 仪表板

软件包随附三个用户组：

* 高血压网络接入
* HTN 管理员
* 高血压数据采集

默认情况下，将以下内容分配给这些用户组

|目的|用户组|||
|--|--|--|--|
||_Access_|_Admin_|_Data capture_|
|_*跟踪实体类型*_|元数据：可查看<br> 数据：可查看|元数据：可编辑和查看<br> 数据：可查看|元数据：可查看<br> 数据：可采集和查看|
|_*程序*_|元数据：可查看<br> 数据：可查看|元数据：可编辑和查看<br> 数据：可查看|元数据：可查看<br> 数据：可采集和查看|
|_*Program Stages*_|元数据：可查看<br> 数据：可查看|元数据：可编辑和查看<br> 数据：可查看|元数据：可查看<br> 数据：可采集和查看|
|_*仪表盘*_|元数据：可查看<br> 数据：可查看|元数据：可编辑和查看<br> 数据：可查看|元数据：可查看<br> 数据：可查看|

根据用户在系统中的角色，将其分配到相应的用户组。您可能需要为软件包中的其他对象启用共享，这取决于您的设置。有关配置共享的详细信息，请参阅 [DHIS2 Documentation](https://docs.dhis2.org/en/use/user-guides/dhis-core-version-master/configuring-the-system/about-sharing-of-objects.html) 。

### 用户角色 { #user-roles } 

用户将需要用户角色才能参与DHIS2中的各种应用程序。建议以下最低角色：

1. 跟踪器数据分析：可以查看事件分析并访问仪表板，事件报告，事件可视化器，数据可视化器，数据透视表，报告和地图。
2. 跟踪器数据捕获：可以添加数据值，更新跟踪的实体，跨组织单位搜索跟踪的实体以及访问跟踪器捕获

有关配置用户角色的更多信息，请参阅 [DHIS2 文档](https://docs.dhis2.org)。

### 组织单位 { #organisation-units } 

您必须将程序分配给自己的层次结构中的组织单位，以便能够在跟踪器捕获中查看程序。

### 重复的元数据 { #duplicated-metadata } 

**注意**：仅当您要导入已经存在元数据的DHIS2数据库时，此部分才适用。如果您使用的是新的DHIS2实例，请跳过本节，然后转到[调整跟踪程序]（＃adapting-the-tracker-program）。”

即使成功导入了元数据而没有任何导入冲突，元数据中也可能存在重复项-数据元素，跟踪的实体属性或已存在的选项集。正如上面有关解决冲突的部分所述，要牢记的一个重要问题是，在DHIS2中更改元数据的决定还需要考虑与现有元数据有不同关联的其他文档和资源。 ，以及通过配置包导入的元数据。因此，解决重复项不仅是“清理数据库”的问题，而且还要确保做到这一点，例如，不破坏与其他系统的集成，使用培训材料的可能性，破坏SOP等。这将非常很大程度上取决于上下文。

需要牢记的重要一点是，DHIS2 有一些工具可以隐藏元数据中潜在重复的一些复杂问题。例如，在存在重复选项集的情况下，可以通过[共享](https://docs.dhis2.org/en/use/user-guides/dhis-core-version-master/configuring-the-system/about-sharing-of-objects.html) ，为用户组隐藏重复选项集。

## 调整跟踪器程序 { #adapting-the-tracker-program } 

程序导入后，您可能需要对程序进行某些修改。可以**的本地改编例子包括：

* 向表单添加其他变量。
* 根据国家惯例修改数据元素/选项名称。
* 向变量和/或数据输入表单添加翻译。
* 根据本地案例定义修改程序指标

但是，如果您决定更改或删除任何包含的表格/元数据，强烈建议格外小心。修改可能会破坏功能，例如程序规则和程序指示器。

