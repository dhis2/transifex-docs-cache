---
edit_url: "https://github.com/dhis2/dhis2-android-sdk/blob/master/docs/content/developer/database.md"
revision_date: '2024-05-09'
tags:
- Develop
---

# 数据库{ #android_sdk_database }

## 数据库范围{ #android_sdk_database_scope }
SDK 将[服务器，用户]对的数据保存在独立的数据库中。从版本 1.6.0 开始，SDK 支持多个帐户（对 [服务器，用户]），每个帐户的信息都存储在独立的数据库中。仅当删除帐户时，数据库才会被删除。成功登录后会自动创建数据库。

## 加密{ #android_sdk_database_encryption }
从 SDK 版本 1.1.0 开始，可以将数据存储在加密数据库中。加密密钥是随机生成的
通过 SDK 并保持安全。

加密状态（如果数据库是否加密）可以在 android-settings-app 中的服务器级别进行配置。
默认状态为 false：如果未安装应用程序，则数据库不会加密。

在给定服务器和用户首次登录期间，将从 API 下载加密状态并下载
将创建给定类型的数据库。

在以后登录或元数据同步时，SDK会再次从服务器下载加密状态，并且，
如果更改，将加密或解密当前数据库而不会丢失数据。

### 加密性能 { #encryption-performance } 
- 数据库大小：无论是否进行加密，数据库大小都大致相同。
- 速度：使用加密数据库，读写速度平均降低5％至10％。

## 进口/出口{ #android_sdk_database_import_export }
数据库可以导出和导入到不同的设备中。 

该功能的主要用途之一是调试：有时很难知道同步问题或错误的原因，而在模拟器或不同设备上复制问题是非常有用的。  

```kt
// 导出数据库
val database = d2.maintenanceModule().databaseImportExport().exportLoggedUserDatabase()

// 导入数据库
val metadata = d2.maintenanceModule().databaseImportExport().importDatabase(database)

// 元数据对象包含数据库信息（服务器地址、用户名......）。 

// 导入数据库后，可以像往常一样登录
d2.userModule().login("username", "password", "serverUrl")
```

导出过程使用 ZIP 加密技术对数据库进行加密，因此除非提供正确的用户凭据，否则无法读取数据库文件。 

需要考虑的事项
- 导出的文件只包含数据库，不包含文件资源（图像、图标、文件......）。
- 接收设备运行的**SDK 版本必须等于或高于**用于导出数据库的 SDK 版本。

