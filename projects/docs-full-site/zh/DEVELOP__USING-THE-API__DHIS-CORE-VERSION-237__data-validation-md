---
edit_url: "https://github.com/dhis2/dhis2-docs/blob/2.37/src/developer/web-api/data-validation.md"
revision_date: '2021-10-14'
tags:
- DHIS 核心 2.37 版
- Develop
---

# 数据验证 { #data-validation } 

## 验证方式 { #webapi_validation } 

要生成数据验证摘要，您可以与
验证资源。数据集资源针对数据输入进行了优化
用于验证数据集/表单的客户端，可以像这样访问：

    GET /api/33/validation/dataSet/QX4ZTUbOt3a.json?pe=201501&ou=DiszpKrYNg8

除了基于数据集验证规则外，还有两种
执行验证的其他方法：自定义验证和
预定验证。

第一个路径变量是引用数据集的标识符
证实。支持 XML 和 JSON 资源表示。这
响应包含违反验证规则。这将延长
在即将到来的版本中有更多的验证类型。

要检索与特定数据集相关的验证规则，
意思是所有数据元素都是一部分的带有公式的验证规则
的特定数据集，您可以向
`validationRules` 资源如下：

    GET /api/validationRules?dataSet=<dataset-id>

验证规则有左边和右边，也就是
根据运营商比较有效性。有效的运算符
值见下表。



表格操作符

| 值 | 描述 |
|---|---|
| equal_to | 等于 |
| not_equal_to | 不等于 |
| greater_than | 大于 |
| greater_than_or_equal_to | 大于或等于 |
| less_than | 小于 |
| less_than_or_equal_to | 小于或等于 |
| compulsory_pair | 如果任何一方在场，另一方也必须在场 |
| exclusive_pair | 如果一方在场，另一方不得在场 |

左边和右边的表达式是数学表达式
其中可以包含对数据元素和类别选项的引用
以下格式的组合：

    $ {<dataelement-id>。 <catoptcombo-id>}

左侧和右侧表达式有一个 *missing 值
战略*。这是指系统应该如何处理数据值
缺少数据元素/类别选项组合引用
在公式中是否应该检查验证规则
为有效性或跳过。有效的缺失值策略见于
下表。



表格缺失值策略

| 值 | 描述 |
|---|---|
| skip_if_any_value_missing | 如果缺少任何数据值，则跳过验证规则 |
| SKIP_IF_ALL_VALUES_MISSING | 如果所有数据值都缺失，则跳过验证规则 |
| NEVER_SKIP | 无论数据值是否缺失，绝不跳过验证规则 |

## 验证结果{ #webapi_validation_results } 

验证结果是在执行期间发现的违规的持久结果
验证分析。如果您在开始时选择“持久结果”或
安排验证分析，发现的任何违规将存储在
数据库。当结果存储在数据库中时，它将被使用
对于 3 件事：

1.  根据存储的结果生成分析。

2.  未生成通知的持久结果将这样做，
    一次。

3.  跟踪结果是否产生了
    通知。

4.  跳过运行时已经检查过的规则
    验证分析。

这意味着如果你不坚持你的结果，你将无法
为验证结果生成分析，如果选中，结果将
每次找到并运行验证时生成通知
分析可能会更慢。

### 查询验证结果{ #query-validation-results } 

持久化的验证结果可以在下面查看
端点：

    GET /api/33/validationResults

您还可以使用验证结果 ID 检查单个结果
在这个端点：

    GET /api/33/validationResults/<id>

验证结果也可以通过以下属性过滤：

* 组织单位：`ou = <UID>`
* 验证规则：`vr = <UID>`
* 期间：`pe = <ISO-expression>`

上面的每个过滤器属性可以多次出现，例如：

    GET /api/36/validationResults?ou=jNb63DIHuwU&ou=RzgSFJ9E46G

同一过滤器的多个值与OR组合，结果必须匹配给定值之一。

如果使用了一个以上的过滤器属性，则将它们与AND组合在一起，结果必须与每个属性的值之一匹配。

对于时段过滤器，匹配结果必须与任何指定的时段重叠。

此外，验证结果还可以按其创建日期进行过滤：

    GET /api/36/validationResults?createdDate=<date>

该过滤器可以与其他任何过滤器结合使用。

### 触发验证结果通知{ #trigger-validation-result-notifications } 

验证结果每天向相应用户发送一次、
但也可以使用以下方式手动触发，按需运行
API 端点：

    POST / api / 33 / validation / sendNotifications

使用此端点仅发送未发送的结果。

### 删除验证结果{ #delete-validation-results } 

验证结果可以通过ID手动删除，

    删除/ api / 36 / validationResults / <id>

或使用过滤器

    删除/ api / 36 / validationResults？ <filters>

支持的过滤参数包括

* `ou = <UID>`以匹配组织单位的所有验证结果；提供多个参数时，多个单元组合或
* `vr = <UID>`以匹配验证规则的所有验证结果；提供多个参数时，多个规则组合或
* `pe = <ISO-expression>`以匹配与与指定时期重叠的时期相关的所有验证结果
* `created = <ISO-expression>`以匹配在规定时间内创建的所有验证结果
* `notificationSent=<boolean>` to match either only validation results for which a notification was or wasn't sent

如果组合了过滤器，则所有条件都必须为真（AND逻辑）。

举几个例子：

要删除 2020 年第一季度与 UID 为`NqwvaQC1ni4`的组织单位相关的所有验证结果，请使用：

```
DELETE /api/36/validationResults?ou=NqwvaQC1ni4&pe=2020Q1
```

要删除在2019年第1周创建的且已发送通知的所有验证结果，请使用：

```
DELETE /api/36/validationResults?created=2019W1&notificationSent=true
```

任何删除操作都需要_执行维护任务_的权限。


## 离群值检测 { #outlier-detection } 

异常值检测端点可检测汇总数据值中的异常值。

```
GET / api / 36 / outlierDetection
```

该端点支持两种用于检测离群值的算法：

* ** Z分数：** Z分数定义为分数与平均值之间的绝对偏差除以标准偏差。必须使用z分数算法指定一个阈值参数，该阈值参数表示与平均值之间的标准偏差，以定义异常值的上限和下限。
* **修改后的 Z-score：** 与 Z-score 相同，但它使用中位数而不是平均数来衡量中心倾向。参数与 Z 值相同。
* ** Min-max：** Min-max数据元素值是指可以根据数据元素，组织单位和类别选项组合插入DHIS 2的自定义边界。

离群值将*根据显着性*排序，默认情况下是与均值的绝对偏差，最高有效值在前。这有助于快速识别对数据质量和数据分析影响最大的离群值。

### 请求查询参数 { #request-query-parameters } 

支持以下查询参数。

| 查询参数 | 描述                                                  | 强制的 | 选项（默认为默认）                   |
| --------------- | ------------------------------------------------------------ | --------- | ----------------------------------------- |
| ds              | 数据集，可以多次指定。                   | 不 [*]    | 数据集标识符。                      |
| 德              | 数据元素，可以多次指定。               | 不 [*]    | 数据元素标识符。                  |
| 开始日期       | 间隔的开始日期，以检查异常值。               | 是的       | 日期（yyyy-MM-dd）。                        |
| 结束日期         | 检查异常值的时间间隔的结束日期。                 | 是的       | 日期（yyyy-MM-dd）。                        |
| 欧              | 组织单位，可以多次指定。          | 是的       | 组织单位标识符。             |
| 算法       | 用于离群值检测的算法。                      | 不        | `Z_SCORE`, `MIN_MAX`, `MOD_Z_SCORE`       |
| 临界点       | 异常值阈值。仅限于 `Z_SCORE` 和 `MOD_Z_SCORE` 算法。 | 不        | 数值，大于零。默认值：3.0。 |
| 数据起始日期   | 计算均值和 std dev 的区间起始日期。仅限于 `Z_SCORE` 和 `MOD_Z_SCORE` 算法。 | 不        | 日期（yyyy-MM-dd）。 |
| 数据结束日期     | 平均值和 std dev 计算间隔的结束日期。仅限于 `Z_SCORE` 和 `MOD_Z_SCORE` 算法。 | 不        | 日期（yyyy-MM-dd）。   |
| 订购         | 按字段排序。仅限`Z_SCORE`和`MOD_Z_SCORE`算法。| 不        | `MEAN_ABS_DEV`，`Z_SCORE`                 |
| 最大结果      | 输出的最大限制。                                    | 不        | 整数，大于零。默认值：500。 |

[*]  You must specify either data sets with the `ds` parameter, which will include all data elements in the data sets, _or_ specify data elements with the `de` parameter.

必须定义至少一个数据集或数据元素，开始日期和结束日期以及至少一个组织单位。

The `startDate` and `endDate` parameters are mandatory and refer to the time interval for which you want to detect outliers. The `dataStartDate` and `dataEndDate` parameters are optional and refer to the time interval for the data to use when calculating the mean and std dev, which are used to eventually calculate the z-score.

### 用法和示例{ #usage-and-examples } 

使用默认的z分数算法获取异常值：

```
GET / api / 36 / outlierDetection？ds = BfMAe6Itzgt＆ds = QX4ZTUbOt3a
  ＆ou = O6uvpzGd5pu＆ou = fdc6uOvgoji＆startDate = 2020-01-01＆endDate = 2020-12-31
```

使用特定算法和特定阈值获取异常值：

```
GET / api / 36 / outlierDetection？ds = BfMAe6Itzgt＆ds = QX4ZTUbOt3a
  ＆ou = O6uvpzGd5pu＆startDate = 2020-01-01＆endDate = 2020-12-31
  ＆algorithm = Z_SCORE＆threshold = 2.5
```

获取按z分数排序的异常值：

```
GET / api / 36 / outlierDetection？ds = BfMAe6Itzgt
  ＆ou = O6uvpzGd5pu＆startDate = 2020-01-01＆endDate = 2020-12-31
  ＆orderBy = Z_SCORE
```

获取前10个离群值：

```
GET / api / 36 / outlierDetection？ds = BfMAe6Itzgt
  ＆ou = O6uvpzGd5pu＆startDate = 2020-01-01＆endDate = 2020-12-31
  ＆maxResults = 10
```

获取具有定义间隔的离群值，以供在计算均值和标准差开发数据时使用的数据：

```
GET / api / 36 / outlierDetection？ds = BfMAe6Itzgt
  ＆ou = O6uvpzGd5pu＆startDate = 2020-01-01＆endDate = 2020-12-31
  ＆dataStartDate = 2018-01-01＆dataEndDate = 2020-12-31
```

使用最小-最大算法获取离群值：

```
GET / api / 36 / outlierDetection？ds = BfMAe6Itzgt＆ds = QX4ZTUbOt3a
  ＆ou = O6uvpzGd5pu＆ou = fdc6uOvgoji＆startDate = 2020-01-01＆endDate = 2020-12-31
  ＆algorithm = MIN_MAX
```

### 回应格式 { #response-format } 

支持以下响应格式。

| 格式 | API格式                                                   |
| ------ | ------------------------------------------------------------ |
| JSON格式   | `/ api / 36 / outlierDetection.json`或`Accept：application / json`（默认格式） |
| CSV    | `/ api / 36 / outlierDetection.csv`或`接受：application / csv`  |

响应包含以下字段：

| 领域      | 描述                                                  |
| ---------- | ------------------------------------------------------------ |
| 德         | 数据元素标识符。                                     |
| 取消命名     | 数据元素名称。                                           |
| 聚乙烯         | 期间ISO标识符。                                       |
| 欧         | 组织单位标识符。                                |
| 用户名     | 组织单位名称。                                      |
| 可可        | 类别选项组合标识符。                      |
| 代码名    | 类别选项组合名称。                            |
| 冠捷        | 属性选项组合标识符。                     |
| aocName    | 属性选项组合名称。                           |
| 价值      | 数据值。                                                  |
| 意思是       | 时间维度中数据值的平均值。                   |
| 标准差     | 标准偏差。                                          |
| 绝对值     | 对于z得分，与均值的绝对偏差。对于最小-最大，与最小或最大边界的绝对偏差。 |
| 分数     | Z分数。仅Z分数算法。                         |
| 下界 | 下边界。                                          |
| 上限 | 上限。                                          |
| 跟进   | 数据值是否标记为后续。                  |

The `mean`, `stdDev` and `zScore` fields are only present when `algorithm` is `Z_SCORE`.

响应将与此类似。 `元数据`部分包含请求和响应的元数据。 `outlierValues` 部分包含异常值。

```json
{
  "metadata": {
    "algorithm": "Z_SCORE",
    "threshold": 2.5,
    "orderBy": "MEAN_ABS_DEV",
    "maxResults": 10,
    "count": 10
  },
  "outlierValues": [
    {
      "de": "rbkr8PL0rwM",
      "deName": "Iron Folate given at ANC 3rd",
      "pe": "202011",
      "ou": "Pae8DR7VmcL",
      "ouName": "MCH (Kakua) Static",
      "coc": "pq2XI5kz2BY",
      "cocName": "Fixed",
      "aoc": "HllvX50cXC0",
      "aocName": "default",
      "value": 9000.0,
      "mean": 1524.5555,
      "stdDev": 2654.4661,
      "absDev": 7475.4444,
      "zScore": 2.8161,
      "lowerBound": -5111.6097,
      "upperBound": 8160.7208,
      "followUp": false
    },
    {
      "de": "rbkr8PL0rwM",
      "deName": "Iron Folate given at ANC 3rd",
      "pe": "202010",
      "ou": "vELbGdEphPd",
      "ouName": "Jimmi CHC",
      "coc": "pq2XI5kz2BY",
      "cocName": "Fixed",
      "aoc": "HllvX50cXC0",
      "aocName": "default",
      "value": 8764.0,
      "mean": 1448.0833,
      "stdDev": 2502.3031,
      "absDev": 7315.9166,
      "zScore": 2.9236,
      "lowerBound": -4807.6745,
      "upperBound": 7703.8412,
      "followUp": false
    }
  ]
}
```

### 约束与验证 { #constraints-and-validation } 

在查询验证期间，以下约束适用。每个验证错误都有一个对应的错误代码。

| 错误代码 | 信息                                                      |
| ---------- | ------------------------------------------------------------ |
| E2200      | 必须至少指定一个数据元素                  |
| E2201      | 必须指定开始日期和结束日期                    |
| E2202      | 开始日期必须早于结束日期                           |
| E2203      | 必须至少指定一个组织单位             |
| E2204      | 阈值必须为正数                          |
| E2205      | 最高结果必须为正数                        |
| E2206      | 最大结果超出了允许的最大限制：{d}               |
| E2207      | 数据开始日期必须早于数据结束日期                 |
| E2208      | 离群值检测期间遇到的非数字数据值 |

## 数据分析 { #webapi_data_analysis } 

用于执行数据分析和查找数据质量的多种资源
并提供验证问题。

**注意：**不建议使用此端点，该端点将在2.38中删除。请改用`outlierAnalysis`端点。

### 验证规则分析 { #webapi_data_analysis_validation_rules } 

要运行验证规则并检索违规：

    GET /api/dataAnalysis/validationRules

支持以下查询参数：



表：验证规则分析查询参数

| 查询参数 | 描述 | 选项 |
|---|---|---|
| vrg | 验证规则组 | 身份证 |
| 欧 | 组织单位 | 身份证 |
| 开始日期 | 时间段的开始日期 | 日期 |
| 结束日期 | 时间段的结束日期 | 日期 |
| 坚执 | 是否在系统中持续存在违规行为 | 假 | 真 |
| 通知 | 是否发送违规通知 | 假 | 真 |

样本输出：
```json
    [{
    "validationRuleId": "kgh54Xb9LSE",
    "validationRuleDescription": "Malaria outbreak",
    "organisationUnitId": "DiszpKrYNg8",
    "organisationUnitDisplayName": "Ngelehun CHC",
    "organisationUnitPath": "/ImspTQPwCqd/O6uvpzGd5pu/YuQRtpLP10I/DiszpKrYNg8",
    "organisationUnitAncestorNames": "Sierra Leone / Bo / Badjia / ",
    "periodId": "201901",
    "periodDisplayName": "January 2019",
    "attributeOptionComboId": "HllvX50cXC0",
    "attributeOptionComboDisplayName": "default",
    "importance": "MEDIUM",
    "leftSideValue": 10.0,
    "operator": ">",
    "rightSideValue": 14.0
}, {
    "validationRuleId": "ZoG4yXZi3c3",
    "validationRuleDescription": "ANC 2 cannot be higher than ANC 1",
    "organisationUnitId": "DiszpKrYNg8",
    "organisationUnitDisplayName": "Ngelehun CHC",
    "organisationUnitPath": "/ImspTQPwCqd/O6uvpzGd5pu/YuQRtpLP10I/DiszpKrYNg8",
    "organisationUnitAncestorNames": "Sierra Leone / Bo / Badjia / ",
    "periodId": "201901",
    "periodDisplayName": "January 2019",
    "attributeOptionComboId": "HllvX50cXC0",
    "attributeOptionComboDisplayName": "default",
    "importance": "MEDIUM",
    "leftSideValue": 22.0,
    "operator": "<=",
    "rightSideValue": 19.0
}]
```

### 基于标准差的离群分析 { #webapi_data_analysis_std_dev_outlier } 

根据平均值的标准偏差识别数据异常值
价值：

    GET /api/dataAnalysis/stdDevOutlier

支持以下查询参数：



表：标准偏差离群值分析查询参数

| 查询参数 | 描述 | 选项 |
|---|---|---|
| 欧 | 组织单位 | 身份证 |
| 开始日期 | 时间段的开始日期 | 日期 |
| 结束日期 | 时间段的结束日期 | 日期 |
| ds | 数据集，参数可重复 | 身份证 |
| 标准偏差 | 与平均值的标准差数 | 数值 |

### 基于最小值/最大值的离群值分析 { #webapi_data_analysis_min_max_outlier } 

要基于最小/最大值来识别数据离群值：

    GET /api/dataAnalysis/minMaxOutlier

支持的查询参数等于基于 *std dev 的异常值
上面描述的分析*资源。

### 后续数据分析 { #follow-up-data-analysis } 

要识别标记为后续的数据：

    GET /api/dataAnalysis/followup

必须至少定义一个数据集或数据元素、开始日期和结束日期或期间，以及至少一个 组织单位。

支持以下查询参数。

| 参数  | 描述                                                  | 强制的 | 选项（默认为默认）                   |
| ---------- | ------------------------------------------------------------ | --------- | ----------------------------------------- |
| 欧         | 组织单位，可以多次指定。          | 是的       | 组织单位标识符。             |
| ds         | 数据集，可以多次指定。                   | 不 [*]    | 数据集标识符。                      |
| 德         | 数据元素，可以多次指定。               | 不 [*]    | 数据元素标识符。                  |
| 开始日期  | 间隔的开始日期，以检查异常值。               | 不 [*]    | 日期（yyyy-MM-dd）。                        |
| 结束日期    | 检查异常值的时间间隔的结束日期。                 | 不 [*]    | 日期（yyyy-MM-dd）。                        |
| 聚乙烯         | ISO 周期 ID。                                               | 不 [*]    | 期间 ISO ID。                        |
| peType     | ISO 期。                                                  | 不 [*]    | 句号 ISO 字符串。                        |
| 可可        | 类别选项组合，可多次指定。     | 不        | 类别选项组合标识符。         |
| 最大结果 | 输出的最大限制。                                    | 不        | 整数，大于零。默认值：50。  |

[*]  You must specify either data sets with the `ds` parameter, which will include all data elements in the data sets, _or_ specify data elements with the `de` parameter.
     Equally, either `startDate` and `endDate` _or_ `period` must be specified.

The `startDate` and `endDate` parameters refer to the time interval for which you want to detect outliers.
If a period `pe` is provided instead the interval start and end is that of the period.

如果未提供选项组合`coc`，则考虑所有数值类型的数据元素。


## 数据的完整性 { #webapi_data_integrity } 

数据管理模块的数据完整性功能是
可通过 Web API 获得。本节介绍如何运行
数据完整性过程以及检索结果。详情
执行的分析在用户手册中进行了描述。

### 运行数据完整性 { #webapi_data_integrity_run } 

测量数据完整性的操作是相当合理的资源（并且
时间）的艰巨任务。因此，它作为异步进程运行，并且
仅在明确要求时。启动任务是通过形成一个
对* dataIntegrity *端点的空POST请求：

    POST /api/dataIntegrity

如果成功，请求将立即返回 HTTP 202。那个地点
响应头指向用于检查状态的资源
的请求。负载还包含作业的 json 对象
创建。对给定位置形成 GET 请求会产生一个空的
任务尚未完成时的 JSON 响应和 JSON taskSummary
任务完成时的对象。轮询（保守地）此资源
因此可用于等待任务完成。

### 获取完整性摘要{ #webapi_data_integrity_fetch_results } 

一旦数据完整性完成运行，结果可以从
`system/taskSummaries` 资源如下：

    GET /api/system/taskSummaries/DATA_INTEGRITY

返回的对象包含每个分析点的摘要，
列出相关完整性违规的名称。正如在
本节的前导段落分析的细节（以及
结果数据）可以在用户手册的数据章节中找到
行政。

## 完整的数据集注册 { #webapi_complete_data_set_registrations } 

本节是关于数据集的完整数据集注册。一种
注册标记作为完全捕获的数据集。

### 完成数据集 { #webapi_completing_data_sets } 

本节说明如何将数据集注册为完整。这是
通过与 *completeDataSetRegistrations* 交互实现
资源：

    GET /api/33/completeDataSetRegistrations

端点支持*POST*方法注册数据集
完成。端点在功能上非常类似于
*dataValueSets* 端点，支持批量导入完整
注册。

支持导入 *XML* 和 *JSON* 格式的有效负载。这
这个有效负载的基本格式，在这个例子中以 *XML* 给出，就像
所以：

```xml
<completeDataSetRegistrations xmlns="http://dhis2.org/schema/dxf/2.0">
  <completeDataSetRegistration period="200810" dataSet="eZDhcZi6FLP" 
    organisationUnit="qhqAxPSTUXp" attributeOptionCombo="bRowv6yZOF2" storedBy="imported"/>
  <completeDataSetRegistration period="200811" dataSet="eZDhcZi6FLP" 
    organisationUnit="qhqAxPSTUXp" attributeOptionCombo="bRowv6yZOF2" storedBy="imported"/>
</completeDataSetRegistrations>
```

*storedBy* 属性是可选的（因为它是
完整的注册对象）。您还可以选择设置
*date* 属性（注册时间）作为属性。是时候了
未设置，将使用当前时间。

导入过程支持以下查询参数：



表：完整数据集登记查询参数

| 参数 | 价值观 | 描述 |
|---|---|---|
| dataSetIdScheme | id | name | code | attribute:ID | 用于映射完整注册信息的数据集属性。 |
| orgUnitIdScheme | id | name | code | attribute:ID | 组织单位的属性，用于映射完整的注册信息。 |
| 属性 OptionComboIdScheme | id | name | code | attribute:ID | 用于映射完整注册的属性选项组合的属性。 |
| 方案 | id | name | code | attribute:ID | 所有对象（包括数据集、组织单位和属性选项组合）的属性，用于映射完整的注册。 |
| 预热缓存 | 假 | 真 | 是在服务器上保存更改，还是只返回导入摘要。 |
| 干运行 | 假 | 真 | 登记是否适用于次级单位 |
| 导入策略 | CREATE &#124; UPDATE &#124; CREATE_AND_UPDATE &#124; DELETE | 在服务器上保存所有、新增或更新导入状态的对象。 |
| 跳过现有检查 | 假 | 真 | 跳过对现有完整注册的检查。提高性能。仅用于空数据库或要导入的注册信息不存在时。 |
| 异步 | 假 | 真 | 表示导入是以异步方式还是同步方式进行。前者适用于非常大的导入，因为它能确保请求不会超时，但性能开销很大。后者速度更快，但要求连接持续到进程结束。 |

The `idScheme`, `dataSetIdScheme`, `orgUnitIdScheme`, `attributeOptionComboIdScheme`, 
`dryRun` and `strategy` (note the dissimilar naming to parameter `importStrategy`) 
can also be set as part of the payload.
In case of XML these are attributes, in case of JSON these are members in the
`completeDataSetRegistrations` node.

例如：
```xml
<completeDataSetRegistrations xmlns="http://dhis2.org/schema/dxf/2.0"
      orgUnitIdScheme="CODE">
    <completeDataSetRegistration period="200810" dataSet="eZDhcZi6FLP"
    organisationUnit="OU_559" attributeOptionCombo="bRowv6yZOF2" storedBy="imported"/>
</completeDataSetRegistrations>
```

如果 URL 参数和有效载荷都设置了方案，则有效载荷优先。 

### 读取完整的数据集注册 { #webapi_reading_complete_data_sets } 

本节说明如何检索数据集完整性
注册。我们将使用 *completeDataSetRegistrations*
资源。要使用的查询参数如下：



表：数据值集查询参数

| 参数 | 描述 |
|---|---|
| 数据集 | 数据集标识符，允许多个数据集 |
| 时间 | ISO 格式的句号标识符。允许使用多个句号。 |
| 开始日期 | 要导出的数值时间跨度的起始日期 |
| 结束日期 | 要导出的数值时间跨度的结束日期 |
| 创建 | 只包括给定时间戳后创建的注册 |
| 创建持续时间 | 只包括在给定时间内创建的注册。格式为<value\><time-unit\> ，其中支持的时间单位为 "d"、"h"、"m"、"s" *（天、小时、分钟、秒）。* 时间单位相对于当前时间。 |
| orgUnit | 组织单位标识符，可多次指定。如果给出 orgUnitGroup，则不适用。 |
| 组织单位组 | 组织单位组标识符，可多次指定。如果给出 orgUnit，则不适用。 |
| 儿童 | 是否将子女纳入组织单位的层级结构中 |
| 限额 | 要包含在回复中的最大注册数。 |
| 方案 | 用于响应中元数据对象的标识符属性。 |
| dataSetIdScheme | 用于响应中数据集的标识符属性。重载 idScheme。 |
| orgUnitIdScheme | 响应中用于组织单位的标识符属性。重载 idScheme。 |
| 属性 OptionComboIdScheme | 用于响应中属性选项组合的标识符属性。重载 idScheme。 |
The `dataSet` and `orgUnit` parameters can be repeated in order to include multiple data sets and organisation units.

The `period`, `startDate`,  `endDate`, `created` and `createdDuration` parameters provide multiple ways to set the time dimension for the request, thus only
one can be used. For example, it doesn't make sense to both set the start/end date and to set the periods.

请求示例如下所示：

```bash
GET /api/33/completeDataSetRegistrations?dataSet=pBOMPrpg1QX&dataSet=pBOMPrpg1QX
  &startDate=2014-01-01&endDate=2014-01-31&orgUnit=YuQRtpLP10I
  &orgUnit=vWbkYPRmKyS&children=true
```

您可以获得 *xml* 和 *json* 格式的响应。你可以指出
通过 *Accept* HTTP 标头，您更喜欢哪种响应格式
在上面的例子中。对于 xml，您使用 *application/xml*；对于 json 你
使用*应用程序/json*。

### 未完成的数据集 { #webapi_uncompleting_data_sets } 

本节说明如何取消注册数据的完整性
放。要取消完成数据集，您将与
completeDataSetRegistrations 资源：

    GET /api/33/completeDataSetRegistrations

此资源支持*DELETE* 取消注册。以下查询
支持参数：



表：完整数据集登记查询参数

| 查询参数 | 需要 | 描述 |
|---|---|---|
| ds | 是的 | 数据集标识符 |
| 聚乙烯 | 是的 | 期间标识符 |
| 欧 | 是的 | 组织单位标识符 |
| cc | 否（必须与 cp 结合） | 属性组合标识符（用于锁定检查） |
| cp | 否（必须与 cp 结合） | 属性选项标识符，多个值用 ; 分隔（用于锁定检查） |
| 多欧 | 否（默认为假） | 登记是否适用于次级单位 |

