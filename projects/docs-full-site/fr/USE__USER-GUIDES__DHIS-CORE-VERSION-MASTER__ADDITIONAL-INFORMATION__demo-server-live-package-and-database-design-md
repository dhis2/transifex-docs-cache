---
edit_url: "https://github.com/dhis2/dhis2-docs/blob/master/src/user/about-demo-server-live-package-and-database-design.md"
revision_date: '2022-09-21'
tags:
- Version Master de DHIS2 Central
- Utilisation
---

# A propos du serveur de démonstration, du cluster D2 et de la conception de la base de données { #moare_about_dhis2_server_database } 

## Utilisation du serveur de démonstration de DHIS2 { #using-the-dhis2-demo-server } 

L'équipe DHIS2 dispose d'un serveur de démonstration à l'adresse 
<https://play.dhis2.org/demo>. C'est de loin la moyen le plus simple pour essayer 
DHIS2. Il suffit d'ouvrir le lien dans votre navigateur web et vous connecter nom d'utilisateur 
= admin et mot de passe = district.

> **Note**
>
> Toutes les modifications effectuées sur ce serveur sont supprimées chaque nuit, donc n'enregistrez pas de 
> travail important sur ce serveur. Il est strictement réservé à des fins 
> de démonstration\!

## Démarrage d'une instance locale de DHIS2 à l'aide de D2 Cluster  { #mod2_1 } 

### Exécution de D2 Cluster  { #running-d2-cluster } 

L'utilisation de serveurs Docker pour exécuter un cluster d2 est un moyen facile de commencer à utiliser DHIS2 sur 
votre ordinateur local. Cette approche est appropriée pour une installation autonome 
et des démonstrations. Suivez simplement le guide 
[ici] (https://developers.dhis2.org/docs/guides/spin-up-local-instance).

#### Pré-requis pour l'exécution de D2 Cluster { #prerequisites-to-running-d2-cluster } 

Vous devez vous assurer que vous avez installé [Yarn](https://classic.yarnpkg.com/en/docs/install/) et [Nodejs](https://nodejs.org/en/). Une version actuelle de [Docker](https://www.docker.com/) doit également être 
installée sur votre machine. Veuillez vous référer au [guide](https://developers.dhis2.org/docs/guides/spin-up-local-instance) pour des informations détaillées.

### Télécharger et installer la version serveur { #downloading-and-installing-the-server-version } 

La dernière version stable de la version serveur peut être téléchargée à partir de ce 
[site web](http://stable.dhis2.org/). Pour plus d'informations sur son 
installation, veuillez vous reférer au chapitre sur l'installation dans le 
manuel de mise en œuvre.

## Se connecter à DHIS2 { #mod2_2 } 

Que vous ayez installé la version serveur ou exécuté une instance locale de DHIS2, vous devrez utiliser un navigateur web pour vous connecter à 
l'application. DHIS2 devrait être compatible avec les versions récentes de navigateurs. 
Cependant, vous devez vous assurer que Java Script est activé.

Pour vous connecter à l'application, entrez simplement <http://localhost:8080/dhis> si 
vous utilisez le paquet DHIS2 Live, ou remplacez `localhost` par le 
nom ou l'adresse IP du serveur sur lequel la version serveur est installée.

Dès que vous avez démarré DHIS2, connecté ou déconnecté, l'écran qui s'affiche 
vous invite à entrer votre nom d'utilisateur et mot de passe enregistrés. 
Après avoir entré les informations nécessaires, cliquez sur le bouton de connexion pour 
vous connecter à l'application. Le nom d'utilisateur et mot de passe par défaut sont 'admin' 
et 'district'. Ils doivent être modifiés dès la première 
connexion.

![](resources/images/getting_started/login.png)

Vous pouvez sélectionner la langue dans laquelle vous souhaitez utiliser DHIS2 à partir de 
la boîte de dialogue "Changer de langue" en bas de l'écran. Il faut toutefois noter que 
certaines langues ne sont pas disponibles.

Au cas où vous avez oublié votre mot de passe, vous pouvez cliquer sur le lien "Mot de 
passe oublié". Vous devez avoir préalablement entré votre adresse électronique sur DHIS2 
et le serveur doit être correctement configuré pour envoyer des emails.

Si vous souhaitez créer votre propre compte (ce que l'administrateur 
du serveur permet), cliquez simplement sur "Créer un compte" et suivez les 
instructions.

Une fois connecté à DHIS2, reportez-vous aux sections spécifiques de ce 
manuel pour savoir les différentes fonctionnalités disponibles.

## Se déconnecter de DHIS2 { #mod2_4 } 

Cliquez simplement sur Profil puis sur "Se déconnecter" en haut à droite 
dans le menu de DHIS2.

## Brève introduction à la conception d'une base de données DHIS2 { #database_design } 

DHIS2 offre un ensemble de divers outils puissant pour la collecte, la validation, 
le reporting et l'analyse de données, mais le contenu de la base de données, c.-à-d. ce qu'il 
faut collecter, par qui et sous quel format, dépendra du 
contexte d'utilisation. Cependant, pour utiliser DHIS2, vous devez 
d'abord créer des métadonnées. Les métadonnées, ou données sur les données, décrivent 
ce qui doit être collecté (éléments de données et catégories), là où cela doit 
être collecté (unités d'organisation) et à quelle fréquence il doit être 
collecté (périodes). Ces métadonnées doivent être créées dans la base de données DHIS2 
pour qu'elles puissent être utilisées. Cela peut se faire à partir de l'interface de l'utilisateur 
et ne nécessite pas de programmation ni de compétences techniques 
approfondies, mais requiert une bonne connaissance des processus 
à partir desquels vous souhaitez collecter des données.

Cette section est une introduction brève et rapide à la conception d'une base de données 
DHIS2.  Elle explique également les différentes étapes nécessaires à la préparation d'un 
nouveau système DHIS2 prêt à être utilisé. Les spécificités de chaque étape sont expliquées dans différents autres 
chapitres, et les meilleures pratiques en matière de choix de conception sont expliquées dans le 
manuel d'implémentation. Les étapes à suivre sont donc les suivantes :

1\. Configurez une hiérarchie organisationnelle

2\. Définissez les éléments de données

3\. Définissez les ensembles de données ainsi que les modèles de saisie de données

4\. Définissez les règles de validation

5\. Définissez les indicateurs

6\. Définissez les tableaux de rapports et concevez les rapports

7\. Configurez le module SIG

8\. Concevez des graphiques et personnalisez le tableau de bord

### La hiérarchie organisationnelle { #the-organisational-hierarchy } 

La hiérarchie organisationnelle définit l'organisation à l'aide de l'application DHIS2, 
des structures sanitaires, zones administratives et autres zones géographiques 
utilisées dans la collecte et l'analyse de données. Cette dimension *où* de données est 
définie comme hiérarchie ayant une unité mère (ex. Ministère de la santé) et 
un nombre quelconque de niveaux et de nœuds en-dessous. Chaque nœud dans cette 
hiérarchie est appelé unité d'organisation dans DHIS2.

La conception de cette hiérarchie détermine les unités géographiques 
d'analyse disponibles à l'utilisateur puisque les données sont collectées et agrégées dans 
cette structure. Il ne peut y avoir qu'une seule hiérarchie d'organisation à la 
fois, il faut donc faire attention à sa structure. Des hiérarchies supplémentaires 
(ex. regroupements administratifs parallèles comme les "Propriétaires 
d'installations") peuvent être modélisées à l'aide de regroupements organisationnels et d'ensembles de regroupements, 
mais la hiérarchie organisationnelle représente le principal moyen d'agrégation 
de données sur la dimension géographique. Les hiérarchies organisationnelles 
nationales typiques dans le domaine de la santé publique ont 4-6 niveaux, mais peuvent 
prendre en charge n'importe quel nombre de niveaux. La hiérarchie est constituée de 
relations parents-enfants, ex. Un pays ou une unité MoH (la racine) peut avoir par exemple 8 
unités parents (provinces), et chaque province (au niveau 2) peut 
avoir 10-15 arrondissements comme enfants. Normalement, les structures sanitaires 
sont localisées dans les niveaux les plus bas, mais elles peuvent également être placées à 
des niveaux plus élevés comme par exemple, les hôpitaux nationaux ou 
provinciaux. Les arborescences asymétriques sont donc également supportées (ex. un nœud feuille peut être placé au 
niveau 2 alors que la plupart des nœuds feuilles sont au niveau 5).

Il existe généralement une hiérarchie géographique définie par le système de 
santé. Exemple : où se situent les bureaux administratifs (ex. Ministère de la santé, 
province, arrondissement) ? Cependant, il existe souvent d'autres limites administratives 
dans le pays qui peuvent être ajoutées ou pas, selon la façon dont elles 
pourront influencer l'analyse des données. Lors de la conception de la hiérarchie, le 
nombre d'enfants de toute unité d'organisation peut indiquer 
l'utilité de la structure. Par exemple, avoir une ou plusieurs relations 1-1 
entre deux niveaux n'est pas très utile car les valeurs seront les mêmes pour 
le niveau enfant et le niveau parent. D'autre part, un très grand nombre 
d'enfants dans le milieu de la hiérarchie (ex. 50 arrondissements dans la 
même province) peut nécessiter l'ajout d'un niveau supplémentaire pour augmenter 
l'utilité de l'analyse des données. Au niveau le plus bas, les établissements médicaux 
auront souvent un grand nombre d'enfants (10-60), mais pour 
les autres niveaux plus haut dans la hiérarchie, il est recommandé d'avoir environ 5-20 enfants. 
Trop peu ou trop d'enfants pourrait indiquer qu'un niveau 
doit être supprimé ou ajouté.

Il convient de noter qu'il est facile et pratique d'apporter ultérieurement des modifications 
aux niveaux supérieurs de la hiérarchie. Le seul problème reste la modification des unités 
organisationnelles pour lesquelles on collecte des données (les nœuds feuilles), ex. la scission ou la fusion 
de structures sanitaires. L'agrégation dans la hiérarchie s'effectue à tout moment en 
fonction de la hiérarchie actuelle et reflète toujours les modifications les plus récentes 
apportées à la structure organisationnelle. Reportez-vous au chapitre sur 
les unités d'organisation pour apprendre à créer des unités d'organisation et 
construire la hiérarchie.

### Éléments de donnée { #data-elements } 

L'élément de données est peut-être l'élément le plus important d'une base de données 
DHIS2. Il représente la dimension *quoi*, il explique ce qui est 
collecté ou analysé. Dans certains contextes, on parle 
d'indicateur, mais dans DHIS2, nous appelons cette unité de collecte et d'analyse un 
*élément de données*. L'élément de données représente souvent un comptage de quelque chose, 
et son nom décrit ce qui est compté, par exemple "doses de BCG administrées" ou 
"cas de paludisme". Lorsque des données sont collectées, validées, analysées, rapportées 
ou présentées, les éléments de données ou les expressions construites à partir des 
éléments de données décrivent ce que sont les données. En tant que tels, les éléments de 
données deviennent importants pour tous les aspects du système et ils déterminent non 
seulement la manière dont les données sont collectées, mais surtout la manière dont les valeurs des données sont 
représentées dans la base de données, ce qui détermine également la manière dont les données peuvent être 
analysées et présentées.

Il est possible d'ajouter plus de détails à cette dimension *quoi* grâce à la dimension de 
désagrégation appelée catégories d'éléments de données. Les catégories les plus 
courantes sont l'âge et le genre, mais l'utilisateur peut ajouter n'importe quelle catégorie 
et la lier à des éléments de données spécifiques. La combinaison du nom d'un élément de 
données et de la catégorie qui lui est attribuée définit la plus petite unité de 
collecte et d'analyse disponible dans le système et décrit donc les 
données brutes de la base de données. Il est possible de procéder à des agrégations en effectuant un zoom arrière 
sur cette dimension, mais il n'est pas possible d'aller plus loin, de sorte que la conception 
des éléments de données et des catégories définit le détail de l'analyse dont dispose le 
système (sur la dimension *quoi*). Les modifications apportées aux éléments de données et 
aux catégories à un stade ultérieur du processus peuvent s'avérer compliquées car elles 
changeront la signification des valeurs de données déjà saisies dans la 
base de données (s'il y en a). Cette étape est donc l'une des plus décisives et des plus 
prudentes du processus de conception de la base de données.

One best practice when designing data elements is to think of data
elements as a unit of data analysis and not just as a field in the data
collection form. Each data element lives on its own in the database,
completely detached from the collection form, and reports and other
outputs are based on data elements and expressions/formulas composed of
data elements and not the data collection forms. So the data analysis
needs should drive the process, and not the look an feel of the data
collection forms. A simple rule of thumb is that the name of the data
element must be able to stand on its own and describe the data value
also outside the context of its collection form. E.g. a data element
name like "Total referrals" makes sense when looking at it in either the
"RCH" form or the "OPD" form, but on its own it does not uniquely
describe the phenomena (who are being referred?), and should in stead be
called "Total referrals from Maternity" or "Total referrals from OPD".
Two different data elements with different meanings, although the field
on the paper form might only say "Total referrals" since the user of the
form will always know where these referrals come from. In a database or
a repository of data elements this context is no longer valid and
therefore the names of the data elements become so important in
describing the data.

Common properties of data elements can be modelled through what is
called data element groups. The groups are completely flexible in the
sense that they are defined by the user, both their names and their
memberships. Groups are useful both for browsing and presenting related
data, but can also be used to aggregate data elements together. Groups
are loosely coupled to data elements and not tied directly to the data
values which means they can be modified and added at any point in time
without interfering with the raw data.

### Ensemble de données et formulaires de saisie de données { #datasets-and-data-entry-forms } 

All data entry in DHIS2 is organised through the use of Datasets. A
Dataset is a collection of data elements grouped together for data
collection, and in the case of distributed installs they also define
chunks of data for export and import between instances of DHIS2 (e.g.
from a district office local installation to a national server).
Datasets are not linked directly to the data values, only through their
data elements and frequencies, and as such a dataset can be modified,
deleted or added at any point in time without affecting the raw data
already captured in the system, but such changes will of course affect
how new data will be collected.

A dataset has a period type which controls the data collection
frequency, which can be daily, weekly, monthly, quarterly, six-monthly,
or yearly. Both which data elements to include in the dataset and the
period type is defined by the user, together with a name, short name,
and code.

In order to use a dataset to collect data for a specific orgunit you
must assign the orgunit to the dataset, and this mechanism controls
which orgunits that can use which datasets, and at the same time defines
the target values for data completeness (e.g. how many health facilities
in a district expected to submit RCH data every month).

A data element can belong to multiple datasets, but this requires
careful thinking as it may lead to overlapping and inconstant data being
collected if e.g. the datasets are given different frequencies and are
used by the same orgunits.

#### Modèles de saisie de données { #data-entry-forms } 

Once you have assigned a dataset to an orgunit that dataset will be made
available in Data Entry (under Services) for the orgunits you have
assigned it to and for the valid periods according to the dataset's
period type. A default data entry form will then be shown, which is
simply a list of the data elements belonging to the dataset together
with a column for inputting the values. If your dataset contains data
elements with categories such as age groups or gender, then additional
columns will be automatically generated in the default form based on the
categories. In addition to the default list-based data entry form there
are two more alternatives, the section-based form and the custom form.

##### Formulaires à section { #section-forms } 

Section forms allow for a bit more flexibility when it comes to using
tabular forms and are quick and simple to design. Often your data entry
form will need multiple tables with subheadings, and sometimes you need
to disable (grey out) a few fields in the table (e.g. some categories do
not apply to all data elements), both of these functions are supported
in section forms. After defining a dataset you can define it's sections
with subsets of data elements, a heading and possible grey fields i the
section's table. The order of sections in a dataset can also be defined.
In Data Entry you can now start using the Section form (should appear
automatically when sections are available for the selected dataset). You
can switch between default and section forms in the top right corner of
the data entry screen. Most tabular data entry forms should be possible
to do with sections forms, and the more you can utilise the section
forms (or default forms) the easier it is for you. If these two types of
forms are not meeting your requirements then the third option is the
completely flexible, although more time-consuming, custom data entry
forms.

##### Formulaires personnalisés { #custom-forms } 

When the form you want to design is too complicated for the default or
section forms then your last option is to use a custom form. This takes
more time, but gives you full flexibility in term of the design. In
DHIS2 there is a built in HTML editor (FcK Editor) for the form designer
and you can either design the form in the UI or paste in your HTML
directly using the Source window in the editor. In the custom form you
can insert static text or data fields (linked to data elements +
category) in any position on the form and you have complete freedom to
design the layout of the form. Once a custom form has been added to a
dataset it will be available in data entry and used automatically. You
can switch back to default and section (if exists) forms in the top
right corner of the data entry screen.

### Règles de validation { #validation-rules } 

Elements de Données

### Indicateurs { #indicators } 

Les indicateurs représentent peut-être la plus puissante fonctionnalité d'analyse de données de DHIS2. Alors que les éléments de données représentent les données brutes (comptes) collectées, les indicateurs représentent des formules fournissant des taux de couverture, des taux d'incidence, des ratios et d'autres unités d'analyse basées sur une formule. Un indicateur est composé d'un facteur (Exemple : 1,100, 100, 100 000), d'un numérateur et d'un dénominateur. Les deux derniers sont tous deux des expressions basées sur un ou plusieurs éléments de données. Exemple : l'indicateur "Couverture du BCG \<1 an" est défini par une formule avec un facteur 100, un numérateur ("Les doses BCG administrées aux enfants de moins de 1") et un dénominateur ("Population cible de moins de 1 an"). L'indicateur "Taux d'abandon de DPT1 à DPT3" est une formule de 100% x ("Doses de DPT1 administrées" - "Doses de DPT3 administrées") / ("Doses de DPT1 administrées").

La plupart des modules de rapport dans DHIS2 prennent en charge les éléments de données et les indicateurs et vous pouvez également les combiner dans des rapports personnalisés, mais la différence et la puissance des indicateurs par rapport aux données brutes (valeurs de données de l'élément de donnée) réside dans la possibilité de comparer des données entre différentes zones géographiques (par exemple les zones très peuplées ou rurales), la population cible pouvant être utilisée comme dénominateur.

Toutes les saisies de données dans DHIS 2 se font à travers les
ensembles de données. Un ensemble de données est une collection
d'éléments de données regroupées pour la collecte de données, et dans
le cas d'installations distribuées, ils définissent également des
morceaux de données pour l'exportation et l'importation entre instances
de DHIS 2 (par exemple exportation d'une installation locale au bureau
de district vers l'installation sur le serveur national). Les ensembles
de données ne sont pas liés directement aux valeurs de données, mais à
travers les éléments de données qui les constituent et les fréquences de
collecte; en tant que tel un ensemble de données peut être modifié,
supprimé ou ajouté à moment sans affecter les données brutes déjà
saisies dans le système. De telles modifications auront toutefois une
incidence sur la façon dont les nouvelles données seront collectées.

### Tableaux et rapports { #report-tables-and-reports } 

Standard reports in DHIS2 are a very flexible way of presenting the data
that has been collected. Data can be aggregated by any organisational
unit or orgunit level, by data element, by indicators, as well as over
time (e.g. monthly, quarterly, yearly). The report tables are custom
data sources for the standard reports and can be flexibly defined in the
user interface and later accessed in external report designers such as
iReport or through custom HTML reports. These report designs can then be
set up as easily accessible one-click reports with parameters so that
the users can run the same reports e.g. every month when new data is
entered, and also be relevant to users at all levels as the
organisational unit can be selected at the time of running the report.

### SIG { #gis } 

Dans le module SIG intégré, vous pouvez facilement afficher vos données sur des cartes, à la fois sur des polygones (zones) et sous forme de points (structures sanitaires), et soit en tant qu'éléments de données ou en tant qu'indicateurs. En fournissant les coordonnées de vos unités d'organisation au système, vous pouvez rapidement vous adapter à ce module. Consultez la section SIG pour plus de détails sur la façon de vous y prendre.

### Diagrammes et tableau de bord { #charts-and-dashboard } 

La plupart des modules de rapport dans DHIS 2 supportent à la fois les
éléments de données et les indicateurs et vous pouvez également
combiner ceux-ci dans des rapports personnalisés; toutefois la
différence importante et la force des indicateurs par rapport aux
données brutes (les valeurs des éléments de données) est leur capacité
de comparer les données entre les différentes zones géographiques (par
exemple, zones densément peuplées et zones rurales) par le fait que la
population cible peut être utilisée au niveau du dénominateur.

