---
edit_url: "https://github.com/dhis2/dhis2-docs/blob/2.37/src/user/scheduling.md"
revision_date: '2021-10-14'
tags:
- DHIS core version 2.37
- Utilisation
---

# Programmation { #scheduling } 

Le Programmateur est une application qui permet de gérer les tâches d'arrière-plan dans DHIS2. Les tâches d'arrière-plan peuvent effectuer certaines fonctions, telles que l'exécution d'analyses, la synchronisation de données et de méta-données, ou l'envoi d'un rapport d'analyse "push". L'application permet de créer, de modifier et de supprimer de telles tâches.

Le Programmateur est fourni avec le DHIS2 et est accessible via le menu App.

![La page de démarrage de l'application Programmateur](resources/images/scheduler/overview.png)

La page d'accueil de l'application Programmateur présente un aperçu des tâches existantes. Par défaut, les tâches du système prédéfinies sont masquées. Pour les afficher, cliquez sur *Inclure les tâches du système dans la liste* dans l'angle supérieur droit.

Lorsque vous créez ou modifiez une tâche, elle sera programmée en fonction de la programmation sélectionnée. Pour exécuter une tâche à la demande, accédez à la liste des tâches, cliquez sur le bouton "Actions" de la tâche que vous voulez exécuter et cliquez sur "Exécuter manuellement". Cette action n'est disponible que pour les tâches activées.

## Créer une tâche { #scheduling_create_job } 

1.  Ouvrez l'application **Programmateur** et cliquez sur le bouton "Nouvelle tâche" dans l'angle 
    supérieur droit.

1.  Choisissez un **Nom** approprié pour le nouvel emploi.

1.  Sélectionnez le **Type de tâche** que vous voulez programmer à l'aide du menu déroulant.
    menu déroulant.

1.  Sélectionnez un calendrier pour la tâche. Chaque type de tâche possède son propre type de programmation,
    soit la programmation **Cron**, soit la programmation **Delay**.

    1.  Pour les types de tâches programmés**Cron**, vous pouvez définir une planification à l'aide de la
        [Programmation du printemps](https://docs.spring.io/spring/docs/current/javadoc-api/org/springframework/scheduling/support/CronSequenceGenerator.html)
        syntaxe. Vous pouvez également sélectionner une **expression Cron** prédéfinie en cliquant sur
        "Choisir parmi les horaires prédéfinis". Cette programmation démarrera uniquement une nouvelle exécution de tâche 
        si l'exécution de la tâche précédente est terminée, ceci afin d'empêcher le système de reproduire
        trop de tâches.

    1.  Pour les tâches planifiées **Delay**, vous pouvez définir un délai en secondes. Contrairement aux
        tâches planifiées **Cron**, ces tâches ne sont pas exécutées en fonction d'un calendrier
        défini, mais avec un délai spécifique entre les exécutions des tâches. Le temporisateur
        démarre à la fin d'une tâche, ce qui démarre l'exécution d'une nouvelle tâche lorsque le temporisateur atteint
        zéro. Cela continuera tant que la tâche sera activée.

1.  Si le type de tâche est personnalisable, une section **Paramètres** apparaîtra sous 
    les paramètres de planification. Ces options supplémentaires précisent les informations de la
    tâche planifiée et vont varier en fonction du type de tâche.

1.  Cliquez sur le bouton **Sauvegarder** pour confirmer la création de la tâche. Après la création de la tâche, 
    vous serez redirigé vers l'aperçu des tâches, où la nouvelle 
    tâche créée sera désormais répertoriée.

![Création d'une nouvelle tâche de programmateur](resources/images/scheduler/add_new_job.png)

Les tâches nouvellement créées sont activées par défaut.

## Modifier une tâche{ #scheduling_configure_job }

Avec les autorisations appropriées, vous pouvez modifier les informations des tâches créées par l'utilisateur. Pour activer ou désactiver rapidement l'exécution d'une tâche créée par un utilisateur, utilisez les boutons de la colonne **Activer/Désactiver** sur la page d'accueil de l'application Programmateur. Notez que les tâches du système sont toujours activées et ne peuvent être désactivées.

Modification ultérieure des tâches utilisateur :

1.  Cliquez sur le bouton "Actions" de la tâche que vous voulez modifier et cliquez sur "Modifier" (seules 
    les tâches utilisateur peuvent être modifiées).

1.  Lorsque vous avez terminé la modification, cliquez sur le bouton **Enregistrer les modifications** pour poursuivre les modifications.

## Supprimer une tâche { #dataAdmin_scheduler_delete } 

1.  Cliquez sur le bouton "Actions" de la tâche que vous voulez supprimer et cliquez sur "Supprimer" (seules 
    (seules les tâches d'utilisateur peuvent être modifiées).

1.  Confirmez en cliquant à nouveau sur **Supprimer** dans la fenêtre pop-up.

Les tâches utilisateur peuvent également être supprimées sur la page de modification.

![Suppression d'une nouvelle tâche de programmateur](resources/images/scheduler/delete_job.png)

## Types de tâches { #job-types } 

La section suivante décrit les différents types de tâches.

### Désactiver les utilisateurs inactifs { #scheduling_disable_inactive_users }
Les utilisateurs n'ayant pas été actifs - non connectés - pendant plusieurs mois peuvent être automatiquement désactivés. Comme paramètre de tâche, choisissez le nombre de mois d'inactivité. Tous les utilisateurs qui ne se sont pas connectés pendant ce nombre de mois ou plus seront désactivés par la tâche. Les utilisateurs désactivés ne pourront plus se connecter au système.

The _Reminder days before_ parameter can be set to send a reminder email to
those users the specified number of days before their account is due to expire.
If the value is not set (blank) no reminder is sent.


### Tableau des ressources { #scheduling_resource_table } 

Le tableau de ressources à pour tâche de générer et de metter à jour des tables de la base de données des ressources. Ces tables sont utilisées par différents composants de DHIS 2 et sont destinées à simplifier les recherches dans la base de données.

Notez que lorsque vous spécifiez l'une des tâches de la table analytique, les tables de ressources peuvent faire partie du processus et il n'est pas nécessaire de spécifier également une tâche de la table de ressources.

### Tableau analytique { #scheduling_analytics_table } 

Les tableaux analytiques permettent de générer et de mettre à jour les tableaux analytiques. Les tableaux analytiques sont utilisés comme base pour les requêtes d'analyse de données dans le DHIS2. Les applications telles que Tableau de bord, Visualiseur et Cartes récupèrent les données de ces tableaux via l'API analytique du DHIS2, et elles doivent être mises à jour pour que les données analytiques deviennent disponibles. Vous pouvez programmer ce processus de façon à ce qu'il s'exécute régulièrement par le biais d'un type de tâche de table analytique.

La tâche du tableau analytique remplira par défaut les champs de données pour toutes les années et tous les éléments de données. Les paramètres suivants sont disponibles :

- **Dernières années:** Le nombre de dernières années pour lesquelles il faut remplir les tableaux d'analyse. Par exemple, si vous indiquez 2 années, le processus mettra à jour les données des deux dernières années, mais pas les données plus anciennes. Ce paramètre est utile pour réduire le temps nécessaire au processus, et est approprié si les données plus anciennes n'ont pas changé, et lorsque l'on souhaite mettre à jour les données récentes.
- **Sauter les tableaux de ressources:** Sauter les tableaux de ressources pendant le processus de mise à jour du tableau analytique. Cela réduit le temps nécessaire à l'exécution du processus, mais entraine une situation dans laquelle les modifications des métadonnées ne sont pas prises en compte dans les données analytiques.
- **Sauter les types de tableaux : ** Sauter un ou plusieurs types de tableaux analytiques. Cela réduit le temps nécessaire à l'exécution du processus, mais conduit à ce que ces types de données ne soient pas mis à jour dans les données analytiques.

### Tableau d'analyse (Suite) { #scheduling_continuous_analytics_table } 

Les tableaux analytiques permettent de générer et de mettre à jour les tableaux analytiques. Les tableaux analytiques sont utilisés comme base pour les requêtes d'analyse de données dans le DHIS2. Les applications telles que Tableau de bord, Visualiseur et Cartes récupèrent les données de ces tableaux via l'API analytique du DHIS2, et elles doivent être mises à jour pour que les données analytiques deviennent disponibles. Vous pouvez programmer ce processus de façon à ce qu'il s'exécute régulièrement par le biais d'un type de tâche de table analytique.

La tâche de la table d'analyse continue est basé sur deux phases :

- _Dernière mise à jour :_ mise à jour des données récentes, où récente renvoie aux données qui ont été ajoutées, mises à jour ou supprimées depuis la dernière mise à jour des données récentes ou des données complètes. Ce processus pourra être fréquent.
- _Mise à jour complète :_ mise à jour de toutes les données sur toutes les années. Ce processus aura lieu une fois par jour.

Le tâche de la table d'analyse continue mettra fréquemment à jour les dernières données. Le processus de mise à jour des données utilise une partition spéciale de la base de données qui ne contient que les données les plus récentes. Cette partition peut être rapidement actualisée en raison de la quantité relativement faible de données. La taille de la partition augmentera jusqu'à ce qu'une mise à jour complète soit effectuée. Toutes les données de toutes les années seront mises à jour une fois par jour,. La dernière partition sera ainsi effacée.

La tâche du tableau analytique remplira par défaut les champs de données pour toutes les années et tous les éléments de données. Les paramètres suivants sont disponibles :

- **Heure du jour de la mise à jour complète:** Heure du jour à laquelle la mise à jour complète sera effectuée. Par exemple, si vous indiquez 1, la mise à jour complète sera effectuée à 1 heure du matin.
- **Dernières années:** Le nombre de dernières années pour lesquelles il faut remplir les tableaux d'analyse. Par exemple, si vous indiquez 2 années, le processus mettra à jour les données des deux dernières années, mais pas les données plus anciennes. Ce paramètre est utile pour réduire le temps nécessaire au processus, et est approprié si les données plus anciennes n'ont pas changé, et lorsque l'on souhaite mettre à jour les données récentes.
- **Sauter les tableaux de ressources:** Sauter les tableaux de ressources pendant le processus de mise à jour du tableau analytique. Cela réduit le temps nécessaire à l'exécution du processus, mais entraine une situation dans laquelle les modifications des métadonnées ne sont pas prises en compte dans les données analytiques.

### Synchronisation des données { #scheduling_data_sync } 

DHIS2 permet la synchronisation des données entre des instances réparties à distance et une instance centrale de DHIS2. Cela peut être utile, par exemple, lorsque vous avez déployé plusieurs instances autonomes de DHIS2 qui doivent soumettre des valeurs de données à une instance centrale. La synchronisation des données tracker et des données agrégées est prise en charge.

Voici les étapes à suivre pour activer la synchronisation des données :

- Accédez aux paramètres de synchronisation, saisissez l'URL du serveur à distance,
  le nom d'utilisateur et le mot de passe. Appuyez sur le bouton TAB pour enregistrer automatiquement
  le nouveau mot de passe. Actualisez la page et vérifiez que les valeurs renseignées
  sont toujours présentes. Notez que le champ du mot de passe sera vide après
  l'actualisation, puisque cette valeur est cryptée. Vous pouvez donc la considérer comme
  sauvegardée.

- À l'aide de l'application Planificateur, créez une nouvelle tâche à l'aide des types de tâche "Synchronisation des données des programmes d'événements"
  et/ou "Synchronisation des données des programmes Tracker". Assurez-vous qu'elle
  soit activée lorsque vous avez terminé. (Remarque : si la tâche "Synchronisation des données de programme",
  disponible dans les versions précédentes, a déjà été configurée dans l'application Planificateur,
  elle a été automatiquement remplacée par les deux nouvelles tâches "Synchronisation des données des programmes d'évènements"
  et "Synchronisation des données des programmes Tracker" avec les mêmes paramètres.)

Quelques aspects de la fonction de synchronisation des données à prendre en compte :

- L'instance DHIS2 locale stockera le mot de passe du compte utilisateur
  sur l'instance à distance cryptée dans la base de données locale. Le compte
  à distance est utilisé pour l'authentification lors du transfert des données. Pour
  Pour des raisons de sécurité, assurez-vous que le paramètre de configuration _encryption.password_ (mot de passe de cryptage)
  dans _hibernate.properties_ (propriétés Hibernate) est un mot de passe fort.
   

- Le déploiement du serveur distant sur SSL/HTTPS est fortement recommandé car
  le nom d'utilisateur et le mot de passe sont envoyés en texte clair à l'aide 
  de base et peuvent être interceptés par un pirate.

- La synchronisation des données utilise la propriété UID des éléments de données,
  des combinaisons d'options de catégorie et des unités d'organisation pour correspondre aux
  métadonnées. La synchronisation dépend donc de ces trois
  objets de métadonnées soient harmonisés sur l'instance locale et distante
  pour fonctionner correctement.

- La première fois que DHIS2 exécute la tâche de synchronisation, elle inclura
  toutes les données disponibles. Les tâches de synchronisation ultérieures 
  n'incluront que les données ajoutées et modifiées depuis la dernière tâche réussie. Une
  tâche de synchronisation n'est considéré comme réussi que si toutes les données
  sont sauvegardées avec succès sur le serveur distant (toutes les données
  synchronisées avec succès resteront sur l'instance de réception, que la tâche 
  échoue éventuellement). Le résumé de l'importation renvoyé par le serveur central 
  permet de déterminer si la tâche a réussi ou non.

- La tâche de synchronisation initiale peut prendre beaucoup de
  temps, ce qui pourrait ralentir votre instance, en fonction de la quantité
  données synchronisées. Ce pourrait être une bonne idée de configurer la
  tâche pour qu'elle s'exécute lorsqu'il y a peu d'utilisateurs en ligne, puis revenir plus tard 
  à votre préférence. Si vous ne voulez pas ou n'avez pas besoin de synchroniser toutes
  les données, il est possible de <a href="#skip_changed_before">sauter
  certaines données avant la synchronisation</a>.

  Lorsque DHIS2 synchronise les données tracker, il détermine l'ensemble des données
  à synchroniser en fonction de la dernière fois où il a été synchronisé. Chaque 
  instance d'entité suivi et évènement a son propre historique de
  quand il/elle a été synchronisé(e) avec succès pour la dernière fois.

- Le système démarrera une tâche de synchronisation en fonction des règles définies
  dans la configuration de la tâche. Si la tâche de synchronisation démarre
  sans connexion avec le serveur distant, elle réessayera
  trois fois avant d'avorter. La tâche sera réexécuté à un
  moment programmé.

- Le serveur gère chaque ensemble de programmes séparément, ce qui signifie qu'un
  ensemble de programmes peut être synchronisé avec succès, alors qu'un autre 
  échoue. L'échec ou le succès de l'un n'influence pas l'autre, car
  la dernière heure de synchronisation réussie est suivie individuellement pour
  chaque élément tel que mentionné précédemment.

- Les attributs des instances d'entités suivies (attributs d'instances suivis)
  et les éléments de données des étapes de programmes (élément de données d'étape de programme)
  qui ont une option "Ignorer la synchronisation" activée ne seront pas
  synchronisés. Cette fonctionnalité vous permet de décider de ne pas synchroniser
  certaines données sensibles ou non pertinentes et de les conserver uniquement localement.

- L'autorité `Ignorer la validation des champs obligatoires dans Tracker et Capture Évènement`
  (`F\_IGNORE\_TRACKER\_REQUIRED\_VALUE\_VALIDATION`) doit être utilisée lorsqu'il
  faut que certains attributs/éléments de données obligatoires
  aient en même temps une propriété "Ignorer la synchronisation" activée.
  Un tel paramètre entraînera un échec de validation sur le serveur central
  car l'attribut/l'élément de données concerné ne sera pas présent dans la
  charge utile.

  La validation n'échouera pas pour l'utilisateur qui dispose de cette autorité. 
  L'autorité doit être attribuée à l'utilisateur, sur le serveur central,
  ce qui sera utilisé pour la tâche de synchronisation.

- Dans des cas spécifiques, **la synchronisation initiale de toutes les données peut être indésirable** ;
  par exemple, lorsqu'une base de données sur l'instance locale est une nouvelle copie de
  base de données présente sur l'instance centrale, ou lorsqu'il est préférable de ne pas
  synchroniser les anciennes données pour gagner 
  du temps.

  La clé de réglage *syncSkipSyncForDataChangedBefore* peut être utilisée pour ignorer
  la synchronisation de toutes les données (valeurs de données, données de programmes Évènement et Tracker, 
  enregistrements des ensembles de données complets ) qui ont été *modifiées 
  dernièrement avant la date spécifiée*. La `Clé de réglage` est utilisée dans la
  tâche de synchronisation tout le temps. Par conséquent, si vous devez synchroniser
  données anciennes, vous devez modifier la `Clé de réglage`.

- La tâche de synchronisation des programmes Tracker et Évènement prend en charge
  la radiomessagerie afin d'éviter les délais d'attente et de faire face à un réseau instable.
  La taille de page par défaut pour la tâche "Synchronisation des données des programmes Évènement" est définie sur 60.
  La taille de page par défaut pour la tâche "Synchronisation des données des programmes Tracker" est définie sur 20.

  Si les valeurs par défaut ne vous conviennent pas, vous pouvez spécifier votre propre taille de page 
  votre propre taille de page via un paramètre dans une tâche de synchronisation particulière dans l'application Planificateur.

### Planification de la synchronisation des métadonnées { #scheduling_metadata_sync } 

DHIS2 offre une fonction de synchronisation des métadonnées d'une instance distante vers une instance locale de DHIS2. Cette fonction peut être utile lorsque vous avez déployé plusieurs instances autonomes de DHIS2 et que vous devez créer des métadonnées dans toutes les instances locales similaires à l'instance centrale de DHIS2.

Voici les étapes à suivre pour activer la synchronisation des meta-données :

- Allez dans Paramètres \> Synchronisation, saisissez l'URL du serveur distant,
  le nom d'utilisateur et mot de passe et cliquez sur Sauvegarder.

- Allez dans Administration des métadonnées \> Planification. Sous Synchronisation des métadonnées, 
  définissez la stratégie sur Activé, sélectionnez la période et
  cliquez sur Démarrer.

Quelques aspects de la fonction de synchronisation des meta-données à prendre en compte :

- L'instance DHIS2 locale stockera le mot de passe du compte utilisateur
  de l'instance distante dans sa base de données. Le compte utilisateur distant est
  utilisé pour l'authentification lors du transfert/téléchargement des données.
  Pour des raisons de sécurité, assurez-vous que le paramètre de configuration _encryption.password_ (mot de passe de cryptage)
  dans _hibernate.properties_ (propriétés Hibernate) est un mot de passe fort.
   

- Le déploiement du serveur distant sur SSL/HTTPS est fortement recommandé car
  le nom d'utilisateur et le mot de passe sont envoyés en texte clair à l'aide 
  de base et peuvent être interceptés par un pirate.

- Assurez-vous également que l'utilisateur distant ne dispose pas de TOUTES les autorités.
  Créez plutôt un utilisateur avec l'autorité F\_METADATA\_MANAGE afin
  que même si ces informations sont interceptées par un pirate, que ce dernier ne puisse pas 
  avoir un contrôle total sur système distant.

- La synchronisation des métadonnées repose sur la couche d'importation sous-jacente.
  Chaque version de métadonnées est une exportation de métadonnées entre deux horodatages donnés.
  Chaque synchronisation de la version de métadonnées est une tentative d'importation
  de cet instantané de métadonnées dans l’instance locale. La synchronisation des
  versions est incrémentale. L'instance locale tentera de télécharger les
  versions de métadonnées de l'instance centrale les unes après les autres.
  L'échec de la synchronisation d'une version de métadonnées spécifique empêchera la synchronisation
  des autres versions. En cas d'échecs, des modifications
  appropriées doivent être apportées aux métadonnées au niveau central pour garantir que les
  résolutions des erreurs. La configuration des métadonnées est essentielle et 
  l'utilisateur doit être prudent lors du déploiement des mises à jour à la 
  production. Il est toujours recommandé d'avoir des environnements de test en 
  place pour garantir l'intégrité des versions de métadonnées et de leurs
  impacts par la suite. L'instance locale synchronisera les métadonnées de
  la première version pour que l'harmonie soit maintenue et que l'instance locale et centrale
  fonctionne correctement.

- Le système tentera une synchronisation au moment prévu. Si
  le serveur local ou distant n'a pas accès à une connexion Internet 
  à ce moment-là, la synchronisation sera interrompue et 
  réessayée après le nombre de tentatives indiqué dans le 
  fichier _dhis.conf_.

- Vous pouvez voir l'heure de la dernière synchronisation réussie avec le serveur 
  distant sur la page de planification, à côté de la mention "Dernier succès".

