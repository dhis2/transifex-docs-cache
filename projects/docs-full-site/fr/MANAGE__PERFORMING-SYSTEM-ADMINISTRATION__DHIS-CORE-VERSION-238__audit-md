---
edit_url: "https://github.com/dhis2/dhis2-docs/blob/2.38/src/sysadmin/audit.md"
revision_date: '2021-12-02'
tags:
- Gestion
- Version principale de DHIS 2.38
---

# Audit { #audit }

## Introduction { #introduction } 

DHIS2 prend en charge un nouveau service d'audit basé sur _Apache ActiveMQ Artemis_. Artemis est utilisé comme système de messagerie asynchrone par DHIS2.

Une fois qu'une entité est enregistrée dans la base de données, un message d'audit sera généré et envoyé au service utilisateur de la messagerie Artemis. Le message sera ensuite traité dans un autre fil de discussion.

Les journaux d'audit peuvent être récupérés à partir de la base de données de DHIS2. Actuellement, aucun point d'extrémité d'une interface utilisateur ou d'une API n’est disponible pour récupérer les entrées d’audit.


## Table d'audit unique { #audit_table }

All audit entries will be saved into one single table named `audit`

| Colonne     | Type                        | Description |   |
|------------|-----------------------------|---------------------------------------------------------------------------------------------------------------------------------------------------|---|
| Identifiant de l'audit    | entier                     | Clé primaire. |   |
| type d'audit  | texte                        | LIRE, CRÉER, METTRE À JOUR, SUPPRIMER, RECHERCHER                                                                                                                  |   |
| champ d'application de l'audit | texte                        | MÉTADONNÉES, AGRÉGÉ, TRACKER                                                                                                                        |   |
| classe      | texte                        | Nom de classe Java de l’entité d’audit.                                                                                                                     |   |
| les attributs | jsonb                       | Une chaîne JSON avec les attributs de l'objet audité. Exemple : `{"valueType": "TEXT", "categoryCombo": "SWQW313FQY", "domainType": "TRACKER"}`. |   |
| données       | bytea                       | Chaîne JSON compressée de l'entité d'audit au format "tableau d'octets" (non lisible par l'homme).                                                                                             |   |
| créé à  | horodatage sans fuseau horaire | Temps de création. |   |
| créé par  | texte                        | Nom d'utilisateur de l'utilisateur effectuant l'opération auditée. |   |
| uid        | texte                        | L'UID de l'objet audité. |   |
| code       | texte                        | Le code de l'objet audité. |   |

Le service d'audit utilise deux nouveaux concepts : *Champ d'application de l'audit* et *Type d'audit*.

## Champ d'application de l'audit { #audit_scope }

Un champ d'application d'audit est une zone logique de l'application qui peut être auditée. Il existe actuellement trois champs d'application d'audit.

| **Portée** | Clé       | Objets audités                                              |
| --------- | --------- | ------------------------------------------------------------ |
| Tracker   | tracker   | Instance d'entité suivie, Valeur d'attribut d'entité suivie, inscription, Événement. |
| Métadonnées  | métadonnées  | Tous les objets de métadonnées (par exemple, les éléments de données, les unités d'organisation). |
| Agrégat | agrégation | Valeur de données agrégée.                                        |


## Type d'audit { #audit_type }

Un type d'audit est une action qui déclenche une opération d'audit. Actuellement, nous prenons en charge les quatre types suivants.

| Nom     | Clé      | Description         |
| -------- | -------- | ------------------- |
| Lire     | LIRE     | L'objet a été lu.    |
| Créer   | CRÉER   | L'objet a été créé. |
| Mise à jour   | METTRE À JOUR   | L'objet a été mis à jour. |
| Supprimer   | SUPPRIMER   | L'objet a été supprimé. |
| Désactivé | DÉSACTIVÉ | Désactiver l'audit.      |

> **Attention**
>
> Le type d'audit LIRE peut générer beaucoup de données dans la base de données et avoir un impact sur les performances.

## Configuration { #audit_configuration }

Le système d'audit est activé par défaut pour les portées et types suivants.

Scopes:

- `CRÉER`
- `METTRE À JOUR`
- `SUPPRIMER`

Les types:

- `MÉTADONNÉES`
- `TRACKER`
- `AGRÉGÉ`

Cela signifie qu'**aucune action n'est requise** pour activer le système d'audit par défaut. Le paramètre par défaut équivaut à la configuration `dhis.conf` suivante.

```propriétés
audit.metadata = CRÉER; METTRE À JOUR; SUPPRIMER
audit.tracker = CRÉER; METTRE À JOUR; SUPPRIMER
audit.aggregate = CRÉER; METTRE À JOUR; SUPPRIMER
```

L'audit peut être configuré à l'aide du _référentiel d'audit_. Le référentiel d'audit représente les combinaisons valides de portées et de types, et est défini avec les propriétés suivantes dans le fichier de configuration `dhis.conf`. Chaque propriété accepte une liste de types d'audit délimitée par un point-virgule (`;`).

* `audit.metadata`
* `audit.tracker`
* `audit.aggregate`

## Exemples { #examples }

Cette section montre comment configurer le système d'audit dans `dhis.conf`.

Pour activer l'audit de création et de mise à jour des métadonnées et du tracker uniquement :

```properties
audit.metadata = CREATE;UPDATE
audit.tracker = CREATE;UPDATE
audit.aggregate = DISABLED
```

Pour auditer uniquement les objets liés au tracker "créer" et "supprimer" :

```properties
audit.metadata = DISABLED
audit.tracker = CREATE;DELETE
audit.aggregate = DISABLED
```

Pour désactiver complètement l'audit pour toutes les portées :
```properties
audit.metadata = DISABLED
audit.tracker = DISABLED
audit.aggregate = DISABLED
```

