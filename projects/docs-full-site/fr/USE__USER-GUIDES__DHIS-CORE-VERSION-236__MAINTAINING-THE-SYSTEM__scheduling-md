---
edit_url: "https://github.com/dhis2/dhis2-docs/blob/2.36/src/user/scheduling.md"
revision_date: "2021-06-14"
tags:
    - Utilisation
    - DHIS core version 2.36
---

# Programmation { #scheduling }

Le Programmateur est une application permettant de gérer les tâches d'arrière-plan dans DHIS2. Les tâches d'arrière-plan peuvent effectuer un certain nombre de fonctions, telles que l'exécution d'analyses, la synchronisation de données et de méta-données, ou l'envoi d'un rapport d'analyse "push". L'application permet de créer, de modifier et de supprimer de telles tâches.

Le Programmateur est fourni avec le DHIS2 et est accessible via le menu App.

![La page de démarrage de l'application Programmateur](resources/images/scheduler/overview.png)

La page d'accueil de l'application Programmateur présente un aperçu des tâches existantes. Par défaut, les tâches du système prédéfinies sont masquées. Pour les afficher, cliquez sur _Inclure les tâches du système dans la liste_ dans le coin supérieur droit.

Lorsque vous créez ou modifiez une tâche, elle sera programmer en fonction de la programmation sélectionnée. Pour exécuter une tâche à la demande, accédez à la liste des tâches, cliquez sur le bouton "Actions" de la tâche que vous souhaitez exécuter et cliquez sur "Exécuter manuellement". Cette action n'est disponible que pour les tâches activées.

## Créer une tâche { #scheduling_create_job }

1.  Ouvrez l'application **Programmateur** et cliquez sur le bouton "Nouvelle tâche" dans le coin supérieur droit.

1.  Choisissez un **Nom** approprié pour le nouvel emploi.

1.  Sélectionnez le **Type d'emploi** que vous souhaitez programmer à l'aide du menu déroulant.

1.  Sélectionnez un programme pour la tâche. Chaque type de tâche a son propre type de programmation, soit la programmation **Cron**, soit **Reporter**.

    1.  Pour les types de tâches programmées**Cron**, vous pouvez définir un programme en utilisant la syntaxe [Programmation de Printemps](https://docs.spring.io/spring/docs/current/javadoc-api/org/springframework/scheduling/support/CronSequenceGenerator.html). Vous pouvez également sélectionner une **expression Cron** prédéfinie en cliquant sur "Choisir parmi les heures prédéfinies". Cette programmation ne démarrera une nouvelle exécution de tâcheque si l'exécution de travail précédente est terminée, pour éviter que le système ne génère trop de travaux.

    1.  Pour les tâches  programmées **Reporter**, vous pouvez définir un délai en secondes. Contrairement aux tâches programmées **Cron**, ces tâches ne sont pas exécutées selon un calendrier défini, mais avec un délai spécifique entre les exécutions des tâches. Le minuteur démarre lorsqu'une tâche se termine, et lance une nouvelle exécution lorsque le décompte atteint zéro. Cette fonction continuera tant que la tâche est activée.

1.  Si le type de tâche est personnalisable, une section **Paramètres** apparaîtra sous les paramètres de programmation. Ces options supplémentaires précisent les détails de la tâche prévue et varient considérablement en fonction du type de tâche.

1.  Cliquez sur le bouton **Enregistrer** pour confirmer la création de la tâche. Une fois la création réussie, vous serez redirigé vers l'aperçu de la tâche, où la tâche nouvellement créé sera désormais répertorié.

![Création d'une nouvelle tâche de programmateur](resources/images/scheduler/add_new_job.png)

Les tâches nouvellement créées sont activées par défaut.

## Modifier une tâche{ #scheduling_configure_job }

Avec les autorisations appropriées, vous pouvez modifier les détails des tâches créées par l'utilisateur. Pour activer ou désactiver rapidement l'exécution d'une tâche créée par un utilisateur, utilisez les boutons de la colonne **Activer/Désactiver** sur la page d'accueil de l'application Programmateur. Notez que les tâches du système sont toujours activées et ne peuvent être désactivées.

Modification ultérieure des tâches utilisateur :

1.  Cliquez sur le bouton "Actions" de la tâche que vous souhaitez modifier et cliquez sur "Modifier" (seules les tâches utilisateur peuvent être modifiées).

1.  Lorsque vous avez terminé la modification, cliquez sur le bouton **Enregistrer les modifications** pour poursuivre les modifications.

## Supprimer une tâche { #dataAdmin_scheduler_delete }

1.  Cliquez sur le bouton "Actions" de la tâche que vous souhaitez supprimer et cliquez sur "Supprimer" (seules les tâches utilisateur peuvent être modifiées).

1.  Confirmez en cliquant à nouveau sur **Supprimer** dans la fenêtre pop-up.

Les tâches utilisateur peuvent également être supprimées sur la page de modification.

![Suppression d'une nouvelle tâche de programmateur](resources/images/scheduler/delete_job.png)

## Types de tâches { #job-types }

La section suivante décrit les différents types de tâches.

### Désactiver les utilisateurs inactifs { #scheduling_disable_inactive_users }

Les utilisateurs n'ayant pas été actifs - non connectés - pendant plusieurs mois peuvent être automatiquement désactivés. Comme paramètre de tâche, choisissez le nombre de mois d'inactivité. Tous les utilisateurs qui ne se sont pas connectés pendant ce nombre de mois ou plus seront désactivés par la tâche. Les utilisateurs désactivés ne pourront plus se connecter au système.

### Tableau des ressources { #scheduling_resource_table }

Le tableau de ressources à pour tâche de générer et de metter à jour des tables de la base de données des ressources. Ces tables sont utilisées par différents composants de DHIS 2 et sont destinées à simplifier les recherches dans la base de données.

Notez que lorsque vous spécifiez l'une des tâches de la table analytique, les tables de ressources peuvent faire partie du processus et il n'est pas nécessaire de spécifier également une tâche de la table de ressources.

### Tableau analytique { #scheduling_analytics_table }

Les tableaux analytiques permettent de générer et de mettre à jour les tableaux analytiques. Les tableaux analytiques sont utilisés comme base pour les requêtes d'analyse de données dans le DHIS2. Les applications telles que Tableau de bord, Visualiseur et Cartes récupèrent les données de ces tableaux via l'API analytique du DHIS2, et elles doivent être mises à jour pour que les données analytiques deviennent disponibles. Vous pouvez programmer ce processus de façon à ce qu'il s'exécute régulièrement par le biais d'un type de tâche de table analytique.

La tâche du tableau analytique remplira par défaut les champs de données pour toutes les années et tous les éléments de données. Les paramètres suivants sont disponibles :

-   **Dernières années:** Le nombre de dernières années pour lesquelles il faut remplir les tableaux d'analyse. Par exemple, si vous indiquez 2 années, le processus mettra à jour les données des deux dernières années, mais pas les données plus anciennes. Ce paramètre est utile pour réduire le temps nécessaire au processus, et est approprié si les données plus anciennes n'ont pas changé, et lorsque l'on souhaite mettre à jour les données récentes.
-   **Sauter les tableaux de ressources:** Sauter les tableaux de ressources pendant le processus de mise à jour du tableau analytique. Cela réduit le temps nécessaire à l'exécution du processus, mais entraine une situation dans laquelle les modifications des métadonnées ne sont pas prises en compte dans les données analytiques.
-   **Sauter les types de tableaux : ** Sauter un ou plusieurs types de tableaux analytiques. Cela réduit le temps nécessaire à l'exécution du processus, mais conduit à ce que ces types de données ne soient pas mis à jour dans les données analytiques.

### Tableau d'analyse (Suite) { #scheduling_continuous_analytics_table }

Les tableaux analytiques permettent de générer et de mettre à jour les tableaux analytiques. Les tableaux analytiques sont utilisés comme base pour les requêtes d'analyse de données dans le DHIS2. Les applications telles que Tableau de bord, Visualiseur et Cartes récupèrent les données de ces tableaux via l'API analytique du DHIS2, et elles doivent être mises à jour pour que les données analytiques deviennent disponibles. Vous pouvez programmer ce processus de façon à ce qu'il s'exécute régulièrement par le biais d'un type de tâche de table analytique.

La tâche de la table d'analyse continue est basé sur deux phases :

-   _Dernière mise à jour :_ mise à jour des données récentes, où récente renvoie aux données qui ont été ajoutées, mises à jour ou supprimées depuis la dernière mise à jour des données récentes ou des données complètes. Ce processus pourra être fréquent.
-   _Mise à jour complète :_ mise à jour de toutes les données sur toutes les années. Ce processus aura lieu une fois par jour.

Le tâche de la table d'analyse continue mettra fréquemment à jour les dernières données. Le processus de mise à jour des données utilise une partition spéciale de la base de données qui ne contient que les données les plus récentes. Cette partition peut être rapidement actualisée en raison de la quantité relativement faible de données. La taille de la partition augmentera jusqu'à ce qu'une mise à jour complète soit effectuée. Toutes les données de toutes les années seront mises à jour une fois par jour,. La dernière partition sera ainsi effacée.

La tâche du tableau analytique remplira par défaut les champs de données pour toutes les années et tous les éléments de données. Les paramètres suivants sont disponibles :

-   **Heure du jour de la mise à jour complète:** Heure du jour à laquelle la mise à jour complète sera effectuée. Par exemple, si vous indiquez 1, la mise à jour complète sera effectuée à 1 heure du matin.
-   **Dernières années:** Le nombre de dernières années pour lesquelles il faut remplir les tableaux d'analyse. Par exemple, si vous indiquez 2 années, le processus mettra à jour les données des deux dernières années, mais pas les données plus anciennes. Ce paramètre est utile pour réduire le temps nécessaire au processus, et est approprié si les données plus anciennes n'ont pas changé, et lorsque l'on souhaite mettre à jour les données récentes.
-   **Sauter les tableaux de ressources:** Sauter les tableaux de ressources pendant le processus de mise à jour du tableau analytique. Cela réduit le temps nécessaire à l'exécution du processus, mais entraine une situation dans laquelle les modifications des métadonnées ne sont pas prises en compte dans les données analytiques.

### Synchronisation des données { #scheduling_data_sync }

Le DHIS2 permet la synchronisation des données entre des instances réparties à distance et une instance centrale du DHIS2. Cela peut être utile, par exemple, lorsque vous avez déployé plusieurs instances autonomes du DHIS2 qui doivent soumettre des valeurs de données à une instance centrale du DHIS2. La synchronisation des données de suivi et des données agrégées est prise en charge.

Voici les étapes à suivre pour activer la synchronisation des données :

-   Allez dans les Paramètres de Synchronisation, entrez l'URL du serveur distant, le nom d'utilisateur et le mot de passe. Appuyez sur la touche TAB pour enregistrer automatiquement le nouveau mot de passe. Actualisez la page et vérifiez que les valeurs remplies sont toujours présentes. Notez que le champ du mot de passe sera vide après l'actualisation, car cette valeur est cryptée, et vous pouvez donc la considérer comme enregistrée.

-   En utilisant l'application Programmateur, créez une nouvelle tâche en utilisant le type de tâche "Synchronisation des données des programmes d'événements" et/ou "Synchronisation des données des programmes Tracker". Assurez-vous qu'il est activé lorsque vous avez terminé. (N.B. : Si la tâche "Synchronisation des données de programmes", disponible dans les versions précédentes, a été préalablement configurée dans l'application Programmateur, elle a été automatiquement remplacée par les deux nouvelles tâches "Synchronisation des données des programmes d'événements" et "Synchronisation des données des programmes Tracker" avec les mêmes paramètres. )

Quelques aspects de la fonction de synchronisation des données à prendre en compte :

-   L'instance DHIS2 locale stocke le mot de passe du compte utilisateur sur l'instance distante, crypté dans la base de données locale. Le compte distant est utilisé pour l'authentification lors du transfert de données. Pour des raisons de sécurité, assurez-vous de définir le paramètre de configuration _cryptage.mot de passe_ dans _hiberner.propriétés_ sur un mot de passe sécurisé.

-   Il est fortement recommandé de déployer le serveur distant sur SSL/HTTPS car le nom d'utilisateur et le mot de passe sont envoyés en texte clair en utilisant une authentification de base et pourraient être interceptés par un pirate.

-   La synchronisation des données utilise la propriété UID des éléments de données, des combos d'options de catégories et des unités d'organisation pour faire correspondre les méta-données. La synchronisation dépend donc de l'harmonisation de ces trois objets de méta-données sur l'instance locale et distante pour fonctionner correctement.

-   La première fois que le DHIS2 exécutera la tâche de synchronisation, il inclura toutes les données disponibles. Les tâches de synchronisation suivantes ne comprendront que les données ajoutées et modifiées depuis la dernière tâche réussie. Une tâche de synchronisation n'est considérée comme réussie que si toutes les données ont été sauvegardées avec succès sur le serveur distant (toutes les données synchronisées avec succès resteront sur l'instance réceptrice, même si le travail finit par échouer). La réussite ou l'échec de la tâchel peut être déterminé à partir du résumé d'importation renvoyé par le serveur central.

-   La tâche initiale de synchronisation peut prendre beaucoup de temps, voire ralentir votre instance, en fonction de la quantité de données à synchroniser. Il peut être judicieux de configurer la tâche pour qu'il s'exécute lorsqu'ils y a peu d'utilisateurs en ligne sont peu nombreux, puis de la modifier plus tard selon vos préférences. Si vous ne voulez ou ne devez pas synchroniser toutes les données, il est alors possible d' <a href="#skip_changed_before">ignorer scertaines des données faisant l'objet de synchronisation</a>.

    Lorsque DHIS2 synchronise les données de tracker, il définit l'ensemble des données à synchroniser en fonction de leur dernière date de synchronisation. Chacune des instances et chacun des événements de l'entité suivie ont leurs propres enregistrements de la date de leur dernière synchronisation réussie.

-   Le système lancera une tâche de synchronisation sur la base des règles définies dans la configuration de la tâche. Si la tâche de synchronisation démarre alors qu'il n'y a pas de connexion au serveur distant, elle sera réessayée jusqu'à trois fois avant d'être interrompue. La tâche sera relancé à une heure programmée.

-   Le serveur gère chaque ensemble de programmes séparément, ce qui signifie qu'un ensemble de programmes peut être synchronisé avec succès, tandis que l'autre échoue. L'échec ou la réussite de l'un n'influence pas l'autre, car la dernière synchronisation réussie est suivie individuellement pour chaque élément, comme indiqué précédemment.

-   Les attributs des Instances d'entité suivie (Instances d'entité suivie) et les éléments de données des étapes de programmes (éléments de données des étapes de programmes ), dont l'option "Sauter la synchronisation" est activée, ne seront pas synchronisés. Cette fonction vous permet de décider de ne pas synchroniser certaines données sensibles ou non pertinentes et de ne les conserver que localement.

-   L'autorité `Ignorer la validation des champs obligatoires dans Saisie Tracker et Saisie d'événements` (`F\_IGNORE\_TRACKER\_REQUIRED\_VALUE\_VALIDATION`) doit être utilisée lorsqu'il est nécessaire qu'un attribut / élément de donnée obligatoire ait en même temps une propriété "Sauter la synchronisation" activée. Un tel paramètre entraînera un échec de validation sur le serveur central, car l'attribut / élément de donnée concerné ne sera pas présent dans la charge utile.

    La validation se fera avec succès pour l'utilisateur disposant de cette autorité. L'autorité doit être attribuée à l'utilisateur, sur le serveur central, qui sera utilisé pour la tâche de synchronisation.

-   Dans des cas spécifiques, **la synchronisation initiale de toutes les données peut être indésirable** ; par exemple, lorsqu'une base de données sur l'instance locale est un nouvel exemplaire de la base de données présente sur l'instance centrale, ou lorsqu'il est jugé préférable de ne pas synchroniser les anciennes données au profit d'une synchronisation initiale prenant moins de temps.

    La clé de réglage _syncSkipSyncForDataChangedBefore_ peut être utilisée pour sauter la synchronisation de toutes les données (valeurs de données, données des programmes d'événements et Tracker, enregistrements complets d'ensembles de données) _dernièrement modifiées avant la date spécifiée_. La `clé de réglage` est utilisée en permanence dans la tâche de synchronisation. Par conséquent, vous devez changer la `clé de réglage` si vous avez besoin de synchroniser les anciennes données.

-   La tâche de synchronisation des Programmes Tracker et des Programmes d'événements prend en charge la pagination afin d'éviter les dépassements de temps et de résoudre les problèmes d'instabilité du réseau. La taille de page par défaut pour la tâche "Synchronisation des données des programmes d'événements" est fixée à 60. Par contre, la taille de page par défaut pour la tâche "Synchronisation des données des programmes Tracker" est fixée à 20.

    Si les valeurs par défaut ne vous conviennent pas, vous pouvez alors spécifier votre propre taille de page via Paramètre, en particulier Tâche de synchronisation dans l'application Programmateur.

### Planification de la synchronisation des métadonnées { #scheduling_metadata_sync }

Le DHIS2 offre une fonction de synchronisation des meta-données d'une instance distante à une instance locale du DHIS2. Cette fonction peut être utile lorsque vous avez déployé plusieurs instances autonomes du DHIS2 et que vous devez créer des meta-données dans toutes les instances locales similaires à l'instance centrale du DHIS2.

Voici les étapes à suivre pour activer la synchronisation des meta-données :

-   Allez dans Paramètres \> Synchronisation, entrez l'URL du serveur distant, le nom d'utilisateur et le mot de passe et cliquez sur Enregistrer.

-   Allez dans Administration des métadonnées \> Planification. Sous Synchronisation des métadonnées, mettez la stratégie sur Activé, sélectionnez la période et cliquez sur Démarrer.

Quelques aspects de la fonction de synchronisation des meta-données à prendre en compte :

-   L'instance locale de DHIS2 stockera le mot de passe du compte utilisateur de l'instance distante dans sa base de données. Le compte d'utilisateur distant est utilisé pour l'authentification lors du transfert/téléchargement de données. Pour des raisons de sécurité, assurez-vous de définir le paramètre de configuration _cryptage.mot de passe_ dans _hiberner.propriétés_ sur un mot de passe sécurisé.

-   Il est fortement recommandé de déployer le serveur distant sur SSL/HTTPS car le nom d'utilisateur et le mot de passe sont envoyés en texte clair en utilisant une authentification de base et pourraient être interceptés par un pirate.

-   Assurez-vous également que l'utilisateur distant ne dispose pas de l'autorité TOUT, mais créez simplement un utilisateur avec l'autorité F_METADATA_MANAGE de sorte que même si ces détails sont interceptés par un pirate informatique, l'on ne puisse pas avoir le contrôle total du système distant.

-   La synchronisation des meta-données repose sur la couche d'importation sous-jacente. Chaque version de méta-données est une exportation de meta-données entre deux horodatages donnés. Chaque synchronisation de version de meta-données est une tentative d'importation de cet instantané de meta-données dans l'instance locale. La synchronisation des versions se fait progressivement. L'instance locale essaiera de télécharger les versions de meta-données de l'instance centrale l'une après l'autre. L'échec de la synchronisation d'une version spécifique de meta-données ne permettra pas à la synchronisation de passer à d'autres versions. En cas d'échec, des modifications appropriées doivent être apportées aux meta-données de l'instance centrale pour garantir la résolution de l'erreur. La configuration des meta-données est essentielle et l'utilisateur doit faire beaucoup attention lorsqu'il déploie les mises à jour de la production. Il est toujours recommandé de mettre en place des environnements de simulation afin de garantir le bon fonctionnement des versions de meta-données et leur impact par la suite. L'instance locale synchronisera les meta-données de la première version pour maintenir l'harmonie et garantir le bon fonctionnement de l'instance locale et centrale.

-   Le système tentera une synchronisation à l'heure prévue. Si le serveur local ou distant ne dispose pas d'une connexion Internet à ce moment, la synchronisation sera interrompue et réessayée plus tard, selon le nombre de tentatives mentionné dans le fichier _dhis.conf_.

-   Vous pouvez voir l'heure de la dernière synchronisation réussie avec le serveur distant dans l'écran de programmation à côté de l'étiquette "Dernière réussite".
