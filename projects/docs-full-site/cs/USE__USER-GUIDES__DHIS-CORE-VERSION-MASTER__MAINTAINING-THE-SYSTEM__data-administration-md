---
edit_url: "https://github.com/dhis2/dhis2-docs/blob/master/src/user/data-administration.md"
revision_date: '2024-07-04'
tags:
- Hlavní verze jádra DHIS
- Použití
---

# Správa dat { #data_admin }

The data administration module provides a range of functions to ensure
that the data stored in the DHIS2 database is integral and that the
database performance is optimised. These functions should be executed on
a regular basis by a data administrator to ensure that the quality of
the data stored is optimal.

## Integrita dat { #data_admin_data_integrity }

DHIS2 can perform a wide range of data integrity checks on the data
contained in the database. Identifying and correcting data integrity
issues is extremely important for ensuring that the data used for
analysis purposes is valid. Each of the data integrity checks that are
performed by the system will be described, along with general procedures
that can be performed to resolve these issues.

### Datové prvky bez datové sady { #data-elements-without-data-set } 

Each data element must be assigned to a data set. Values for data
elements will not be able to be entered into the system if a data
element is not assigned to a data set. Choose
Maintenance-\>Datasets-\>Edit from the main menu and then add the
"orphaned" data element to the appropriate data set.

### Datové prvky bez skupin { #data-elements-without-groups } 

Some Data Elements have been allocated to several Data Element Groups.
This is currently not allowed, because it will result in duplication of
linked data records in the analytics record sets that provide aggregated
data. Go to Maintenance -\> Data Element Groups to review each Data
Element identified and remove the incorrect Group allocations.

### Datové prvky porušující exkluzivní sady skupin { #data-elements-violating-exclusive-group-sets } 

Some data elements have been allocated to several data element groups
that are members of the same data element group set. All group sets in
DHIS2 are defined as exclusive, which means that a data element can
*only* be allocated to *one* data element group within that group set.
Go to Maintenance -\> Data elements and indicators -\> Data element
groups to review each data element identified in the integrity check.
Either remove the data element from all groups except the one that it
should be allocated to, or see if one of the groups should be placed in
a different group set.

### Datové prvky v datové sadě, ale ne ve formuláři nebo v sekcích { #data-elements-in-data-set-but-not-in-form-or-sections } 

Data elements have been assigned to a data set, but have not been
assigned to any sections of the data set forms. All data sets which use
section forms, should generally have all data elements in the data set
assigned to exactly one section of the dataset.

### Datové prvky přiřazené souborům dat s různými typy období { #data-elements-assigned-to-data-sets-with-different-period-types } 

Data elements should not be assigned to two separate data sets whose
period types differ. The recommended approach would be to create two
separate data elements (for instance a monthly and yearly data element)
and assign these to respective datasets.

### Sady dat, které nejsou přiřazeny organizačním jednotkám { #data-sets-not-assigned-to-organisation-units } 

Všechny datové soubory by měly být přiřazeny alespoň jedné organizační jednotce.

### Sekce s neplatnými kombinacemi kategorií { #sections-with-invalid-category-combinations } 

Data sets which use section forms should only have a single category
combination within each section. This violation could result from
assigning a data element to a section, but then changing the category
combination of this data element at a later point in time.

### Indikátory se stejnými vzorci { #indicators-with-identical-formulas } 

Although this rule will not affect data quality, it generally does not
make sense to have two indicators with the exact same definition. Review
the identified indicators and their formulas and delete or modify any
indicator that appears to be the duplicate.

### Indikátory bez skupin { #indicators-without-groups } 

All data elements and indicators must be assigned to at least one group,
so these Indicators need to be allocated to their correct Data Element
and Indicator Group. From the main menu, go to Data elements/Indicators
-\> Indicator Groups, and allocate each of the \`Orphaned\` indicators
to its correct group.

### Neplatné čitatele indikátoru { #invalid-indicator-numerators } 

Violations of this rule may be caused by an incorrect reference to a
deleted or modified data element. Review the indicator and make
corrections to the numerator definition.

### Neplatní jmenovatelé indikátorů { #invalid-indicator-denominators } 

Violations of this rule may be caused by an incorrect reference to a
deleted or modified data element. Review the indicator and make
corrections to the denominator definition.

### Indikátory porušující exkluzivní sady skupin { #indicators-violating-exclusive-group-sets } 

Some indicators have been allocated to several indicator groups that are
members of the same indicator group set. All group sets in DHIS2 are
defined as exclusive, which means that an indicator can *only* be
allocated to *one* indicator group within that group set. Go to
Maintenance -\> Data elements and indicators -\> Indicator groups to
review each indicator identified in the integrity check. Either remove
the indicator from all groups except the one that it should be allocated
to, or see if one of the groups should be placed in a different group
set.

### Duplicitní období { #duplicate-periods } 

If periods have been imported from external applications, it may be
possible that some periods will be duplicated. If you have any periods
which appear to be duplicated here, you will need to resolve these
directly in the DHIS2 database. All data which has been assigned to the
duplicated period, should be moved to the correct period, and the
duplicate period should be removed.

### Organizační jednotky s cyklickými odkazy { #organisation-units-with-cyclic-references } 

Organisation units cannot be both parent and children of each other,
directly nor indirectly. If this situation occurs, you will need to
resolve the cyclic reference directly in the DHIS2 database in the
"organisation unit" table, by reassigning the "parentid" field of the
organisation units.

### Osamocené organizační jednotky { #orphaned-organisation-units } 

All organisation units must exist within the organisation unit
hierarchy. Go to Organisation units -\> Hierarchy Operations and move the
offending organisation unit into the proper position in the hierarchy.

### Organizační jednotky bez skupin { #organisation-units-without-groups } 

All organisation units *must* be allocated to at least *one* group. The
problem might either be that you have not defined any compulsory OrgUnit
Group Set at all, or that there are violations of the compulsory rule
for some OrgUnits . NOTE: If you have defined no compulsory OrgUnit
Group Sets, then you must first define them by going to Organisation
units-\>Organisation unit group sets and define at least one compulsory
Group Set (the group set 'Type' are nearly universally relevant). If you
have the relevant group sets, go to Maintenance -\> OrgUnit Groups to
review each OrgUnit identified and add the relevant Group allocation.

### Organizační jednotky porušující povinné sady skupin { #organisation-units-violating-compulsory-group-sets } 

These organisation units have not been assigned to the any organisation
unit group within one of the *compulsory* organisation unit group sets.
When a group set is defined as compulsory, it means that an organisation
unit must be allocated to at least one organisation unit group within
that group set. For instance, all organisation units must belong to one
of the groups in the 'Type' group set. It might belong to the
\`Hospital\` or the \`Clinic\` or any other 'type' group - but it must
belong to exactly one of them. Go to Organisation units-\>Organisation
unit groups to review each organisation unit identified in the integrity
check. Allocate all organisation units to exactly one compulsory group.

### Organizační jednotky porušující exkluzivní sady skupin { #organisation-units-violating-exclusive-group-sets } 

Some organisation units have been allocated to several organisation unit
groups that are members of the same organisation unit group set. All
group sets in DHIS2 are defined as exclusive, which means that an
organisation unit can *only* be allocated to *one* organisation unit
group within that Group Set. For instance, one organisation unit cannot
normally belong to the both the 'Hospital' and 'Clinic' groups , but
rather to only to one of them. Go to Organisation unit-\>Organisation
unit groups to review each organisation unit identified in the integrity
check. Remove the organisation units from all groups except the one that
it should be allocated to.

### Skupiny organizačních jednotek bez sad skupin { #organisation-unit-groups-without-group-sets } 

The organisation unit groups listed here have not been allocated to a
group set. Go to Maintenance-\>Organisation unit-\>Organisation unit
group sets and allocate the Organisation unit group to the appropriate
group set.

### Pravidla ověření bez skupin { #validation-rules-without-groups } 

All validation rules must be assigned to a group. Go to **Maintenance**
app \> **Validation rule group** and assign the offending validation
rule to a group.

### Neplatné výrazy pravidla ověření na levé straně { #invalid-validation-rule-left-side-expressions } 

An error exists in the left-side validation rule definition. Go to
**Maintenance** app -\> **Validation rule** and click **Edit** on the
offending rule. Click **Left side** and make the required corrections.

### Neplatné výrazy pravého pravidla pro ověření { #invalid-validation-rule-right-side-expressions } 

An error exists in the right-side validation rule definition. Go to
**Maintenance** app -\> **Validation rule** and click **Edit** on the
offending rule. Click **Right side** and make the required corrections.

### ProgramRules bez podmínek { #programrules-with-no-condition } 

Zpráva zvýrazní všechna **pravidla programu**, která nejsou nakonfigurována s **podmínkou**. Vyhodnocení pravidel, která nemají podmínku, se vždy vyhodnotí jako nepravdivé.

### ProgramRules bez priority { #programrules-with-no-priority } 

Zpráva zvýrazní všechna **pravidla programu**, která nejsou nakonfigurována s **prioritou**. To je volitelné, ale jeho existence je velmi důležitá, když **ProgramRuleActionType** je **PŘIŘADIT**. Pravidla s typem akce PŘIŘADIT by měla mít vyšší prioritu než ostatní typy akcí.

### Pravidla programu bez akce { #programrules-with-no-action } 

Zpráva zvýrazní všechna **pravidla programu**, která nejsou konfigurována s žádnými **ProgramRuleAction**.

### ProgramRuleVariables bez dataElements { #programrulevariables-without-dataelements } 

V přehledu budou zvýrazněny všechny **proměnné pravidla programu**, které nejsou nakonfigurovány s **DataElement**. Zpráva bude založena na konfiguraci typu zdroje. DataElement by měl být poskytnut, když je zdrojový typ ProgramRuleVariable **DataElement**.

### ProgramRuleVariables bez atributů { #programrulevariables-without-attributes } 

Zpráva zvýrazní všechny **proměnné pravidla programu**, které nejsou nakonfigurovány pomocí **TrackedEntityAttribute**. Zpráva bude založena na konfiguraci typu zdroje. TrackedEntityAttribute by měl být poskytnut, když je zdrojový typ ProgramRuleVariable **Attribute**.

### ProgramRuleActions bez datových objektů. { #programruleactions-with-no-data-objects } 

Report will highlight all the **Program rule actions** not configured with any Data object. Data object can be either **DataElement** of **TrackedEntityAttribute**. There are certain ProgramRuleActions which are responsible for assigning values to either dataElement or trackedEntityAttribute.

### ProgramRuleActions bez oznámení { #programruleactions-with-no-notification } 

Zpráva zvýrazní všechny **akce pravidel programu**, které mají ProgramRuleActionType nastavenou na SENDMESSAGE / SCHEDULEMESSAGE, kde konfigurace neposkytuje žádný odkaz na oznámení.

### ProgramRuleActions bez ID sekce { #programruleactions-with-no-section-id } 

Zpráva zvýrazní všechny **akce pravidel programu**, které mají ProgramRuleActionType nastaveno na **HIDESECTION**, ale konfigurace neposkytuje žádné ID sekce.

### ProgramRuleActions bez ID fáze programu { #programruleactions-with-no-program-stage-id } 

Zpráva zvýrazní všechny **akce pravidel programu**, které mají ProgramRuleActionType nastaveno na **HIDEPROGRAMSTAGE**, ale konfigurace neposkytuje žádné ID fáze programu.

### Neplatný výraz indikátoru programu { #invalid-program-indicator-expression } 

Nahlásí všechna porušení výrazu indikátoru programu způsobená neplatným **DataElement** nebo neplatným **TrackedEntityAttribute**.

### Neplatný výraz filtru indikátoru programu { #invalid-program-indicator-filter-expression } 

Nahlásí všechna porušení výrazu filtru indikátoru programu způsobená neplatným **DataElement** nebo neplatným **TrackedEntityAttribute**.

## Údržba { #data_admin_maintenance }

Tabulka: Funkce údržby dat v aplikaci Správa dat

| Funkce | Popis |
|---|---|
| Vymazat analytické tabulky | Úplně vyprázdní analytické tabulky. Tyto tabulky se používají ke generování souhrnných dat pro kontingenční tabulky, GIS a sestavy. |
| Odstraňte nulové datové hodnoty | Odebere nulové datové hodnoty z databáze. Hodnoty registrované pro datové prvky s průměrem operátora agregace se neodstraňují, protože tyto hodnoty budou významné při agregaci dat, na rozdíl od hodnot registrovaných pro datové prvky se součtem operátorů agregace. <br> <br> Snížení počtu datových hodnot zlepší výkon systému. |
| Trvale odstranit rychle smazané datové hodnoty | Když je v DHIS2 vymazána datová hodnota, systém označí odpovídající řádek databáze jako smazaný a ve skutečnosti řádek neodstraní. <br> <br> Spuštění této funkce údržby fyzicky odstraní tyto řádky datových hodnot z databáze. |
| Prořezávání období | Odstraní všechna období, která nemají žádné registrované datové hodnoty. Snížením počtu období se zlepší výkon systému. |
| Odstranění pozvánek, jejichž platnost vypršela | Smaže uživatele, kteří představují pozvánky k uživatelským účtům, kterým nyní uplynulo datum vypršení platnosti. |
| Zrušení zobrazení SQL | DHIS2 umožňuje nastavit a spravovat SQL pohledy jako systémové objekty s odpovídajícími databázovými SQL pohledy. <br> <br> Spuštění této funkce údržby zruší základní pohledy SQL pro všechny systémové pohledy. K opětovnému vytvoření těchto pohledů SQL použijte funkci **Vytvořit pohledy SQL**. |
| Vytvářejte pohledy SQL | Znovu vytvoří všechny pohledy SQL v databázi. |
| Aktualizujte kombinace možností kategorií | Znovu sestaví kombinace možností kategorií. To může být vyžadováno po změně možností kategorií, které patří do dané kategorie. |
| Aktualizujte cesty organizační jednotky | Tabulka organizačních jednotek v databázi DHIS2 má sloupec "cesta", který obsahuje zřetězený řetězec všech předků v hierarchii pro každou organizační jednotku. <br> <br> Spuštěním této funkce údržby dojde k aktualizaci a zajištění synchronizace těchto hodnot s aktuální hierarchií organizačních jednotek. Tento sloupec spravuje DHIS2, ale při načítání dat přímo do databáze může být užitečná ruční aktualizace. |
| Vymažte mezipaměť aplikace | Vymaže mezipaměť systému. |
| Znovu načíst aplikace | Ručně znovu načte a detekuje nainstalované aplikace DHIS2. <br> <br> Nainstalované aplikace jsou také detekovány při spuštění systému a při instalaci nebo odinstalaci aplikací. |

## Tabulky zdrojů { #data_admin_resource_tables }

Resource tables are supporting tables that are used during analysis of
data. One would typically join the contents of these tables with the
data value table when doing queries from third-party applications like
Microsoft Excel. They are also used extensively by the analysis modules
of DHIS2. Regeneration of the resource tables should only be done once
all data integrity issues are resolved. The resource tables are also
generated automatically, every time the analytics process is run by the
system.

  - Organisation unit structure (analytics_rs_orgunitstructure)

    This table should be regenerated any time there have been any
    changes made to the organisational unit hierarchy. This table
    poskytuje informace o hierarchii organizační jednotky. Má to
    one row for each organisation unit, one column for each organisation
    unit level and the organisation unit identifiers for all parents in
    the lineage as values.

  - Data element group set structure (analytics_rs_dataelementgroupsetstructure)

    This table provides information about which data elements are
    members of which data element group sets. The table has one row for
    each data element, one column for each data element group set and
    the names of the data element group as values.

  - Indicator group set structure (analytics_rs_indicatorgroupsetstructure)

    This table provides information about which indicators are members
    of which indicator group sets. The table has one row for each
    indicator, one column for each indicator group set and the names of
    the indicator group as values.

  - Organisation unit group set structure
    (analytics_rs_organisationunitgroupsetstructure)

    This table provides information about which organisation units are
    members of which organisation unit group sets. The table has one row
    for each organisation unit, one column for each organisation unit
    group set and the names of the organisation unit groups as values.

  - Category structure (analytics_rs_categorystructure)

    This table provides information about which data elements are
    members of which categories. The table has one row for each data
    element, one column for each category and the names of the category
    options as values.

  - Data element category option combo name (analytics_rs_categoryoptioncomboname)

    This table should be regenerated any time there have been changes
    made to the category combination names. It contains readable names
    for the various combinations of categories.

  - Data element structure (analytics_rs_dataelementstructure)

    This table provides information about all data elements and which
    period type (frequency) they capture data at. The period type is
    determined through the data set membership and hence relies on data
    elements to be member of data sets with similar period types to have
    a defined behaviour.

  - Date periods structure (analytics_rs_dateperiodstructure)

    This table provides information about all periods and which period
    type they are associated with. For each period type with lower
    frequency than itself, it contains information about which period it
    will fall within.

  - Periods structure (analytics_rs_periodstructure)

    Similar to `analytics_rs_dateperiodstructure`, containing a scoped set of
    periods more adapted for aggregated analytics.
    It's based on `period` and `periodtype` tables.

  - Data element category option combinations
    (analytics_rs_dataelementcategoryoptioncombo)

    This table provides a mapping between data elements and all possible
    category option combinations.

  - Data set organisation unit category (analytics_rs_datasetorganisationunitcategory)

    This table provides information related to data sets, organisation units
    and its category option combinations associated. If no association is found,
    it uses the default category option combo.


## Správa analytických tabulek { #data_admin_analytics_tables }

DHIS2 generates database tables which the system then uses as basis for
various analytics functions. These tables are also valuable if you write
advanced SQL reports. In the **Data Administration** app, you can execute the tables
generation immediately. If you want to schedule them to be executed at regular intervals,
this can be done in the **Scheduler** app. This means that you can refresh recent analytics on
demand and see updated pivot tables without waiting for all of the past years data to
re-process.

> **Note**
>
> You can also generate the tables through the web API. This task is
> typically performed by a system administrator.

1.  Otevřete aplikaci **Správa dat** a klikněte na **Tabulky Analytiky**.

2.  Vyberte části analytického procesu, které chcete přeskočit:

      - **Přeskočit generování tabulek zdrojů**

      - **Přeskočit generování souhrnných údajů a údajů o úplnosti**

      - **Přeskočit generování údajů o událostech**

      - **Přeskočit generování dat o zápisu**

      - **Skip generation of organisation unit ownership data**

3.  Select **Number of last years of data to include**.  (If 0 is selected,
then you will run latest or continuous analytics, as defined in
[Continuous analytics table](scheduling.html#scheduling_continuous_analytics_table).)

4.  Klikněte na **Zahájit export**.

## Data statistics { #data_admin__data_statistics }

The data statistics module provides an overview of the number of objects
stored in the DHIS2 database.


![](resources/images/maintenance/data_stats.png)

The total number of each type of object is presented in a series of
tables with summary statistics of each object.

## Lock exceptions { #data_admin__lock_exception }

Lock exceptions provide fine-grained control over exemption from a
locked data set. After the expiry of the data set, data entry will be
denied by default, unless an exception has been granted through the Lock
exception interface.

### Adding a lock exception { #adding-a-lock-exception } 

By granting a lock exception, data entry will be enabled even after the
expiry period of the data set has passed.

1. Otevřete aplikaci **Správa dat** a klikněte na **Zamknout výjimku**.
2. Klikněte na **Přidat výjimku zámku** v horní části stránky
3. Select the desired data set, organisation units and time period (see
   screenshot below)
4. Klikněte na **Přidat výjimku zámku**

![](resources/images/maintenance/create_lock_exception.png)

In the example above, a data lock exception would be created for "Bo" for the
"ART monthly summary" dataset for "February 2014".

In order to run this function, no extra authority is needed.

## Generování min-max hodnoty { #data_admin_min_max_value_generation }

This administrative function can be used to generate min-max values,
which are used as part of the data quality and validation process for
specific organization units and data sets. Simply select the dataset
from the left hand frame, and then select the required organisation
units to generate the min-max values for from the organisational units
selector on the right. Press the "Generate" button to generate or
regenerate all min-max values. Press "Remove" to remove all min-max
values which are currently stored in the database. In order to run this
function, the user MUST have the authority `F_GENERATE_MIN_MAX_VALUES`.

![](resources/images/maintenance/min_max_value_generation.png)

## Statistika mezipaměti { #data_admin_cache_statistics }

This option is for system administrators only to use. The cache
statistics shows the status of the application level cache. The
application level cache refers to the objects and query results that the
application is caching in order to speed up performance. If the database
has been modified directly the application cache needs to be cleared for
it to take effect.

