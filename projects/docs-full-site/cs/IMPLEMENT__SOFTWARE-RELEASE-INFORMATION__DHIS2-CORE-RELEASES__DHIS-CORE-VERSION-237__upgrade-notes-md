---
edit_url: "https://github.com/dhis2/dhis2-releases/blob/master/releases/2.37/README.md"
revision_date: '2023-08-30'
tags:
- Implementace
- DHIS core verze 2.37
---

# 2.37 Upgrade Notes { #237-upgrade-notes } 

> :warning: **Please ensure you have read the upgrade notes from the [PREVIOUS RELEASE](../2.36/README.md), if upgrading from an earlier version**

## Databáze { #database } 

## API { #api } 

- Koncový bod API `/api/userCredentials` je odstraněn. Uživatelé API by měli místo toho používat koncové body API `/api/users` a `/api/userLookup`.
- Rozhraní API související s grafy (`/api/charts`) a tabulkami sestav (`/api/reportTables`) jsou odstraněny. Spotřebitelé by místo toho měli používat Visualization API (`/api/visualizations`). Další existující koncové body, které odkazují na graf a tabulku sestav, budou nyní odkazovat na vizualizaci.

## Authorities { #authorities } 

- Ke generování minimálních a maximálních hodnot v aplikaci pro správu dat je nyní vyžadováno stávající oprávnění `F_GENERATE_MIN_MAX_VALUES`. Dříve bylo vyžadováno `F_PERFORM_MAINTENANCE` .
- Vytváření úrovní schválení dat vyžaduje oprávnění `F_DATA_APPROVAL_LEVEL`.
- Vytváření pracovních postupů schvalování dat vyžaduje oprávnění `F_DATA_APPROVAL_WORKFLOW`.

## Audit { #audit } 

In 2.38 we will be changing the default location of audits from the database to a logfile called `dhis-audits.log`. If you don't want this
behavior and want to be futureproof it's recommended that you add these lines to your `dhis.conf`:

```
audit.database = on
audit.logger = off
```

## Patch-specific Changes { #patch-specific-changes } 

### 2.37.5 { #2375 } 
- `GET /systemSettings` vracející JSONP (`Accept=application/javascript`) byl odstraněn

## Future API changes { #future-api-changes } 
Please note that from 2.38 onwards several API endpoints slightly change
their response root object to be in line with the majority of endpoints.
The root object returned pre 2.38 will become the member named `response`
of the root object returned by 2.38. Consumers can opt to either use
`/api/37/...` to get the old behaviour or have to unpack to new response
by doing `<root>.response` to resolve the old root from the 2.38 response.
In case of error responses this also entails an HTTP status code change from `200 OK` to `409 Conflict`.

Dotčené koncové body jsou:

- `POST /api/completeDataSetRegistrations` with `JSON`/`XML` (only non `async` affected)
- `POST /api/dataValueSets` with `JSON`/`XML`/`ADX`/`CSV` (only non `async` affected)
- `POST /api/metadata` with `JSON`/`XML`/`GML`/`CSV` (only non `async` affected)
- `POST /api/predictions` (only non `async` affected)
- `PUT /api/predictions` (only non `async` affected)
- `PUT /api/relationships/{id}`
- `PUT /api/users/{uid}` with `JSON`/`XML`

## Migrations (Chart and ReportTable) { #migrations-chart-and-reporttable } 

Depending on the DHIS2 version you're updating from, you may face migration issues/errors related to the removal of ReportTable and Chart tables.
The failure could be caused by tables that are still present in very old versions of DHIS2. Even though they are not in usage they might still be referenced.
This will cause errors when the migration scripts try to remove ReportTable and Chart tables because of the constraints present in those legacy tables.
More details related to this issue can be found at https://jira.dhis2.org/browse/DHIS2-12601

Once those problems are identified and confirmed, a few legacy tables need to be dropped before attempting the migration to DHIS2 2.37.

Below we list the SQL statements that need to be executed directly in your PostgreSQL instance. These SQL statements are applicable if your starting DHIS 2 version is between 2.24 and 2.31 (inclusive).

```
DROP TABLE IF EXISTS charttranslations CASCADE;
DROP TABLE IF EXISTS reporttabletranslations CASCADE;
DROP TABLE IF EXISTS dashboarditem_reporttables CASCADE;
DROP TABLE IF EXISTS dashboarditem_charts CASCADE;
```

Assuming the statements are successfully executed you will be able to try the upgrade again.

