---
edit_url: "https://github.com/dhis2/dhis2-docs/blob/2.35/src/commonmark/en/content/user/what-is-dhis2.md"
---

# Co je DHIS2?

<!--DHIS2-SECTION-ID:what_is_dhis2-->

Po přečtení této kapitoly budete schopni porozumět:

  - Co je DHIS2 a k jakému účelu slouží s ohledem na zdraví
    informační systémy (HIS)?

  - Jaké jsou hlavní technologické aspekty, pokud jde o
    nasazení DHIS2 a jaké jsou možnosti rozšíření DHIS2
    s novými moduly?

  - Jaký je rozdíl mezi údaji o pacientech a souhrnnými údaji?

  - Jaké jsou některé výhody a výzvy spojené s používáním bezplatných a
    Open Source Software (FOSS) pro HIS?

## Pozadí DHIS2

<!--DHIS2-SECTION-ID:mod1_1-->

DHIS2 je nástroj pro shromažďování, ověřování, analýzu a prezentaci souhrnných statistik a údajů o pacientech, přizpůsobených (ale bez omezení) na integrované činnosti správy zdravotních informací. Jedná se spíše o obecný nástroj než o předem nakonfigurovanou databázovou aplikaci s otevřeným metadatovým modelem a flexibilním uživatelským rozhraním, které uživateli umožňuje navrhovat obsah konkrétního informačního systému bez nutnosti programování. DHIS2 je modulární webový softwarový balíček vytvořený pomocí bezplatných a otevřených frameworků Java.

DHIS2 je software s otevřeným zdrojovým kódem vydaný na základě licence BSD a lze jej získat bez nákladů. Běží na jakékoli platformě s nainstalovaným Java Runtime Environment (JRE 7 nebo vyšším).

DHIS2 je vyvíjen programem Health Information Systems Program (HISP) jako otevřený a globálně distribuovaný proces s vývojáři v současné době v Indii, Vietnamu, Tanzanii, Irsku a Norsku. Vývoj koordinuje univerzita v Oslu s podporou NORAD a dalších dárců.

Software DHIS2 se používá ve více než 40 zemích v Africe, Asii a Latinské Americe a mezi země, které přijaly DHIS2 jako svůj celostátní software HIS, patří Keňa, Tanzanie, Uganda, Rwanda, Ghana, Libérie a Bangladéš. Rychle rostoucí počet zemí a organizací zahajuje nová nasazení.

Dokumentace poskytnutá tímto způsobem se pokusí poskytnout komplexní přehled o aplikaci. Vzhledem k abstraktní povaze aplikace nebude tato příručka sloužit jako kompletní podrobný návod, jak aplikaci používat za všech okolností, ale bude se snažit poskytnout ilustrace a příklady toho, jak lze DHIS2 implementovat v různé situace prostřednictvím zobecněných příkladů.

Před implementací DHIS2 v novém nastavení důrazně doporučujeme přečíst si Průvodce implementací DHIS2 (samostatný manuál od tohoto), který je také k dispozici na hlavní stránce DHIS2 [web](http://dhis2.org/documentation/).

## Klíčové vlastnosti a účel DHIS2

Klíčové vlastnosti a účel DHIS2 lze shrnout takto:

  - Poskytuje komplexní řešení správy dat založené na datech
    skladové principy a modulární struktura, která může být snadno
    přizpůsobená různým požadavkům na manažerské informace
    systém, podporující analýzu na různých úrovních
    organizační hierarchie.

  - Přizpůsobení a místní přizpůsobení prostřednictvím uživatelského rozhraní. Ne
    programování potřebné k zahájení používání DHIS2 v novém nastavení (země,
    kraj, okres atd.).

  - Poskytuje nástroje pro zadávání dat, které mohou být buď ve standardní formě
    seznamy nebo tabulky, nebo je lze upravit tak, aby replikovaly papírové formuláře.

  - Poskytujte různé druhy nástrojů pro ověřování a zlepšování dat
    a kvality dat.

  - Poskytujte snadné použití – sestavy s grafy a tabulkami na jedno kliknutí
    vybrané indikátory nebo souhrnné zprávy s využitím
    nástrojů na shromáždění dat. Umožňuje integraci s oblíbenými externími
    nástroji na návrh reportů (např. JasperReports) pro přidání dalších vlastních nebo pokročilých
    zpráv.

  - Flexibilní a dynamickou (on-the-fly) analýzu dat v analytice
    moduly (tj. GIS, kontingenční tabulky, vizualizér dat, sestavy událostí atd.).

  - Uživatelsky specifický ovládací panel pro rychlý přístup k relevantní
    nástroje pro monitorování a hodnocení včetně grafů ukazatelů a odkazů
    na oblíbené zprávy, mapy a do dalších klíčových zdrojů v systému.

  - Snadno použitelná uživatelská rozhraní pro správu metadat, např. pro
    přidávání/úpravu datových sad nebo zdravotnických zařízení. Není potřeba žádné programování
    pro nastavení systému v novém nastavení.

  - Funkce pro návrh a úpravu vypočítaných vzorců indikátorů.

  - Modul pro správu uživatelů pro hesla, zabezpečení a jemné detaily
    řízení přístupu (uživatelské role).

  - Uživatelům systému lze zasílat zprávy pro zpětnou vazbu a upozornění.
    Zprávy lze také doručovat na e-mail a SMS.

  - Uživatelé mohou sdílet a diskutovat o svých datech v grafech a sestavách pomocí
    Interpretace, umožňující aktivního uživatele řízeného informacemi
    společenství.

  - Funkce export-import dat a metadat, podpora
    synchronizace offline instalací a také interoperabilita
    s jinými aplikacemi.

  - Použití DHIS2 Web-API umožňuje integraci s externími
    software a rozšíření základní platformy prostřednictvím použití
    vlastními aplikacemi.

  - Další moduly lze vyvíjet a integrovat podle potřeb uživatele,
    buď jako součást uživatelského rozhraní portálu DHIS2 nebo více
    volně propojenými externími aplikacemi interagujícími prostřednictvím DHIS2
    Webové API.

Stručně řečeno, DHIS2 poskytuje komplexní HIS řešení pro potřeby zpráv a analýz uživatelů zdravotních informací na jakékoli úrovni.

## Použití DHIS2 v HIS: sběr, zpracování, interpretace a analýza dat.

Širší kontext HIS lze komplexně popsat prostřednictvím informačního cyklu uvedeného na obrázku 1.1 níže. Informační cyklus obrazně zobrazuje různé komponenty, fáze a procesy, jejichž prostřednictvím jsou data shromažďována, kontrolována jejich kvalita, zpracovávána, analyzována a používána.


![Cyklus zdravotních informací](resources/images/dhis2UserManual/dhis2_information_cycle.png)

DHIS2 podporuje různé aspekty informačního cyklu, včetně:

  - Sbírání dat.

  - Provádění kontroly kvality.

  - Přístup k datům na více úrovních.

  - Hlášení.

  - Tvorba grafů a map a dalších forem analýzy.

  - Povolení srovnání v čase (například předchozí měsíce) a
    prostoru (například napříč zařízeními a okresy).

  - Zobrazení trendů (zobrazení dat v časových řadách pro zobrazení jejich min. a max
    úrovní).

Jako první krok slouží DHIS2 jako nástroj pro sběr, záznam a kompilaci dat, do kterého lze zadávat všechna data (ať už v číslech nebo v textové podobě). Zadávání dat lze provádět v seznamech datových prvků nebo v přizpůsobených uživatelsky definovaných formulářích, které lze vyvinout tak, aby napodobovaly papírové formuláře, aby se usnadnil proces zadávání dat.

Jako další krok lze DHIS2 použít ke zvýšení kvality dat. Nejprve v místě zadávání dat lze provést kontrolu, zda data spadají do přijatelných úrovní minimálních a maximálních hodnot pro jakýkoli konkrétní datový prvek. Taková kontrola například může pomoci identifikovat překlepy v době zadávání dat. Uživatel může dále definovat různá ověřovací pravidla a server DHIS2 může data spouštět prostřednictvím ověřovacích pravidel k identifikaci porušení. Tyto typy kontrol pomáhají zajistit, aby data zadaná do systému byla od samého začátku kvalitní a mohla by být vylepšena lidmi, kteří jej nejvíce znají.

Po zadání a ověření dat může DHIS2 pomoci vytvářet různé druhy zpráv. Prvním typem jsou zprávy o rutinách, které lze předdefinovat, takže všechny zprávy, které je třeba generovat, lze provést kliknutím na tlačítko. DHIS2 může dále pomoci při generování analytických zpráv prostřednictvím srovnání například indikátorů napříč zařízeními nebo v průběhu času. Grafy, mapy, zprávy a zdravotní profily patří mezi výstupy, které může DHIS2 produkovat, a ty by měly být rutinně vytvářeny, analyzovány a reagovány zdravotními manažery.

## Technické zázemí

### DHIS2 jako platforma

DHIS2 lze vnímat jako platformu na několika úrovních. Za prvé, aplikační databáze je navržena od základu s ohledem na flexibilitu. Datové struktury, jako jsou datové prvky, organizační jednotky, formuláře a uživatelské role, lze definovat zcela volně prostřednictvím uživatelského rozhraní aplikace. To umožňuje, aby byl systém přizpůsoben mnoha kontextům prostředí a případům použití. Viděli jsme, že DHIS2 podporuje většinu hlavních požadavků na rutinní sběr dat a analýzu, které se objevují v implementacích zemí. Umožňuje také, aby DHIS2 sloužil jako systém pro správu domén jako logistika, laboratoře a finance.

Za druhé, díky modulární konstrukci DHIS2 je možné jej rozšířit o další softwarové moduly nebo prostřednictvím vlastních aplikací. Tyto softwarové moduly / aplikace mohou žít bok po boku s jádrovými moduly DHIS2 a lze je integrovat do portálu a systému nabídek DHIS2. Jedná se o výkonnou funkci, protože v případě potřeby umožňuje rozšířit systém o další funkce, obvykle pro specifické požadavky dané země, jak již bylo uvedeno výše.

Nevýhodou rozšiřitelnosti softwarového modulu je to, že klade několik omezení na vývojový proces. Vývojáři, kteří vytvářejí další funkce, jsou kromě omezení kladených na design modulů portálovým řešením DHIS2 omezeni na technologii DHIS2, pokud jde o programovací jazyk a softwarové frameworky. Tyto moduly musí být také zahrnuty do softwaru DHIS2, když je software vytvořen a nasazen na webovém serveru, nikoli dynamicky během běhu.

Aby bylo možné překonat tato omezení a dosáhnout volnějšího propojení mezi servisní vrstvou DHIS2 a dalšími softwarovými artefakty, bylo jako součást DHIS2 vyvinuto API založené na REST. Toto webové rozhraní API odpovídá pravidlům architektonického stylu REST. To znamená, že:

  - Web API poskytuje navigovatelné a strojově čitelné rozhraní
    kompletní datový model DHIS2. Například je možné získat úplný přístup
    seznam datových prvků a poté pomocí poskytnuté adresy URL přejděte na
    konkrétní datový prvek, který vás zajímá, a poté procházejte pomocí
    poskytnuté adresy URL seznamu datových sad, v kterých je datový prvek
    členem.

  - (Meta) Data jsou přístupná přes jednotné rozhraní (URL) pomocí
    prosté požadavky HTTP. Neexistují žádné vymyšlené transportní formáty nebo
    zapojené protokoly – jen dobře otestovaný a srozumitelný HTTP
    protokol, který je dnes hlavním stavebním kamenem webu. To
    znamená, že vývojáři třetích stran mohou vyvíjet software pomocí
    Datový model a data DHIS2 bez znalosti specifik DHIS2 2
    technologie nebo splňující omezení návrhu DHIS2.

  - Veškerá data včetně metadat, zpráv, map a grafů, známá jako
    zdroje v terminologii REST, lze získat ve většině
    oblíbených reprezentačních formátů dnešního webu, jako je XML,
    JSON, PDF a PNG. Tyto formáty jsou široce podporovány v
    aplikace a programovací jazyky a poskytuje třetí strany
    a dává vývojářům širokou škálu možností implementace.

### Pochopení nezávislosti platformy

Všechny počítače mají operační systém (OS), který jej spravuje, a programy, které jej spouští. Operační systém slouží jako střední vrstva mezi softwarovou aplikací, jako je DHIS2, a hardwarem, jako je CPU a RAM. DHIS2 běží na virtuálním počítači Java, a proto může běžet na jakémkoli operačním systému, který podporuje Javu. Nezávislost na platformě znamená, že softwarová aplikace může běžet na JAKÉMKOLI OS - Windows, Linux, Macintosh atd. DHIS2 je nezávislý na platformě, a proto jej lze použít v mnoha různých kontextech v závislosti na přesných požadavcích použitého operačního systému.

DHIS2 navíc podporuje tři hlavní systémy systémů pro správu databází (DBMS). DHIS2 používá rámec abstrakce databáze Hibernate a je kompatibilní s následujícími databázovými systémy: PostgreSQL, MySQL a H2. PostgreSQL a MySQL jsou vysoce kvalitní databáze připravené na produkci, zatímco H2 je užitečná databáze v paměti pro malé aplikace nebo vývojové aktivity.

A konečně, a možná nejdůležitější, protože DHIS2 je aplikace založená na prohlížeči, jediným skutečným požadavkem na interakci se systémem je webový prohlížeč. DHIS2 podporuje většinu webových prohlížečů, i když v současné době se doporučuje buď Google Chrome, Mozilla Firefox nebo Opera.

### Strategie nasazení - online vs. offline

DHIS2 je aplikace podporující síť a lze k ní přistupovat přes internet, místní intranet i místně nainstalovaný systém. Alternativy nasazení pro DHIS2 jsou v této kapitole definovány jako i) offline nasazení ii) online nasazení a iii) hybridní nasazení. Význam a rozdíly budou popsány v následujících částech.

#### Offline nasazení

Offline nasazení znamená, že je pro koncové uživatele nainstalováno více samostatných offline instancí, obvykle na úrovni okresu. Systém je primárně udržován koncovými uživateli / okresními zdravotníky, kteří zadávají data a generují zprávy ze systému běžícího na jejich lokálním serveru. Systém bude také obvykle udržován národním týmem superuživatelů, kteří pravidelně navštěvují okresní nasazení. Data jsou v hierarchii posouvána nahoru koncovými uživateli, kteří vytvářejí soubory pro výměnu dat, které jsou zasílány elektronicky e-mailem nebo fyzicky poštou nebo osobním cestováním. (Upozorňujeme, že krátké připojení k internetu vyžadované pro odesílání e-mailů nesplňuje podmínky pro definování jako online). Tento styl nasazení má zjevnou výhodu, že funguje, když není k dispozici vhodné připojení k internetu. Na druhé straně jsou s tímto stylem významné výzvy, které jsou popsány v následující části.

  - **Hardware:** Provoz samostatných systémů vyžaduje pokročilý hardware
    pokud jde o servery a spolehlivé napájení, které mají být instalovány,
    obvykle na okresní úrovni, po celé zemi. To vyžaduje
    adekvátní finanční prostředky na nákup a dlouhodobý plán
    údržby.

  - **Softwarová platforma:** Místní instalace vyžaduje značnou potřebu
    údržby. Ze zkušenosti jsou největší výzvou viry a
    jiný malware, který má tendenci infikovat místní instalace v systému Windows
    dlouhý běh. Hlavním důvodem je, že koncoví uživatelé používají paměťové karty
    pro přenos souborů výměny dat a dokumentů mezi soukromými
    počítače, další pracovní stanice a systém, na kterém je spuštěno
    aplikacemi. Vedení antivirového softwaru a záplat operačního systému
    aktuální v off-line prostředí jsou náročné a
    koncoví uživatelé často přebírají špatné postupy z hlediska bezpečnosti.
    Upřednostňovaným způsobem, jak překonat tento problém, je spustit vyhrazený
    server pro aplikaci, kde nejsou povoleny žádné paměťové karty a
    používat operační systém založený na Linuxu, který není tak náchylný k virům
    oparační systém jako MS Windows.

  - **Softwarová aplikace:** Možnost distribuovat nové funkce
    a opravy chyb v softwaru zdravotních informací pro uživatele
    jsou nezbytné pro údržbu a zlepšování systému. Spoléhat se na
    koncové uživatelé k provádění aktualizací softwaru vyžadují rozsáhlé
    školení a vysokou úroveň kompetencí na jejich straně jako modernizace
    softwarové aplikace mohou být technicky náročným úkolem. Spoléhání
    v národním superuživatelském týmu pro údržbu softwaru znamená hodně
    cestování.

  - **Údržba databáze:**Předpokladem pro efektivní systém je
    že všichni uživatelé zadávají data se standardizovaným souborem metadat (data
    elements, forms etc). As with the previous point about software
    upgrades, distribution of changes to the meta-data set to numerous
    off-line installations requires end user competence if the updates
    are sent electronically or a well-organized super-user team. Failure
    to keep the meta-data set synchronized will lead to loss of ability
    to move data from the districts and/or an inconsistent national
    databázi od data zadávaných např. na okresní úrovni
    will not be compatible with the data at the national level.

#### Online nasazení

On-line nasazení znamená, že na serveru připojeném k Internetu je nastavena jedna instance aplikace. Všichni uživatelé (klienti) se připojují k on-line centrálnímu serveru přes internet pomocí webového prohlížeče. Tento styl nasazení je stále více možný díky celosvětově zvýšené dostupnosti (mobilního) internetového pokrytí a snadno dostupným a levným cloudovým výpočetním prostředkům. Tento vývoj umožňuje přístup k online serverům i ve venkovských oblastech pomocí mobilních internetových modemů (označovaných také jako *dongly*).

Tento styl nasazení online má obrovské pozitivní důsledky pro proces implementace a údržbu aplikace ve srovnání s tradičním off-line samostatným stylem:

  - **Hardware:** Hardwarové požadavky na straně koncového uživatele jsou omezené
    to a reasonably modern computer/laptop and Internet connectivity
    přes pevnou linku nebo mobilní modem. Není potřeba 
    specializovaný server pro každého uživatele, bude mít jakýkoli počítač s připojením k internetu
    be sufficient. A server will be required for on-line deployments,
    but since there is only one (or several) servers which need to be
    je pořizovat a udržovat, je to výrazně jednodušší (a levnější)
    than maintaining many separate servers is disparate locations. Given
    that cloud-computing resources continue to steadily decrease in
    price while increasing in computational power, setting up a powerful
    server in the cloud is far cheaper than procuring hardware.

  - **Software platform:** The end users only need a web browser to
    connect to the on-line server. All popular operating systems today
    are shipped with a web browser and there is no special requirement
    on what type or version. This means that if severe problems such as
    virus infections or software corruption occur one can always resort
    to re-formatting and installing the computer operating system or
    získat nový počítač/notebook. Uživatel může pokračovat v zadávání dat
    where it was left and no data will be lost.

  - **Softwarová aplikace:** Styl nasazení centrálního serveru znamená
    že aplikaci lze upgradovat a udržovat centralizovaně
    móda. Když jsou vydány nové verze aplikací s novými
    funkce a opravy chyb, které lze nasadit do jediného on-line
    server. All changes will then be reflected on the client side the
    next time end users connect over the Internet. This obviously has a
    obrovský pozitivní dopad na proces zlepšování systému jako nového
    features can be distributed to users immediately, all users will be
    accessing the same application version, and bugs and issues can be
    sorted out and deployed on-the-fly.

  - **Database maintenance:**Similar to the previous point, changes to
    metadata lze provádět na on-line serveru centralizovaně
    fashion and will automatically propagate to all clients next time
    they connect to the server. This effectively removes the vast issues
    related to maintaining an upgraded and standardized meta-data set
    related to the traditional off-line deployment style. It is
    velmi pohodlné například během počáteční databáze
    development phase and during the annual database revision processes
    as end users will be accessing a consistent and standardized
    database even when changes occur frequently.

Tento přístup může být problematický v případech, kdy je připojení k internetu nestabilní nebo chybí po dlouhou dobu. DHIS2 má však určité funkce, které vyžadují, aby připojení k internetu bylo k dispozici pouze po část času, aby systém správně fungoval, například offline zadávání dat. Obecně však DHIS2 vyžaduje nějaké připojení k internetu, ale toto je stále snadnější problém vyřešit i na vzdálených místech.

#### Hybridní nasazení

Z dosavadní diskuse si člověk uvědomí, že styl nasazení online je příznivější než styl offline, ale vyžaduje slušné připojení k internetu tam, kde bude použit. Je důležité si všimnout, že uvedené styly mohou společně existovat v běžném nasazení. Je naprosto možné mít online i offline nasazení v jedné zemi. Obecným pravidlem by bylo, že okresy a zařízení by měly do systému přistupovat on-line přes internet, kde existuje dostatečné připojení k internetu, a off-line systémy by měly být nasazeny do okresů, kde tomu tak není.

Přesné definování slušného připojení k internetu je těžké, ale zpravidla by rychlost stahování měla být minimálně 10 Kbyte / s pro klienta a minimálně 1 Mbit / s (vyhrazená) šířka pásma pro server.

V tomto ohledu jsou modemy mobilního internetu, které lze připojit k počítači nebo notebooku a přistupovat k mobilní síti, mimořádně schopným a proveditelným řešením. Pokrytí mobilního internetu po celém světě rychle roste, často poskytuje vynikající připojení za nízké ceny a je skvělou alternativou k místním sítím a špatně udržovaným pevným internetovým linkám. Kontakt s národními společnostmi v oblasti mobilních sítí, pokud jde o předplacené předplatné a potenciální výhody velké objednávky, může být užitečné. Při rozhodování, jaký přístup k nasazení zvolit, protože by se mohl lišit a pokrýt různé části země, by mělo být prozkoumáno pokrytí sítě každého provozovatele sítě v příslušné zemi.

#### Server hosting

Přístup online nasazení vyvolává otázku, kde a jak hostovat server, na kterém bude spuštěna aplikace DHIS2. Obvykle existuje několik možností:

1.  Interní hosting v rámci ministerstva zdravotnictví

2.  Hostování v rámci vládního datového centra

3.  Hostování prostřednictvím externí hostingové společnosti

Hlavním důvodem pro výběr první možnosti je často politická motivace k „fyzickému vlastnictví“ databáze. Mnozí to považují za důležité pro „vlastnictví“ a kontrolu dat. Existuje také přání vybudovat místní kapacitu pro správu serveru související s udržitelností projektu. Často jde o iniciativy dárců, protože jsou vnímány jako konkrétní a užitečné poslání.

Pokud jde o druhou možnost, na některých místech je vybudováno vládní datové centrum s cílem podporovat a zlepšovat využívání a přístupnost veřejných dat. Dalším důvodem je, že šíření interních serverových prostředí je velmi náročné na zdroje a je efektivnější vytvořit centralizovanou infrastrukturu a kapacitu.

Pokud jde o externí hosting, v poslední době dochází k posunu směrem k outsourcingu provozu a správy počítačových zdrojů u externího poskytovatele, kde jsou tyto zdroje přístupné přes síť, populárně označované jako „cloud computing“ nebo „software jako služba“. K těmto zdrojům se obvykle přistupuje přes internet pomocí webového prohlížeče.

Primárním cílem nasazení online serveru je zajistit dlouhodobě stabilní a vysoce výkonnou dostupnost zamýšlených služeb. Při rozhodování, kterou možnost zvolit pro prostředí serveru, je třeba vzít v úvahu mnoho aspektů:

1.  Lidská kapacita pro správu a provoz serveru. Musí
    be human resources with general skills in server administration and
    in the specific technologies used for the application providing the
    služby. Příkladem takových technologií jsou webové servery a databáze
    management platforms.

2.  Reliable solutions for automated backups, including local off-server
    and remote backup.

3.  Stabilní připojení a velká šířka pásma sítě pro provoz do a
    from the server.

4.  Stabilní napájení včetně záložního řešení.

5.  Bezpečné prostředí pro fyzický server ohledně problémů, jako je např
    access, theft and fire.

6.  Presence of a disaster recovery plan. This plan must contain a
    realistic strategy for making sure that the service will be only
    krátké prostoje v případě selhání hardwaru,
    network downtime and more.

7.  Proveditelný, výkonný a robustní hardware.

Aby bylo možné vytvořit vhodné hostitelské prostředí, musí být pokryty všechny tyto aspekty. Hardwarový požadavek je záměrně kladen na poslední místo, protože existuje jasná tendence věnovat mu příliš mnoho pozornosti. 

Když se podíváme zpět na tři hlavní možnosti hostování, zkušenosti z implementačních misí v rozvojových zemích naznačují, že všechny aspekty hostingu jsou zřídka přítomny v možnosti jedna a dvě na proveditelné úrovni. Dosažení přijatelné úrovně ve všech těchto aspektech je náročné z hlediska lidských zdrojů i peněz, zejména ve srovnání s náklady na možnost tři. Má tu výhodu, že se přizpůsobuje zmíněným politickým aspektům a budování místních kapacit pro správu serverů, na druhou stranu to lze zajistit alternativními způsoby.

Možnost tři - externí hosting - má tu výhodu, že podporuje všechny zmíněné aspekty hostingu za velmi přijatelnou cenu. Několik poskytovatelů hostingu - virtuálních serverů nebo softwaru jako služby - nabízí spolehlivé služby pro provozování většiny druhů aplikací. Příkladem takových poskytovatelů jsou [Linode](http://www.linode.com) a [Amazon Web Services](http://aws.amazon.com). Ke správě těchto serverů dochází přes síťové připojení, což je nejčastěji případ správy místních serverů. Fyzické umístění serveru se v tomto případě stává irelevantní, protože tito poskytovatelé nabízejí služby ve většině částí světa. Toto řešení se stále více stává standardním řešením pro hostování aplikačních služeb. Aspekt budování místní kapacity pro správu serveru je s touto možností kompatibilní, protože místní tým ICT může mít za úkol udržovat externě hostovaný server, ale nemusí být zatížen obavami z omezení napájení a šířky pásma, které obvykle existují mimo hlavní datová centra.

Přístup ke kombinování výhod externího hostování s potřebou místního hostingu a fyzického vlastnictví spočívá v použití externího poskytovatele hostingu pro primární transakční systém při zrcadlení tohoto serveru na nekritický lokálně hostovaný server, který se používá jen pro čtení. účely, jako je analýza dat a přístup přes intranet.

## Rozdíl mezi agregovanými a pacientskými daty v HIS

*Údaje o pacientovi* jsou údaje týkající se jednoho pacienta, jako je jeho diagnóza, jméno, věk, dřívější anamnéza atd. Tyto údaje jsou obvykle založeny na interakci jednoho pacienta se zdravotníkem. Například, když pacient navštíví kliniku zdravotní péče, mohou být zaznamenány různé podrobnosti, jako je teplota pacienta, jeho hmotnost a různé krevní testy. Pokud by byl u tohoto pacienta diagnostikován „nespecifikovaný nedostatek vitaminu B12“ odpovídající ICD-10 kódu D51.9, mohla by se tato konkrétní interakce nakonec zaznamenat jako instance „anémie“ v agregovaném systému. Data založená na pacientovi jsou důležitá, pokud chcete podélně sledovat postup pacienta v průběhu času. Například pokud chceme sledovat, jak se pacient drží a reaguje na proces léčby tuberkulózy (obvykle probíhá po dobu 6-9 měsíců), potřebovali bychom údaje o pacientovi.

*Agregovaná data* jsou konsolidací údajů týkajících se více pacientů, a proto je nelze vysledovat zpět ke konkrétnímu pacientovi. Jsou to pouze počty, jako je výskyt malárie, tuberkulózy nebo jiných nemocí. Rutinní data, se kterými se zdravotnické zařízení zabývá, jsou obvykle tento druh agregovaných statistik a používají se pro generování rutinních zpráv a indikátorů, a co je nejdůležitější, strategické plánování v rámci zdravotního systému. Souhrnná data nemohou poskytnout typ podrobných informací, které mohou údaje na úrovni pacienta poskytnout, ale jsou zásadní pro plánování a vedení výkonu systémů zdravotní péče.

Mezi těmito dvěma údaji máte případová data nebo anonymní data "pacienta". O konkrétní zdravotní události lze shromáždit mnoho podrobností, aniž by bylo nutné identifikovat pacienta, kterého se to týká. Ambulantní nebo ambulantní návštěvy, nový případ cholery, úmrtí matky atd. Jsou běžné případy použití, kdy by člověk chtěl shromáždit mnohem více podrobností, než jen přidat k celkovému počtu případů nebo návštěv. Tyto údaje se často shromažďují v řádkových formulářích formulářů nebo v podrobnějších formulářích auditu. Liší se od agregovaných dat v tom smyslu, že obsahuje mnoho podrobností o konkrétní události, zatímco agregovaná data by počítala, kolik událostí určitého typu, např. kolik ambulantních návštěv s hlavní diagnózou „malárie“ nebo kolik úmrtí matek, kde se zesnulý neúčastnil ANC, nebo kolik ohnisek cholery u dětí do 5 let. V DHIS2 jsou tato data shromažďována prostřednictvím programů typu single event bez registrace.

Údaje o pacientech jsou vysoce důvěrné, a proto musí být chráněny, aby je nemohl získat nikdo jiný než lékaři. Pokud je na papíře, musí být řádně uložen na bezpečném místě. U počítačů potřebují data pacientů zabezpečené systémy s hesly, omezeným přístupem a protokoly auditu.

Obavy o bezpečnost agregovaných dat nejsou tak zásadní jako pro údaje o pacientech, protože je obvykle nemožné určit konkrétní osobu podle souhrnné statistiky. Data však mohou být i nadále zneužívána a dezinterpretována ostatními a neměla by být distribuována bez zavedených odpovídajících zásad šíření dat.

## Free and Open Source Software (FOSS): výhody a výzvy

Software nese pokyny, které sdělují počítači, jak má pracovat. Lidmi vytvořená a člověkem čitelná forma těchto pokynů se nazývá zdrojový kód. Než může počítač skutečně provést pokyny, musí být zdrojový kód přeložen do strojově čitelného (binárního) formátu, který se nazývá objektový kód. Veškerý distribuovaný software obsahuje objektový kód, ale FOSS zpřístupňuje také zdrojový kód.

Vlastníci proprietárního softwaru licencují svůj objektový kód chráněný autorskými právy uživateli, což uživateli umožňuje spustit program. Programy FOSS na druhé straně licencují objekt i zdrojový kód, což uživateli umožňuje spouštět, upravovat a případně redistribuovat programy. Díky přístupu ke zdrojovému kódu mají uživatelé svobodu spouštět program pro jakýkoli účel, redistribuovat, zkoumat, přizpůsobovat se, učit se, upravovat software podle svých potřeb a vydávat vylepšení pro veřejnost pro dobro komunity. Proto je některý FOSS také známý jako svobodný software, kde „svobodný“ odkazuje v první řadě na výše uvedené svobody spíše než v peněžním slova smyslu.

V sektoru veřejného zdraví může mít FOSS potenciálně řadu výhod, včetně:

  - Lower costs as it does not involve paying for prohibitive license
    costs.

  - Vzhledem k informační potřebě pro zdravotnictví jsou neustále
    mění a vyvíjí, je potřeba, aby uživatel měl
    freedom to make the changes as per the user requirements. This is
    often limited in proprietary systems.

  - Access to source code to enable integration and interoperability. In
    the health sector interoperability between different software
    aplikace se stávají stále důležitějšími, což znamená umožnit
    two or more systems to communicate metadata and data. This work is a
    lot easier, and sometimes dependent on the source code being
    available to the developers that create the integration. This
    availability is often not possible in the case of proprietary
    software. And when it is, it comes at a high cost and contractual
    obligations.

  - Aplikace FOSS, jako je DHIS2, jsou obvykle podporovány globálním
    síť vývojářů, a tak mít přístup k špičkovému výzkumu
    and development knowledge.
