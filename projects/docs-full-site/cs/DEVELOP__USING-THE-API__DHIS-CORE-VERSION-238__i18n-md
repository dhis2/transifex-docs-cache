---
edit_url: "https://github.com/dhis2/dhis2-docs/blob/2.38/src/developer/web-api/i18n.md"
revision_date: '2022-04-27'
tags:
- Vývoj
- DHIS core version 2.38
---

# I18n { #i18n } 

## Národní prostředí { #webapi_locales } 

DHIS2 podporuje překlady jak pro uživatelské rozhraní, tak pro obsah databáze.

### Uživatelské rozhraní Národního prostředí { #ui-locales } 

Dostupné národní prostředí pro uživatelské rozhraní můžete načíst pomocí následujícího zdroje s požadavkem GET. Jsou podporovány reprezentace prostředků XML a JSON.

    /api/33/locales/ui

### Národní prostředí obsahu databáze { #database-content-locales } 

You can retrieve and create locales for the database content with GET and POST requests through the `dbLocales` resource. XML and JSON resource representations are supported. To POST data, there are two required parameters: `country` and `language`. 

    /api/locales/dbLocales?country=US&language=en

## Překlady { #webapi_translations } 

DHIS2 allows for translations of database content. 
If a metadata is translatable, then it will have a `translations` property.

To znamená, že můžete načíst a aktualizovat překlady pomocí zdrojů třídy metadat, jako jsou `api/dataElements`, `api/organisationUnits`, `api/dataSets` atd.

### Získejte překlady { #get-translations } 

Překlady pro objekt metadat, jako je DataElement, můžete získat odesláním požadavku GET na `api/dataElements/{dataElementUID}`

Odpověď obsahuje úplné podrobnosti o prvku DataElement, který také zahrnuje vlastnost `translations`, jak je uvedeno níže

```json
{
  "id": "fbfJHSPpUQD",
  "href": "https://play.dhis2.org/dev/api/29/dataElements/fbfJHSPpUQD",
  "created": "2010-02-05T10:58:43.646",
  "name": "ANC 1st visit",
  "shortName": "ANC 1st visit",
  "translations": 
  [
    {
      "property": "SHORT_NAME",
      "locale": "en_GB",
      "value": "ANC 1st visit"
    },
    {
      "property": "NAME",
      "locale": "fr",
      "value": "Soin prénatal 1"
    },
    {
      "property": "NAME",
      "locale": "en_GB",
      "value": "ANC 1st visit"
    }
  ]
}
```
You can also get only the `translations` property of an object by sending a GET request to 
`api/dataElements/{dataElementUID}/translations`

```json
{
  "translations": 
  [
    {
      "property": "SHORT_NAME",
      "locale": "en_GB",
      "value": "ANC 1st visit"
    },
    {
      "property": "NAME",
      "locale": "fr",
      "value": "Soin prénatal 1"
    },
    {
      "property": "NAME",
      "locale": "en_GB",
      "value": "ANC 1st visit"
    }
  ]
}
```

### Create a translations { #create-a-translations } 

Překlad můžete vytvořit odesláním požadavku PUT se stejným formátem JSON na adresu `api/dataElements/{dataElementUID}/translations`

```json
{
  "translations": 
  [
    {
      "property": "SHORT_NAME",
      "locale": "en_GB",
      "value": "ANC 1st visit"
    },
    {
      "property": "NAME",
      "locale": "fr",
      "value": "Soin prénatal 1"
    },
    {
      "property": "DESCRIPTION",
      "locale": "fr",
      "value": "description in french"
    },
    {
      "property": "FORM_NAME",
      "locale": "fr",
      "value": "name in french"
    }
  ]
}
```

Případně můžete také jen aktualizovat objekt pomocí užitečného zatížení včetně vlastnosti `translations`.

Odešlete požadavek PUT na `api/dataElements/{dataElementUID}` s úplným zatížením objektu, jak je uvedeno níže:

```json
{
  "id": "fbfJHSPpUQD",
  "created": "2010-02-05T10:58:43.646",
  "name": "ANC 1st visit",
  "shortName": "ANC 1st visit",
  "translations": 
  [
    {
      "property": "SHORT_NAME",
      "locale": "en_GB",
      "value": "ANC 1st visit"
    },
    {
      "property": "NAME",
      "locale": "fr",
      "value": "Soin prénatal 1"
    },
    {
      "property": "NAME",
      "locale": "en_GB",
      "value": "ANC 1st visit"
    }
  ]
}
```

Společné vlastnosti, které podporují překlady, jsou uvedeny v tabulce níže.

Tabulka: Názvy vlastností

| Název vlastnosti | Popis |
|---|---|
| název | Název objektu |
| shortName | Krátký název objektu |
| popis | Popis objektu |

Třídy, které podporují překlady, jsou uvedeny v tabulce níže.

Tabulka: Názvy tříd

| Název třídy | Popis | Další přeložitelné vlastnosti |
|---|---|---|
| DataElementCategoryOption | Možnost kategorie | |
| DataElementCategory | Kategorie | |
| DataElementCategoryCombo | Kombinace kategorií | |
| Datový prvek | Datový prvek | |
| DataElementGroup | Skupina datových prvků | |
| DataElementGroupSet | Sada skupin datových prvků | |
| Indikátor | Indikátor | numeratorDescription, denominatorDescription |
| IndicatorType | Typ indikátoru | |
| IndicatorGroup | Skupina indikátorů | |
| IndicatorGroupSet | Sada skupin indikátorů | |
| OrganisationUnit | Organizační jednotka | |
| OrganisationUnitGroup | Skupina organizační jednotky | |
| OrganisationUnitGroupSet | Sada skupin organizačních jednotek | |
| DataSet | Datová sada | |
| Sekce | Sekce datové sady | |
| ValidationRule | Pravidlo ověření | návod |
| ValidationRuleGroup | Skupina ověřovacích pravidel | |
| Program | Program | enrollmentDateLabel, incidentDateLabel |
| Fáze programu | Programová fáze | executionDateLabel, dueDateLabel |
| Atribut trasované entity | Atribut trasované entity | |
| TrackedEntity | Trasovaná entita | |
| Typ vztahu | Typ vztahu pro instance trasovaných entit | fromToName, toFromName |
| Sada možností | Sada možností | |
| Atribut | Atribut pro metadata | |
| ProgramNotificationTemplate | Šablona oznámení programu | subjectTemplate, messageTemplate |
| ValidationNotificationTemplate | Šablona oznámení o ověření | subjectTemplate, messageTemplate |
| DataSetNotificationTemplate | Šablona oznámení DataSet | subjectTemplate, messageTemplate |
| Vizualizace | Vizualizace | title, subtitle, rangeAxisLabel, baseLineLabel, targetLineLabel, domainAxisLabel |
| ProgramRuleAction | Akce programových pravidel | obsah |
| Prediktor | Prediktor | Name, ShortName, Description, Generator Description  |
| ValidationRule | ValidationRule | Název, Popis, Instrukce, Levý výraz, Pravý výraz |

## Internacionalizace { #webapi_i18n } 

Chcete-li načíst páry klíč-hodnota pro přeložené řetězce, můžete použít prostředek *i18n*.

    /api/33/i18n

Koncový bod je umístěn na */api/i18n* a formát požadavku je jednoduchá řada párů klíč-hodnota:

```json
[
  "access_denied",
  "uploading_data_notification"
]
```

Požadavek musí být typu *POST* a jako typ obsahu použít *application/json*. Příklad použití curl za předpokladu, že se data požadavku uloží jako soubor `keys.json`:

```bash
curl -d @keys.json "play.dhis2.org/demo/api/33/i18n" -X POST
  -H "Content-Type: application/json" -u admin:district
```

Výsledek bude vypadat takto:

```json
{
  "access_denied":"Přístup odepřen",
  "uploading_data_notification":"Nahrávání lokálně uložených dat na server"
}
```

