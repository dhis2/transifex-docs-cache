---
edit_url: "https://github.com/dhis2/dhis2-docs/blob/2.38/src/sysadmin/audit.md"
revision_date: '2021-12-02'
tags:
- Správa
- DHIS core version 2.38
---

# Audit { #audit } 

## Úvod { #introduction } 

DHIS2 podporuje novou službu auditu založenou na _Apache ActiveMQ Artemis_. Artemis používá jako asynchronní systém zasílání zpráv DHIS2.

Po uložení entity do databáze bude vytvořena zpráva auditu a odeslána spotřebitelské službě zpráv Artemis. Zpráva bude poté zpracována v jiném vláknu.

Protokoly auditu lze získat z databáze DHIS2. V současné době není k dispozici žádný koncový bod uživatelského rozhraní ani rozhraní API pro načítání záznamů auditu.


## Jedna tabulka auditu { #audit_table } 

Všechny položky auditu budou uloženy do jedné tabulky s názvem `audit`

| Sloupec     | Typ                        | Popis |   |
|------------|-----------------------------|---------------------------------------------------------------------------------------------------------------------------------------------------|---|
| auditid    | celé číslo                     | Primární klíč. |   |
| audittype  | text                        | READ, CREATE, UPDATE, DELETE, SEARCH                                                                                                                  |   |
| auditscope | text                        | METADATA, AGGREGATE, TRACKER                                                                                                                        |   |
| klass      | text                        | Název entity auditu Java třídy.                                                                                                                     |   |
| atributy | jsonb                       | Řetězec JSON s atributy auditovaného objektu. Příklad: `{"valueType":"TEXT", "categoryCombo":"SWQW313FQY", "domainType":"TRACKER"}`. |   |
| data       | bytea                       | Komprimovaný řetězec JSON auditní entity ve formátu bajtového pole (nečitelný pro lidi).                                                                                             |   |
| createdat  | časové razítko bez časového pásma | Doba vytvoření. |   |
| createdby  | text                        | Uživatelské jméno uživatele provádějícího auditovanou operaci. |   |
| uid        | text                        | UID auditlovaného objektu. |   |
| code       | text                        | Kód auditovaného objektu. |   |

The audit service makes use of two new concepts: *Audit Scope* and *Audit Type*.

## Rozsah auditu { #audit_scope } 

Rozsah auditu je logická oblast aplikace, kterou lze auditovat. V současné době existují tři rozsahy auditu.

| **Rozsah** | Klíč       | Auditované objekty                                              |
| --------- | --------- | ------------------------------------------------------------ |
| Trasovač   | trasovač   | Instance trasované entity, hodnota atributu trasované entity, registrace, událost. |
| Metadata  | metadata  | Všechny objekty metadat (např. datový prvek, organizační jednotka). |
| Aggregate | agregát | Hodnota souhrnných dat.                                        |


## Typ auditu { #audit_type } 

Typ auditu je akce, která spouští operaci auditu. V současné době podporujeme následující čtyři typy.

| Název     | Klíč      | Popis         |
| -------- | -------- | ------------------- |
| Číst     | READ     | Objekt byl přečten.    |
| Vytvořit   | VYTVOŘIT   | Objekt byl vytvořen. |
| Aktualizace   | AKTUALIZACE   | Objekt byl aktualizován. |
| Vymazat   | SMAZAT   | Objekt byl smazán. |
| Vypnuto | VYPNUTO | Vypnout audit      |

> **Pozor**
>
> Typ auditu READ může generovat velké množství dat v databázi a může mít dopad na výkon.

## Nastavení { #audit_configuration } 

Systém auditu je standardně povolen pro následující rozsahy a typy.

Rozsahy:

- `VYTVOŘIT`
- `UPDATE`
- `DELETE`

Typy:

- `METADATA`
- `TRACKER`
- `AGGREGATE`

To znamená, že **není vyžadována žádná akce** k aktivaci výchozího systému auditu. Výchozí nastavení je ekvivalentní následující konfiguraci `dhis.conf`.

```properties
audit.metadata = CREATE;UPDATE;DELETE
audit.tracker = CREATE;UPDATE;DELETE
audit.aggregate = CREATE;UPDATE;DELETE
```

Audit lze nakonfigurovat pomocí _audit matrix_. Matice auditu představuje platné kombinace rozsahů a typů a je definována pomocí následujících vlastností v konfiguračním souboru `dhis.conf`. Každá vlastnost přijímá seznam typů auditu oddělený středníkem (`;`).

* `audit.metadata`
* `audit.tracker`
* `audit.aggregate`

## Příklady { #examples } 

Tato část ukazuje, jak nakonfigurovat systém auditu v `dhis.conf`.

Chcete-li povolit audit vytváření a aktualizace pouze metadat a sledování:

```properties
audit.metadata = CREATE;UPDATE
audit.tracker = CREATE;UPDATE
audit.aggregate = DISABLED
```

Chcete-li pouze vytvořit a odstranit objekty související se sledováním:

```properties
audit.metadata = DISABLED
audit.tracker = CREATE;DELETE
audit.aggregate = DISABLED
```

Chcete-li úplně zakázat audit pro všechny rozsahy:
```properties
audit.metadata = DISABLED
audit.tracker = DISABLED
audit.aggregate = DISABLED
```

