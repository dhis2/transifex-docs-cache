---
edit_url: "https://github.com/dhis2-metadata/REHAB_AGG/blob/master/docs/rehab_agg-installation.md"
revision_date: '2022-12-19'
tags:
- Implementar
---

# Rehabilitation - Aggregate Installation Guide { #rehab-agg-installation }

This document includes an installation guide for the Rehabilitation aggregate package.

Idioma predeterminado del sistema: Inglés

Available translations: French, Spanish, Portuguese, Arabic

## Instalación { #installation } 

La instalación del módulo consta de varios pasos:

1. [Preparing the metadata file with DHIS2 metadata](#preparing-the-metadata-file)
2. [Importing the metadata file into DHIS2](#importing-metadata)
3. [Configuring the imported metadata](#configuration)
4. [Adaptar el programa después de la importación](#adapting-the-program)

Se recomienda leer primero cada sección de la guía de instalación antes de comenzar el proceso de instalación y configuración en DHIS2. Identifique las secciones aplicables según el tipo de su importación:

1. importar a una instancia DHIS2 en blanco
2. importar a una instancia DHIS2 con metadatos existentes.

Los pasos descritos en este documento deben probarse en una instancia de prueba/preparación de DHIS2 y solo luego aplicarse a un entorno de producción.

## Requisitos { #requirements } 

Para instalar el módulo, se requiere una cuenta de usuario administrador en DHIS2.

Se debe tener mucho cuidado para garantizar que el servidor en sí  y la aplicación DHIS2 estén bien protegidos,  asimismo se deben definir los derechos de acceso a los datos recopilados. Los detalles sobre cómo proteger un sistema DHIS2 están fuera del alcance de este documento, por lo que remitimos a la [documentación de DHIS2](https://docs.dhis2.org/).

## Archivos de metadatos { #metadata-files } 

Si bien no siempre es necesario, a menudo puede resultar ventajoso realizar ciertas modificaciones en el archivo de metadatos antes de importarlo a DHIS2.

## Preparing the Metadata File { #preparing-the-metadata-file } 

### Dimensión de datos predeterminada { #default-data-dimension } 

En las primeras versiones de DHIS2, los UID de las dimensiones de datos predeterminadas se generaban automáticamente. Por lo tanto, si bien todas las instancias de DHIS2 tienen una opción de categoría predeterminada, una categoría de elemento de datos, una combinación de categoría y una combinación de opciones de categoría, los UID de estos valores predeterminados pueden ser diferentes. Las versiones posteriores de DHIS2 tienen UID codificados para la dimensión predeterminada y estos UID se utilizan en los paquetes de configuración.

Para evitar conflictos al importar los metadatos, es recomendable buscar y  reemplazar en todo el archivo .json todas las apariciones de estos objetos predeterminados, reemplazando los UID del archivo .json con los UID de la instancia en la que se importará el archivo. La Tabla 1 muestra los UID que deben reemplazarse, así como los API endpoints para identificar los UID existentes

|Objeto                       | UID           | API endpoint                                              |
|-----------------------------|---------------|-----------------------------------------------------------|
| Categoría                     | `GLevLNI9wkl` | `../api/categories.json?filter=name:eq:default`           |
| Opción de categoría             | `xYerKDKCefk` | `../api/categoryOptions.json?filter=name:eq:default`      |
| Combinación de categoría        | `bjDvmb4bfuf` | `../api/categoryCombos.json?filter=name:eq:default`       |
| Combinación de opciones de categoría | `HllvX50cXC0` | `../api/categoryOptionCombos.json?filter=name:eq:default` |

Identifique los UID de las dimensiones predeterminadas en su instancia utilizando las solicitudes API enumeradas y reemplace los UID en el archivo json con los UID de la instancia.

> **NOTA**
>
> Tenga en cuenta que esta operación de búsqueda y reemplazo debe realizarse con un editor de texto plano, no con un procesador de textos como Microsoft Word.

### Tipos de indicadores { #indicator-types } 

El tipo de indicador es otro tipo de objeto que puede crear conflictos de importación porque ciertos nombres se utilizan en diferentes bases de datos DHIS2 (por ejemplo, "Porcentaje"). Dado que los tipos de indicadores se definen por su factor (incluido 1 para indicadores "solo numerador"), no son ambiguos y se pueden reemplazar mediante una búsqueda y reemplazo de los UID. Este método ayuda a evitar posibles conflictos de importación y evita que el implementador cree tipos de indicadores duplicados. La siguiente tabla contiene los UID que podrían reemplazarse, así como los API endpoints para identificar los UID existentes:

|Objeto                  | UID           | API endpoint                                                          |
|------------------------|---------------|-----------------------------------------------------------------------|
| Sólo numerador (número)| `kHy61PbChXr` | `../api/indicatorTypes.json?filter=number:eq:true&filter=factor:eq:1` |

### Visualizations using root organisation unit UID { #visualizations-using-root-organisation-unit-uid } 

Las visualizaciones, informes de eventos, tablas de informes y mapas que están asignados a un nivel de unidad organizativa específico o grupo de unidades organizativas  tienen una referencia a la unidad organizativa raíz (nivel 1). Dichos objetos, si están presentes en el archivo de metadatos, contienen un marcador de posición `<OU_ROOT_UID>`. Utilice la función de búsqueda en el editor de archivos .json para identificar este marcador de posición y reemplazarlo con el UID de la unidad organizativa de nivel 1 en la instancia de destino.

### Option codes { #option-codes } 

According to the DHIS2 naming conventions, the metadata codes use capital letters, underscores and no spaces. Some exceptions that may occur are specified in the corresponding package documentation.
All codes included in the metadata objects in the current package match the naming conventions. It may occur that the codes of existing metadata objects used in the target database use lower case characters. In this case, it is important to update those values directly in the database.

> **Important**
>
> During the import, the existing option codes will be overwritten with the updated upper case codes.
> In order to update the data values for existing data in the database, it is necessary to update the values stored in the database using database commands.
> Make sure to map existing old option codes and new option codes before replacing the values. Use staging instance first, before making adjustments on the production server.

For data element values, use:

```SQL
UPDATE programstageinstance
SET eventdatavalues = jsonb_set(eventdatavalues, '{"<affected data element uid>","value"}', '"<new value>"')
WHERE eventdatavalues @> '{"<affected data element uid>":{"value": "<old value>"}}'::jsonb
AND programstageid=<database_programsatgeid>;
```

### Sort order for options { #sort-order-for-options } 

Check whether the sort order `sortOrder` of options in your system matches the sort order of options included in the metadata package. This only applies when the json file and the target instance contain options and option sets with the same UID.

After import, make sure that the sort order for options within an option set starts at 1. There should be no gaps (eg. 1,2,3,5,6) in the sort order values.

Sort order can be adjusted in the Maintenance app.

1. Go to the applicable Option Set
2. Open the "Options" section
3. Use "SORT BY NAME", "SORT BY CODE/VALUE" or "SORT MANUALLY" alternatives.

The Rehabilitation package contains one option set and two options:

```json
{
    "optionSets": [
        {
            "name": "YES/NO (numeric)",
            "id": "TdDqpX1kdd2",
            "code": "YES_NO_NUM",
            "valueType": "INTEGER_ZERO_OR_POSITIVE",
            "options": [
                {
                    "id": "VavIEUmBv8j"
                },
                {
                    "id": "Xu8ieCbS7jH"
                }
            ]
        }
    ],
    "options": [
        {
            "name": "Yes",
            "id": "VavIEUmBv8j",
            "code": "1",
            "sortOrder": 1,
            "optionSet": {
                "id": "TdDqpX1kdd2"
            }
        },
        {
            "name": "No",
            "id": "Xu8ieCbS7jH",
            "code": "0",
            "sortOrder": 2,
            "optionSet": {
                "id": "TdDqpX1kdd2"
            }
        }
    ]
}
```

This Yes/No option set is based on "INTEGER_ZERO_OR_POSITIVE" option values that are evaluated in predictors in order to determine **Rehabilitation essential package availability at PHC level** and count number of facilities offering essential packages.

### Organisation unit groups and group sets { #rehab-orgunitgroups }

The package includes the following Organisation Unit Groups:

| Nombre                         | UID           | Descripción                                                               | Purpose                        |
|------------------------------|---------------|---------------------------------------------------------------------------|--------------------------------|
| REHAB - Master Facility List | `Uvefj6bDfzo` | Includes all facilities reporting on rehabilitation                       | Data set assignment, analytics |
| PHC                          | `aT5pkgRLbw5` | Includes all primary health care facilities                                            | Analíticas |
| PHC facilities with a mandate to allocate rehabilitation workers                          | `JCgLXxVGcRS` | Includes primary healthcare facilities with a mandate to allocate rehabilitation workers                                            | Analíticas |
| REHAB - PHC                  | `bbsxlCu3Vya` | Includes all primary health care facilities reporting on rehabilitation   | Analíticas                      |
| SHC                          | `RbJ4hRSGQaH` | Includes all secondary health care facilities | Analíticas                      |
| REHAB - SHC                  | `wZJCB2cj9jg` | Includes all secondary health care facilities reporting on rehabilitation | Analíticas                      |
| THC                  | `dV8Ec2zJrze` | Includes all tertiary health care facilities | Analíticas                      |
| REHAB - THC                  | `Re0iJ3vtBzE` | Includes all tertiary health care facilities reporting on rehabilitation  | Analíticas                      |
| Rehab inpatient ward         | `AGK6oOK4ncb` | Includes all facilities with a dedicated rehabilitation ward              | Analíticas                      |
| Hospital district            | `Y9lBaYVm9j7` | Includes all district hospitals                                           | Analíticas                      |

Depending on the the country context, further disaggregations might be required.

> **Example**
>
> If data collected for PHC facilities needs to be further disaggregated by district hospitals and health centres, you will need to create and maintain organisation groups **REHAB PHC hospitals** and **REHAB PHC health centres** as part of the **REHAB PHC** organisation unit group set.

The package includes the following Organisation Unit Group Sets:

| Nombre                          | UID           | Descripción                                                               | Purpose   |
|------------------------------ |---------------|---------------------------------------------------------------------------|-----------|
| Administrative levels of care | `dSwpdHITQ85` | Administrative levels of care eg. PHC, SHC, THC                           | Analíticas |
| REHAB - Administrative levels | `wkjpdklqOIt` | Rehabilitation levels of care eg. REHAB PHC, REHAB SHC, REHAB THC         | Analíticas |
| Tipo                          | `VQT2m5uMawR` | Includes types of facilities eg. District Hospitals, Health centres, etc. | Analíticas |

These metadata objects have to be configured.

1. If the target instance does not contain any organisation unit groups that match the description of the groups included in the package, follow the steps below during configuration and import:
    1. Import the package together with the included organisation unit groups.
    2. Assign applicable facilities to the new organisation unit groups in the Maintenance app.

2. If the target instance already contains organisation unit groups that match the description for the given metadata objects, follow the steps below during configuration and import:

    1. Note the UIDs of the matching organisation unit groups in the target instance.
    2. Replace all occurences of the organisationUnitGrop UIDs in the metadata json file with the corresponding UIDs noted in step 1.
    3. Remove the organisationUnitGroup metadata objects from the metadata json file before import. This step is very important, otherwise the current assignment of the organisation units to existing groups in the target instance will be overwritten.
    4. Proceed to importing the package if no other pre-configuration / editing is required.

3. If the target instance does not contain organisation unit group sets that match the description provided, these organisation unit groups have to be imported into the target instance. The applicable organisation unit groups have to be added to the organisation unit group sets in the user interface or using the API.

4. If the target instance already contains organisation unit group sets that match the description provided, follow the steps below during configuration and import:

    1. Replace the UIDs of the matching organisation unit group sets in the metadata file with the corresponding UIDs of the organisation unit group sets from the target instance.
    2. Remove the organisation unit group set objects from the metadata file before import. This step is very important, otherwise the current assignment of the organisation unit groups to existing group sets in the target instance will be overwritten.
    3. Add the newly imported organisation unit groups to the organisation unit group sets. (See tables above).

> **Example**
>
> The target instance may already contain the PHC organisation unit group. In this case, replace the UID `aT5pkgRLbw5` of the group and all its occurences in the json file with the corresponding UID from the target instance before import. Then, remove the orgUnitGroup "PHC" metadata object from the json file. You will find it under ` "organisationUnitGroups" `.

### Population, incidence and personnel density data { #population-incidence-and-personnel-density-data } 

The Rehabilitation package includes data elements, indicators and other metadata objects that use on **population**, **incidence** and **personnel density** data.

The organisation unit levels at which the population data is entered in the target instance may vary.

In the generic Rehabilitation package, this metadata is added to the to the facility level data sets listed in the table below.

| Elemento de datos                   | UID           | Data Set name                          | Data Set UID  | Data set period type | Data Set organisation Unit Group |
|--------------------------------|---------------|----------------------------------------|---------------|----------------------|----------------------------------|
| GEN - Population               | `DkmMEcubiPv` | REHAB - personnel density              | `Sm2fALTZROS` | Yearly               | REHAB - Master Facility List     |
| REHAB - Amputation incidence % | `jEc1P0VAPcs` | REHAB - bed density and incidence data | `giKizLegiUW` | Yearly               | Rehab inpatient ward             |
| REHAB - Burns incidence %      | `rtYJONzb7OY` | REHAB - bed density and incidence data | `giKizLegiUW` | Yearly               | Rehab inpatient ward             |
| REHAB - MMT incidence %        | `jlS0RS2LplZ` | REHAB - bed density and incidence data | `giKizLegiUW` | Yearly               | Rehab inpatient ward             |
| REHAB - SCI incidence %        | `Iy6ylb65g4V` | REHAB - bed density and incidence data | `giKizLegiUW` | Yearly               | Rehab inpatient ward             |
| REHAB - Stroke incidence %     | `OIADGq0kCHW` | REHAB - bed density and incidence data | `giKizLegiUW` | Yearly               | Rehab inpatient ward             |
| REHAB - TBI incidence %        | `rzVRv6GpduW` | REHAB - bed density and incidence data | `giKizLegiUW` | Yearly               | Rehab inpatient ward             |

If the target instance already has metadata infrastructure, which is used for collecting **Population, personnel or incidence data**, please refer to the steps listed below:

1. Choose the strategy to align population metadata in the target instance and in the .json file.
   - Alternative 1: Replace the UIDs of the data elements and all their occurences in the json file with the UIDs from the target system
   - Alternative 2: Consider replacing the UIDs of these data elements in the target system with the UIDs from the json file. GEN data elements are part of DHIS2 core metadata library and are used in other metadata packages.

2. Indicators that use the **Population, personnel or incidence data** will be aggregating data at the level/levels where the data is entered.

3. Additional mapping and configuration may be required after the package is imported. Refer to the [data set configuration section](#rehab-dataset-config)

> **NOTE**
>
> When updating the UID of a metadata element in the existing DHIS2 instamce, you will need to run an SQL command in the database and additionally replace all occurances and references of its UID in other metadata objects: predictor, indicator, validation rule expressions, etc.

### Predictors { #rehab-predictors }

The Rehabilitation package uses predictors to calculate:

1. the availability of essential rehabilitation packages at health facilities
2. the availability of personnel based for specific occupational groups
3. the availability of a specific occupational group at a reporting facility.
4. The number of facilities reporting on rehabilitation at a specific administrative level each year.

> **IMPORTANT**
>
> The rehabilitation package includes indicators that report on the percentage of facilities at a specific administrative level that report on rehabilitation (Rehab PHC, Rehab SHC, Rehab THC) with minimum number of occupational groups (at least 1, 2 or 3).
> The denominator for these indicators is the total number of facilities within a specific adminstrative level of care (PHC with a mandate to allocate rehabilitation workers, SHC, THC). There are several ways to obtain data for this denominator.
>
> 1. Organisation Unit Group counts. It is possible to use organisation unit group counts `OUG{<UID>}` to find the number of facilities that belong to a specific group. However, it is not possible to use this approach when tracking the changes over time.
> 2. Data elements in a yearly data set, where the number of facilities for a specific administrative level may be entered manually.
> 3. Data elements that receive yearly values from predictors that run on a yearly basis and generate the number of facilities based on the actual organisation unit group counts each year. This solution is implemented in the current generic package. Please keep in mind the risk of overwriting the generated data for a period of time in the past once the number of facilities within a specific administrative level has changed.

Predictor metadata includes organisation unit levels used for aggregation of data values. The package metadata file contains placeholders that need to be replaced with the UIDs of the corresponding organisation unit levels in the target database.

The steps to prepare the predictors for import are described below:

1. Identify the organisationUnitLevel UID of the Facility level at which the data for the predictors will be aggregated. Use the following API endpoint to identify the required UID: `../api/organisationUnitLevels.json?fields=id,name`
2. Find the following organisationUnitLevel placeholders in the json file: `<OU_LEVEL_FACILITY_UID>`
3. Replace the placeholders with the UID of the identified facility level in the target instance.
4. Identify the number of the Facility level in the target instance.
5. Find the properties of the **output data elements** in the json file, using the UIDs provided in the "Output data element - UID" column.
6. Look for property: `"aggregationLevels": [4]`
7. If the level matches the level in the target instance, keep the number as is. If the Facility level number in the target nstance is different, then adjust the number accordingly.

### Validation rules { #rehab-validation-rules }

Validation rules included in the package are grouped by data sets for which they have been configured.

All validation rule groups and the corresponding validation rules are listed in the appendix to this installation guide:

[Rehabilitation - validation rules](resources/rehab_validation_rules.xlsx)

The organisation unit groups for all validation rules are set to facility level. The facility level value is located in the `"organisationUnitLevels"` property of each validation rule. It is set to `4` by default. Adjust these levels in the metadata file to match the facility level in the target instance befre importing the package.

## Importar metadatos { #importing-metadata } 

Utilice la aplicación DHIS2 [Importar/Exportar](#import_export) para importar paquetes de metadatos. Es recomendable utilizar la función de proceso de prueba "dry run" para identificar problemas antes de intentar realizar una importación real de los metadatos. Si el "dry run" informa algún problema o conflicto, consulte la sección [conflictos de importación](#handling-import-conflicts) más abajo. Si la importación "dry run"/"validar" funciona sin errores, intente importar los metadatos. Si la importación se realiza correctamente sin errores, puede proceder a [configurar](#configuration) el módulo. En algunos casos, los conflictos o problemas de importación no se muestran durante el proceso de prueba "dry run", pero aparecen cuando se intenta la importación real. En este caso, el resumen de la importación enumerará los errores que deben resolverse.

### Gestión de conflictos de importación { #handling-import-conflicts } 

> **NOTA**
>
> Si está importando el paquete a una nueva instancia de DHIS2, no experimentará conflictos de importación, ya que no hay metadatos en la base de datos de destino. Después de importar los metadatos, vaya a la sección “[Configuración](#configuration)”.

Pueden ocurrir varios conflictos diferentes, aunque el más común es que haya objetos de metadatos en el paquete de configuración con un nombre, nombre corto y/o código que ya existe en la base de datos de destino. Hay un par de soluciones alternativas a estos problemas, con diferentes ventajas y desventajas. Cuál sea la más adecuada dependerá, por ejemplo, del tipo de objeto para el que se produce un conflicto.

#### Alternativa 1 { #alternative-1 } 

Cambiar el nombre del objeto existente en su base de datos DHIS2 para el cual existe un conflicto. La ventaja de este enfoque es que no es necesario modificar el archivo .json, ya que los cambios se realizan a través de la interfaz de usuario de DHIS2. Es probable que esto sea menos propenso a errores. También significa que el paquete de configuración se deja como está, lo que puede ser una ventaja, por ejemplo, cuando se publican actualizaciones del paquete. Con frecuencia también se hace referencia a los objetos del paquete original en la documentación y los materiales de formación.

#### Alternativa 2 { #alternative-2 } 

Cambiar el nombre del objeto para el que existe un conflicto en el archivo .json. La ventaja de este enfoque es que los metadatos DHIS2 existentes se dejan como están. Este puede ser un factor cuando existe material de formación o documentación como SOPs de diccionarios de datos vinculados al objeto en cuestión, y no implica ningún riesgo de confundir a los usuarios al modificar los metadatos con los que están familiarizados.

Tenga en cuenta que, tanto para la alternativa 1 como para la 2, la modificación puede ser tan simple como agregar un pequeño pre/post-fijo al nombre, para minimizar el riesgo de confusión.

#### Alternativa 3 { #alternative-3 } 

Un tercer enfoque, más complicado, es modificar el archivo .json para reutilizar los metadatos existentes. Por ejemplo, en los casos en los que ya existe un set de opciones para un determinado concepto (por ejemplo, "sexo"), ese set de opciones podría eliminarse del archivo .json y todas las referencias a su UID podrían reemplazarse con el set de opciones correspondiente que ya se esté en la base de datos. La gran ventaja de esto (que no se limita a los casos en los que existe un conflicto de importación directo) es evitar la creación de metadatos duplicados en la base de datos. Hay algunas consideraciones clave que se deben tener en cuenta al realizar este tipo de modificación:

- requiere conocimiento especializado de la estructura detallada de metadatos de DHIS2
- el enfoque no funciona para todos los tipos de objetos. En particular, ciertos tipos de objetos tienen dependencias que son complicadas de resolver de esta manera, por ejemplo relacionadas con desagregaciones.
- las futuras actualizaciones del paquete de configuración serán complicadas.

## Configuración { #configuration } 

Una vez que todos los metadatos se hayan importado correctamente, hay algunos pasos que deben seguirse antes de que el módulo sea funcional.

### Compartir { #sharing } 

Primero, tendrá que usar la funcionalidad *Compartir* de DHIS2 para configurar qué usuarios (grupos de usuarios) deben ver los metadatos y los datos asociados con el programa, así como quién puede registrar/introducir datos en el programa. De forma predeterminada, el uso compartido se ha configurado para lo siguiente:

- Tableros
- Visualizaciones, mapas, informes de eventos y tablas de informes
- Sets de datos
- Opciones de categoría

Consulte la [documentación DHIS2]](#sharing) para obtener más información sobre compartir.

Three core user groups are included in the package:

- Rehab access (view metadata/view data)
- Rehab admin (view and edit metadata/no access to data)
- Rehab - (view metadata/capture and view data)

The users are assigned to the appropriate user group based on their role within the system. Sharing for other objects in the package may be adjusted depending on the set up. Refer to the [DHIS2 Documentation on sharing](#sharing) for more information.

### Roles de usuario { #user-roles } 

Los usuarios necesitarán roles de usuario para poder interactuar con las diversas aplicaciones dentro de DHIS2. Se recomiendan los siguientes roles mínimos:

1. Análisis de datos Tracker: puede ver análisis de eventos y acceder a tableros, informes de eventos, visualizador de eventos, visualizador de datos, tablas dinámicas, informes y mapas.
2. Captura de datos Tracker: puede agregar valores de datos, actualizar entidades de tracker, buscar entidades de tracker en unidades organizativas y acceder a la captura de tracker

Consulte la [Documentación de DHIS2](https://docs.dhis2.org/) para obtener más información sobre la configuración de roles de usuario.

### Asignación de unidades organizativas{ #organisation-unit-assignment } 

The data sets must be assigned to organisation units within existing hierarchy in order to be accessible via capture app. The table below provides information about organisation unit assignment for Rehabilitation data sets:

| Data set                              | UID           | Data set form type | Data collection period | Facility types                                                                                             |
|---------------------------------------|---------------|--------------------|------------------------|------------------------------------------------------------------------------------------------------------|
| Bed Density and Incidence Data        | `giKizLegiUW` | default            | yearly                 | Rehabilitation facilities with a dedicated rehabilitation inpatient ward                                   |
| Essential Package Availability at PHC | `MGzqZDWvPhL` | section            | yearly                 | Primary Healthcare Facilities reporting on Rehabilitation (Rehab PHC)                                      |
| Personnel Density                     | `Sm2fALTZROS` | section            | yearly                 | All facilities reporting on Rehab (Master Facility List)                                                   |
| Inpatient Report                      | `WjN1YoDtlOd` | custom             | monthly                | All facilities with an inpatient ward (not dedicated Rehab ward) reporting on Rehab (Master Facility List) |
| Rehab Ward Report                     | `tP8et8TNWgF` | custom             | monthly                | All facilities with a dedicated rehabilitation inpatient ward reporting on Rehab (Master Facility List)    |
| Outpatient Report                     | `zInFVXb98JD` | custom             | monthly                | All facilities with an outpatient department reporting on Rehab (Master Facility List)                     |

### Organisation unit group assignment { #organisation-unit-group-assignment } 

The organisation units in the target system have to be assigned to the Rehab organisation unit groups based on the overview in the [Organisation unit groups](#rehab-orgunitgroups) section.

### Data sets { #rehab-dataset-config }

The following data sets require additional configuration after import:

#### Bed density { #bed-density } 

If the annual data for total number of rehabilitation beds is already collected in the existing HMIS, the Rehab Bed density data set is not needed. Make sure to replace all occurences of the data element **"Available rehabilitation beds (total)"** `K0Y94lADtGw` with the existing data element UID in all metadata objects, where this data element is referenced:

| Metadata object UID | Metadata object type | Details                                     |
|---------------------|----------------------|---------------------------------------------|
| `VOdQ2YRmSzf`       | Indicador            | Data element is referenced in the numerator |

#### Personnel density { #personnel-density } 

If the annual population data is already collected in the existing HMIS, the **"GEN - Population"** data element `DkmMEcubiPv` may be removed from the data set `Sm2fALTZROS`. Make sure to replace all occurences of the *"GEN - Population"** data element with the existing data element UID in all metadata objects, where this data element is referenced:

| Metadata object UID | Metadata object type | Details                                       |
|---------------------|----------------------|-----------------------------------------------|
| `OnxT9nXB9yB`       | Indicador            | Data element is referenced in the denominator |
| `hLkZBsoxgwG`       | Indicador            | Data element is referenced in the denominator |
| `VOdQ2YRmSzf`       | Indicador            | Data element is referenced in the denominator |
| `n0cE7LiP4j8`       | Indicador            | Data element is referenced in the denominator |
| `peWxNUcIjZw`       | Indicador            | Data element is referenced in the denominator |
| `dXNfY2I7umm`       | Indicador            | Data element is referenced in the denominator |
| `hpP5GW43n1J`       | Indicador            | Data element is referenced in the denominator |
| `s9SRcnMtI0K`       | Indicador            | Data element is referenced in the denominator |
| `RRCtatVRlI0`       | Indicador            | Data element is referenced in the denominator |
| `PuSDjaFs2we`       | Indicador            | Data element is referenced in the denominator |
| `tsIeJwq6x8L`       | Indicador            | Data element is referenced in the denominator |
| `U5tL3Eqq3Vj`       | Indicador            | Data element is referenced in the denominator |
| `NcA1znaVgFH`       | Indicador            | Data element is referenced in the denominator |
| `M0UPequfEYf`       | Indicador            | Data element is referenced in the denominator |
| `U5WwSS3zxlX`       | Indicador            | Data element is referenced in the denominator |
| `fhZ9MI3qTaA`       | Indicador            | Data element is referenced in the denominator |
| `YEjkkya4JCJ`       | Indicador            | Data element is referenced in the denominator |
| `xW6TcvEMhwG`       | Indicador            | Data element is referenced in the denominator |
| `TNjjTJr7fLe`       | Indicador            | Data element is referenced in the denominator |
| `uKK11dDx8HH`       | Indicador            | Data element is referenced in the denominator |
| `qTq20E3B08y`       | Indicador            | Data element is referenced in the denominator |
| `ePjfu6Fr4Jq`       | Indicador            | Data element is referenced in the denominator |
| `zNzm3AUiQ3B`       | Indicador            | Data element is referenced in the denominator |
| `Vq98oh9BIB1`       | Indicador            | Data element is referenced in the denominator |
| `klNqjksyNAL`       | Indicador            | Data element is referenced in the denominator |
| `bW75ZyPq9aZ`       | Indicador            | Data element is referenced in the denominator |
| `ME2YCnift7x`       | Indicador            | Data element is referenced in the denominator |
| `HTZ7STQR648`       | Indicador            | Data element is referenced in the denominator |
| `Z2f5wDvVxUL`       | Indicador            | Data element is referenced in the denominator |
| `XlISfeHbzxc`       | Indicador            | Data element is referenced in the denominator |
| `NVbwb4XlTVo`       | Indicador            | Data element is referenced in the denominator |
| `t26ObhmhjOb`       | Indicador            | Data element is referenced in the denominator |
| `FjVJNnVOu6S`       | Indicador            | Data element is referenced in the denominator |
| `fDj7xDywd5C`       | Indicador            | Data element is referenced in the denominator |
| `BLUTcTXPhts`       | Indicador            | Data element is referenced in the denominator |
| `RFVOIDIULVO`       | Indicador            | Data element is referenced in the denominator |

The level of data collection for **incidence** data has to be the same or lower than the level of data collection for **population** data.

The organisation unit assignmnet of the **Personnel density** data set should remain at facility level for the purpose of analytical outputs.

### Metadatos duplicados { #duplicated-metadata } 

> **NOTE**
>
> This section only applies if you are importing into a DHIS2 database in which there is already meta-data present. If you are working with a new DHIS2 instance, please skip this section and go to [Adapting the tracker program](#adapting-the-tracker-program).
> If you are using any third party applications that rely on the current metadata, please take into account that this update could break them”

Incluso cuando los metadatos se han importado exitosamente sin ningún conflicto de importación, puede haber duplicados en los metadatos: elementos de datos, atributos de entidad tracker o set de opciones que ya existen. Como se señaló en la sección anterior sobre resolución de conflictos, una cuestión importante a tener en cuenta es que las decisiones sobre la realización de cambios en los metadatos en DHIS2 también deben tener en cuenta otros documentos y recursos que están asociados de diferentes maneras tanto con los metadatos existentes, como con los metadatos que se han importado a través del paquete de configuración. Por lo tanto, resolver duplicados no es sólo una cuestión de "limpiar la base de datos", sino también de asegurarse de que esto se haga sin, por ejemplo, romper la posible integración con otros sistemas, la posibilidad de utilizar material de capacitación, romper los SOP, etc. Esto dependerá en gran medida del contexto.

Una cosa importante a tener en cuenta es que DHIS2 tiene herramientas que pueden ocultar algunas de las complejidades de posibles duplicaciones en los metadatos. Por ejemplo, cuando existen set de opciones duplicados, se pueden ocultar para grupos de usuarios mediante [compartir](#sharing).

## Adaptar el programa { #adapting-the-program } 

Una vez que se haya importado el programa, es posible que desee realizar ciertas modificaciones en él. Algunos ejemplos de adaptaciones locales que *podrían* realizarse son:

- Añadir variables adicionales al formulario.
- Adaptar los nombres de los elementos de datos/opciones según las convenciones nacionales.
- Añadir traducciones a las variables y/o al formulario de entrada de datos.
- Modificación de indicadores basados ​​en definiciones de casos locales

Sin embargo, se recomienda fuertemente tener mucho cuidado si decide cambiar o eliminar cualquiera de los formularios/metadatos incluidos. Existe el peligro de que las modificaciones puedan alterar la funcionalidad, por ejemplo las reglas y los indicadores de programa.

### Mapeo de indicadores { #indicator-mapping } 

For partial implementation of the Rehabilitation package, i.e. implementation of a customized WHO core indicator set, please refer to the [WHO-to-DHIS2 indicator mapping table](resources/rehab_indicator_mapping.xlsx).

When adapting metadata, make sure to identify visualizations and dashboards where applicable indicators are used, as well as data elements and category combinations used in the corresponding data sets.

## Eliminar metadatos { #removing-metadata } 

In order to keep your instance clean and avoid errors, it is recommended that you remove the unnecessary metadata from your instance. Removing unnecessary metadata requires advanced knowledge of DHIS2 and various dependenies.

