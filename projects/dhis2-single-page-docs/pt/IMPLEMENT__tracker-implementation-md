---
revision_date: '2024-01-30'
tags:
- Implementar
template: single.html
---

# Público-alvo { #target-audience } 

This guide is tailored for individuals and entities navigating the process regarding the adoption of DHIS2 Tracker. It serves as a valuable resource for prospective system owners, project managers, decision-makers, and donors seeking clarity on whether DHIS2 Tracker aligns with their specific requirements. Additionally, this guide is instrumental for those actively engaged in planning, budgeting, and overseeing the implementation of DHIS2 Tracker.

Whether you are exploring the feasibility of DHIS2 Tracker for your organization or actively managing its implementation, this guide provides insights to aid in informed decision-making. The intended readership encompasses a spectrum of roles, including system owners, project managers, decision-makers, donors, and professionals responsible for the configuration, training, and ongoing support of DHIS2 Tracker.

The content of this document is rooted in practical experiences drawn from various use cases, which are explicitly referenced throughout the guide. For a comprehensive understanding of DHIS2 Tracker and its implementation, it is recommended to consult this guide in conjunction with the complete documentation available at docs.dhis2.org.


As alterações e melhorias recomendadas neste guia podem ser feitas seguindo o processo descrito [no github DHIS2](https://github.com/dhis2/dhis2-docs/blob/master/src/commonmark/en/content/common/submitting-a-doc-fix.md).



# Introdução { #introduction } 

Tracker is the app within the DHIS2 platform that enables the capture and use of individual, longitudinal data. The functionality of Tracker covers a wide spectrum of needs, from monitoring the quality and availability of water wells, to collecting student attendance in a classroom, to capturing patient data in a shared health record. For the purposes of this guide, many of the examples will come from health systems, although Tracker is also widely used for education systems, environmental systems, logistics, and more.

Many countries and programs are making use of increased network availability and the widespread presence of mobile devices and other hardware to push information systems closer to the level where primary data are generated. Individual-level data adds granularity and nuance to datasets captured in routine information systems, providing opportunities for ad hoc analysis, shifting indicators over time, and improving data quality. Beyond its usefulness for reporting and analysis, individual-level data can also be used to eliminate reporting redundancies, empower lower level staff with better decision-making tools, and place the client at the center of the information system. In short, individual-level data is the smallest data unit, and as such can be repurposed in many ways to satisfy the various competing needs in national information systems.

The purpose of this guide is to help determine if Tracker is the right fit for a potential use case and provide practical guidance for planning successful implementations. The use of Tracker at scale introduces additional factors that should be planned for beyond what may already be in place for an existing aggregate DHIS2 instance. The opportunities and potential benefits from information systems increase as a system goes from aggregate data → tracked anonymous data → data from identifiable individuals → real-time patient data at the point of care. Those planning for a Tracker implementation should recognize that the challenges increase along with the benefits. 

Este guia de implementação fornecerá recomendações para ajudá-lo:

-  determinar se o Tracker atenderá às suas necessidades
-  avalie a prontidão do seu ambiente para a introdução da coleta de dados em nível individual
-  entender como a implementação do Tracker difere do agregado DHIS2
-  address concerns specific to individual-level data systems, including privacy and security
-  reveja as lições aprendidas e as melhores práticas derivadas de casos de uso do mundo real
-  plan for the introduction of your Tracker program(s) at the desired scale
-  estabelecer a infraestrutura que manterá um programa Tracker ao longo do tempo

O guia é dividido em duas seções básicas:

- ** Is My Project Ready For Tracker? ** descreve cinco fatores contextuais importantes que devem ser bem compreendidos para o seu ambiente antes de prosseguir com o planejamento de uma implementação do Tracker

    - Apoio e adesão institucional
    - Financiamento
    - Legislação e políticas
    - Capacity and competency
    - A infraestrutura

- ** Construindo seu (s) programa (s) Tracker ** fornece orientações e recomendações específicas para nove aspectos diferentes da implementação do Tracker

    - Determinando escala
    - Processo de design e configuração
    - Determinando sua estrutura de M&A
    - Entrada de dados em tempo real vs. secundária
    - Mobile vs web
    - Construção de infraestrutura de suporte de RH
    - Hospedagem
    - Treinamento e implementação
    - Relacionando o Tracker ao seu sistema agregado

Links de ferramentas de planejamento específicas são fornecidos ao longo do documento e no apêndice.

## O que o Tracker pode ser usado? { #what-can-tracker-be-used-for } 

As with the rest of the DHIS2 platform, Tracker has a generic data model that allows it to be configured by the user for many different purposes. At its most basic, Tracker allows the user to define a particular kind of thing (person, commodity, lab sample, catchment area, etc.) that they want to follow over time (a tracked entity), define the data that they want to collect about this entity (attributes, data elements), place the data elements in a specific order with accompanying conditions or logic (program stages, program rules), and determine the analytics that should be produced (program indicators, event reports, data visualizations, etc.)

An example of a simple Tracker program could be a program for collecting malaria case information at the point of care. The tracked entity would be a person, defined by attributes such as first name, last name, date of birth, or village. In general, attributes are data about the tracked entity (i.e. person) that are reasonably expected to stay the same over the period of follow-up and are often used to uniquely identify the entity (person). The program would contain data elements such as symptoms, test used and result, treatment provided, etc. These data elements might have pre-configured options for possible responses, such as possible tests available, or logic helping to ensure data quality, such as possible minimum and maximum values for a given data element. The data collected would be visible to the clinical user as a part of the malaria patient’s shared health record, but could also be used to generate monthly reports required by the national malaria control program, provide decision support to the clinician, generate SMS reminders to the patient to promote adherence to treatment, or populate a clinic-facing dashboard containing key performance indicators. For all these purposes, the data were collected only once -- during the patient visit -- but were reused many times for different needs.

DHIS2 also supports the collection of individual data without longitudinal tracking using the Capture and Event apps. Non-longitudinal tracking (Event programs) will be referred to throughout this documentation as well. Event programs generally follow the same data model as Tracker, with the exception of defining a tracked entity which is not required for non-longitudinal tracking. An example of such an Event program could be the reporting of line-listing malaria case data. The line-listing data captured by an Event program would contain the same individual data as in the previous (tracked entity) program, but without linking these data to a tracked entity (patient) for longitudinal tracking over time. As such, the data would not become a part of a shared health record (or perhaps not used to generate SMS message reminders to the patient, or other features that rely on tracking an entity over time); however, the Event program would capture more granular data about malaria cases than an aggregate data model, in turn enhancing analytical capability. 

As seen from the examples above, Tracker and the collection of individual data are quite different from traditional aggregate reporting for health management information systems (HMIS). Only one of the potential uses described above are satisfied by aggregate data collection -- that of monthly reporting -- whereas the patient-, clinician-, and facility-facing uses only become possible through the collection of individual data.

Even with regards to routine reporting, the collection of individual data introduces opportunities for improved data interpretation and analysis, and -- crucially -- for action to be taken. For example, an aggregate report might show that overall immunization coverage is 80%, but lacks detail as to whether the remaining 20% reflects errors in reporting, unintentional exclusion of certain individuals/groups (i.e. due to geographic or demographic factors), or other factors. The aggregate numbers also do not allow for the specific identification of non-vaccinated children that could be followed up with through a targeted outreach program. The aggregate numbers in this example address a basic need of Ministries of Health to report national progress on a global indicator, but not the needs of immunization program managers or providers to take specific actions to improve coverage.

One inherent benefit to using Tracker as an individual level system is the capacity for alignment with the existing aggregate DHIS2 system, which is already used in most lower- and middle-income countries as a national HMIS. Unlike a standalone Electronic Medical Record (EMR) or other application, Tracker encourages the collection of structured data that can natively aggregate upwards and be fed into the national HMIS, thus replacing secondary data entry and aggregation with primary source data.

Como um componente central da plataforma DHIS2, o Tracker é atualizado duas vezes por ano junto com o resto do software DHIS2. As contribuições que impulsionam as melhorias para o Tracker vêm de implementações em países reais e estão alinhadas com as recomendações globais, principalmente as [Diretrizes da OMS sobre intervenções digitais para fortalecimento dos sistemas de saúde] (https://www.who.int/reproductivehealth/publications/digital -interventions-health-system-Strengthen / en /). Das dez intervenções recomendadas, o Tracker tem funcionalidade específica para oferecer suporte ao seguinte:

- Notificação de nascimento
- Notificação de morte
- Notificação de estoque e gestão de mercadorias
- Comunicação direcionada ao cliente
- Apoio à decisão do trabalhador de saúde
- Rastreamento digital do estado de saúde do cliente e serviços combinados com suporte à decisão
- Rastreamento digital combinado com suporte à decisão e comunicação direcionada ao cliente
- Fornecimento digital de treinamento e conteúdo educacional para profissionais de saúde

Taking full advantage of such features requires that the data collected are systematic and adhere to normative standards. In health care, primary and public health services that are strongly driven by fixed guidelines and workflows are particularly suited for Tracker programs. For example in Antenatal Care (ANC), most countries have guidelines with algorithms for screening and patient management in response to test findings that can be incorporated in Tracker to follow a routine clinical workflow, supporting both the care provider and the reporting needs. In more complex areas of health care, with less documented and well-defined decision algorithms (such as in a referral hospital, for example) Tracker may be best used for simple data collection, allowing the clinician to determine the best use of the data for patient triage, and allowing the standardized data elements to be used for additional reporting or other purposes.


## Exemplo de casos de uso do rastreador { #example-tracker-use-cases } 

Throughout this guide, we will refer to use cases to give real-world examples of planning principles, decision points, software and data utilization, common hurdles and issues, and lessons learned at different stages of the Tracker planning and implementation process. A short introductory summary of these individual use cases is provided here. Greater detail for some of the use cases can be found on www.dhis2.org.

### Pacotes de rastreadores pré-configurados { #pre-configured-tracker-packages } 

De acordo com o [WHO’s Analysis and use of Health Facility Data Toolkit] (https://www.who.int/healthinfo/tools_data_analysis_routine_facility/en/), programas Tracker pré-configurados foram criados para cobrir uma série de tópicos de saúde. Esses pacotes pretendem ser o ponto de partida para os programas de país, permitindo uma configuração adicional para corresponder ao contexto local, enquanto mantém os padrões globais para indicadores e prática. Eles podem ser adicionados aos sistemas DHIS2 existentes, juntos ou individualmente. Esses pacotes podem ser acessados no link acima, bem como em who.dhis2.org. Os pacotes pré-configurados atuais cobrem os seguintes tópicos:

- Eventos adversos para imunização
- Notificação de nascimento, natimorto e morte para CRVS
- Causa da morte (incluindo códigos CID-10 da lista de mortalidade inicial)
- Investigação do local de reprodução da malária
- Diagnóstico, tratamento, caso e investigação domiciliar da malária
- Malaria Foci Investigation
- Campanhas de imunização em massa
- Registro de imunização de rotina
- Vigilância de casos de tuberculose

Pacotes adicionais que ainda estão em desenvolvimento podem ser acessados em https://who.dhis2.org/documentation/work_in_progress.html.

### Botsuana: Programa de Nutrição e Imunização { #botswana-nutrition-and-immunization-program } 

O Botswana criou um programa combinado de nutrição e imunização que fornece serviços essenciais para crianças pequenas que recebem assistência nutricional, ao mesmo tempo que garante que as crianças atingem os seus indicadores de crescimento e recebem o conjunto completo de vacinas. Trabalhando com a equipe de Botswana, a plataforma Tracker foi aprimorada para produzir escores z padronizados, fornecendo uma avaliação rápida de peso para altura, peso para idade e altura para idade.

### Gana: HIV / ART e outros módulos eTracker { #ghana-hivart-and-other-etracker-modules } 

Desde 2012, os Serviços de Saúde de Gana lideram um programa pioneiro em relatar dados de pacientes por meio de programas DHIS2 Tracker ("eTrackers"). Em 2019, eles estavam usando 8 módulos eTracker diferentes. Um excelente exemplo é o HIV / ART eTracker, que rastreia pacientes individuais por meio de testes e tratamento e torna mais fácil para o pessoal de saúde identificar e acompanhar os inadimplentes, ao mesmo tempo que dá suporte ao fluxo de relatórios para dados agregados de HIV, que tem estado em andamento em Gana desde 2006.

### Palestina: eRegistry de saúde materno-infantil { #palestine-maternal-and-child-health-eregistry } 

Cada mulher na Palestina é designada a uma clínica de cuidados de saúde primários e, se essa clínica não fornecer os serviços de que necessita, ela é convidada a visitar uma clínica de nível superior. Este sistema de referência requer um eRegistry que controla o acesso aos arquivos clínicos do paciente, oferece suporte à continuidade do cuidado em diferentes locais de saúde, permite a entrada de dados de vários pontos diferentes e fornece análises para ajudar a conduzir decisões de acordo com as diretrizes de cuidados pré-natais da Palestina. Nossa colaboração com a Palestina começou em 2014. O desenvolvimento e implementação do eRegistry de saúde materno-infantil (MCH) incluiu uma abordagem iterativa e um diálogo dinâmico entre os desenvolvedores, legisladores, funcionários de saúde pública e prestadores de cuidados de saúde. Esta implementação apresenta o uso extensivo de mensagens SMS automatizadas para se comunicar com os pacientes, bem como painéis de melhoria de qualidade para medir o desempenho das clínicas e apoiar a prestação de cuidados de qualidade.

### Zimbábue: Programa Nacional de Controle da Malária { #zimbabwe-national-malaria-control-program } 

A implementação do DHIS2 Android Tracker no Zimbábue começou em 2014 como um projeto colaborativo entre o Programa Nacional de Controle da Malária (NMCP) e a Universidade de Oslo, e desde então foi dimensionado para cobrir quase metade dos mais de 60 distritos do país. Esta implementação apresenta coleta de dados offline, dados de localização detalhados e coleta e análise de dados quase em tempo real, e é um exemplo de trabalho com várias partes interessadas em um nível global para desenvolver um programa com potencial de expansão em regiões geográficas e áreas de doenças.




# Meu projeto está pronto para o rastreador? { #is-my-project-ready-for-tracker } 

## Perguntas de prontidão e principais considerações { #readiness-questions-and-key-considerations } 

Esta seção tem como objetivo descrever algumas das principais condições da paisagem que devem ser bem compreendidas antes de prosseguir com a implementação do Tracker. Devido ao fato de que muitos dos países onde o Tracker está sendo introduzido já estão usando DHIS2 para o HMIS nacional ou outras finalidades agregadas, é importante destacar algumas das principais diferenças entre os sistemas DHIS2 Tracker e Aggregate, a fim de planejar adequadamente para as mudanças que podem precisar ser feitas em torno da implementação e administração.

Os programas rastreadores freqüentemente expandem o alcance do sistema de informação, estendendo-o a usuários que não estavam usando um sistema eletrônico de informação de qualquer tipo. Inerentemente, os dados individuais requerem considerações adicionais sobre privacidade e segurança dos dados. Esses dois fatores significam que as implementações do Tracker normalmente exigem:

- esforços de treinamento em maior escala entre quadros de trabalhadores que também podem ter altas taxas de rotatividade;
- maior ênfase na aceitação do usuário e no mapeamento das práticas de trabalho existentes;
- hardware adicional para captura de dados, incluindo o gerenciamento desse hardware ao longo do tempo;
- cobertura de rede confiável e / ou estratégias para lidar com conectividade intermitente;
- maior consciência e capacidade de privacidade e segurança;
- maior capacidade de suporte de TI que pode resolver problemas para uma base de usuários muito maior; distribuído por uma geografia maior.

Essas e outras recomendações serão discutidas em mais detalhes nas seções abaixo. A série de perguntas a seguir pode ser útil ao avaliar inicialmente a prontidão para uma nova implementação do Tracker. ** Em particular, se o seu caso de uso envolver a coleta de dados de identificação pessoal (relacionados à saúde ou outros), você deve revisar e refletir sobre as seguintes questões antes de começar. **

- Is there *political and institutional will* to undertake implementation of point-of-service individual-level large-scale data collection?

- É viável fornecer um sistema para a coleta real de dados do ponto de atendimento, sem criar carga de documentação adicional para os prestadores de cuidados?

- What is the *added value* and *meaningful use* of patient-level data in this context? What are the specific questions that only this data can answer?

- Como os dados serão usados para tomar decisões substantivas, por prestadores de cuidados, gerentes e formuladores de políticas?

- Existem leis, regulamentos em vigor para a coleta, armazenamento e uso de dados de nível individual e de identificação pessoal? Alternativamente, existem mecanismos para garantir que tais leis estarão em vigor em um futuro próximo?

- Existe financiamento, recursos e capacidade humana suficientes e sustentados para a concepção, implementação (computador e Internet), formação, manutenção, gestão de dados e monitorização do sistema?

- Existe uma maneira de identificar os clientes de forma exclusiva no ambiente do sistema de saúde?

- Como os registros de pacientes identificáveis são coletados e distribuídos em papel atualmente?

- Existem diretrizes clínicas / intervenções clínicas ou pelo menos alguma forma de orientação para a prática clínica? Existe uma lista de itens de relatório no HMIS e suas definições detalhadas?

- Como os dados em nível de serviço e paciente são coletados, gerenciados e compartilhados atualmente no sistema de saúde?

*References*:

1.  lista de verificação mERA: [https://www.bmj.com/content/352/bmj.i1174](https://www.bmj.com/content/352/bmj.i1174)
2.  Princípios de Desenvolvimento Digital
3.  Public Health Informatics - uma perspectiva de país em desenvolvimento: [https://global.oup.com/academic/product/public-health-informatics-9780198758778?cc=ps&lang=en&](https://global.oup.com/academic / product / public-health-informatics-9780198758778? cc = ps & lang = en &)


## Considerações gerais { #general-considerations } 

### Apoio e adesão institucional { #institutional-buy-in-and-support } 

** Certifique-se de que haja adesão e suporte institucional desde o início do seu projeto ** para criar um compromisso de longo prazo. Um projeto de rastreamento vincula de perto a prática de trabalho e o gerenciamento de dados e exigirá tempo, atenção e recursos. Irá alterar as práticas de trabalho no nível do solo para o positivo se for bem feito e negativamente se for mal feito. Portanto, é crucial que o projeto tenha um apoio sólido dos principais interessados, como gerentes de programa, unidades de TI, chefes de departamento, etc. Desde o início, um grupo de trabalho diversificado dos principais interessados e usuários deve estar envolvido na concepção dos objetivos e escopo do sistema, e este grupo de trabalho terá poderes para tomar decisões, como substituir alguns níveis de relatórios em papel ou adaptar processos de supervisão para responder a novos indicadores-chave de desempenho, possibilitados pela captura e análise de dados de nível individual.

Identify the division/department within the health organization of interest (such as Ministry of Health, public health institute, etc) with sustainable growth potential for housing a long-term core administrative development team. Engage relevant departments that should be involved, such as those working with data collection and management and IT, as well as health policy makers and implementers who can provide input on the workflows of health workers. Obtain agreement that the working group is not meant to dissolve at the end of scale-up, but rather should transform to the long term administrators and system managers.

Before committing to a large scale Tracker project, consider the funding landscape for the large and long term investments required for sustainability, particularly with device procurement, ongoing network costs, and training, both at the outset of the project, and routine training over time for new users. Are the goals and resource allocations from the funding mechanisms aligned with the group responsible for implementing tracker? Will the introduction of Tracker replace costs in other areas, such as printing reporting forms, that can be reprogrammed once the system is adopted and running well?

Considere como o rastreador pode afetar e potencialmente trazer melhorias para todos os níveis, não apenas para os usuários finais. Por exemplo, um programa Tracker que corresponda ao fluxo de trabalho clínico para o tratamento anti-retroviral pode ser projetado para trazer benefícios para a pessoa em tratamento, por meio de lembretes de consultas e um registro clínico compartilhado entre os centros de TAR. Isso pode trazer benefícios para o prestador de cuidados, automatizando alguns aspectos de seus relatórios e fornecendo suporte à decisão. Isso poderia agregar benefícios ao supervisor, fornecendo informações concretas sobre desempenho e desafios com base em dados; e poderia trazer benefícios para os gestores do programa, adicionando não apenas dados em tempo real, mas também introduzindo novos tipos de indicadores, como aqueles baseados em oportunidade ou qualidade, devido às oportunidades apresentadas pelos dados de nível individual.

Projetar para esses resultados não apenas aumenta muito o valor do sistema, mas ajuda a garantir a compreensão e a satisfação do usuário, e pode trazer melhorias significativas na prestação de cuidados de saúde. Esses tipos de recursos também podem ajudar a garantir a adesão de doadores e financiamento de doadores cruzados, já que o sistema pode satisfazer vários objetivos.



*References*:

 - [Principles of Donor Alignment for Digital Health](https://www.ictworks.org/principles-donors-digital-health/#.XXtj2SiF7mE)
  - [Principles for Digital Development](https://digitalprinciples.org/)


### Financiamento { #funding } 

** Garantir financiamento sustentável para desenvolvimento, implementação, treinamento e suporte contínuo ** para durar por todo o ciclo de vida dos projetos de rastreadores. A implementação de um rastreador requer financiamento nas seguintes fases:

- Levantamento e desenvolvimento de requisitos
- Treinamento da equipe central de TI, equipe administrativa e gerentes de programa, especialmente se eles estiverem familiarizados apenas com relatórios agregados
- Compra e substituição de dispositivos e soluções de backup (dispositivos alternativos e papel)
- Implementação / dimensionamento
- End user training, including per diem and workers salariesmake sure
- Custos de conectividade (internet) e SMS, rastreador pode exigir investimentos em infraestrutura para sustentá-lo em campo
- Suporte de TI no nível do usuário final
- Hospedagem
- Avaliação e manutenção contínuas do programa rastreador
- Treinamento (s) de atualização

A experiência de implementações de rastreadores existentes aponta para o início e implementação de projetos de rastreadores para ser a fase que consome mais recursos. Um programa Tracker complexo que modela fluxos de trabalho clínicos e substitui relatórios em papel pode levar um ano para ser elaborado e obter adesão e suporte adequados. Os treinamentos nacionais de milhares de usuários consomem muitos recursos. Fornecer novo hardware, como dispositivos Android ou laptops, requer um investimento significativo. Contratar e treinar pessoal adicional na unidade de TI para gerenciar um grande aumento de usuários exige orçamentos maiores.

Conforme o tempo passa, os maiores custos estão relacionados ao treinamento de atualização e ao suporte contínuo ao usuário. Para garantir a implementação de um rastreador sustentável, é crucial que o financiamento seja garantido não apenas por meio do aumento de escala, mas também para cobrir os custos de rotina no futuro. Normalmente, os projetos deixam de ser sustentáveis quando fundos insuficientes são alocados para uma equipe de TI com equipe suficiente e / ou manutenção contínua e treinamento de atualização.

Os custos associados à introdução de sistemas individuais podem ser um pouco compensados por processos aprimorados; redução de orçamentos para impressão e transporte de formulários em papel; melhor adesão às diretrizes e mecanismos de referência; Dito isso, digitalizar os processos de trabalho atuais é um investimento de longo prazo e os planos devem ser feitos desde o início para ver esses projetos como uma mudança na prática rotineira, exigindo suporte contínuo.

*References*:

 - Pacote de aprendizagem - treinamento ([http://eregistries.org/wp-content/uploads/2017/11/05-training.pdf](http://eregistries.org/wp-content/uploads/2017/11/05 -training.pdf))
 - Registros para avaliação de resultados de pacientes: um guia do usuário [Internet]. 3ª edição. [https://www.ncbi.nlm.nih.gov/books/NBK208631/](https://www.ncbi.nlm.nih.gov/books/NBK208631/)

### Legislação e políticas { #legislation-and-policies } 

Antes de implantar o Tracker, é importante revisar a legislação e as políticas relevantes de privacidade e gerenciamento de dados em nível local, nacional e internacional. A coleta de dados individuais é categoricamente diferente dos dados agregados e requer mais atenção à privacidade e segurança. Na ausência de políticas nacionais claras, as diretrizes de segurança e confidencialidade de dados - tanto técnicas quanto administrativas - devem ser desenvolvidas e acordadas. As práticas adequadas que devem ser claras e documentadas vão desde o acesso aos dados, aos requisitos de hospedagem e às práticas do usuário.

Muitos tipos de dados de saúde individuais podem ter consequências graves se a privacidade não for protegida. Por exemplo, em países onde é ilegal ou culturalmente inaceitável ser uma mulher grávida solteira, a violação dessas informações pode causar danos ao indivíduo e à família. Se o cliente não tiver certeza de que seus dados serão protegidos de forma adequada, ele pode não ser aberto a seu médico sobre suas preocupações com a saúde, reduzindo a qualidade do tratamento. Os dados de identificação pessoal podem ser extraídos para fins políticos ou para identificar indivíduos em grupos sistematicamente marginalizados.

Existem várias áreas específicas que devem ser revisadas durante a fase de planejamento da implementação do Tracker. Conforme abordado na [Ferramenta de análise da situação de eRegistries] (http://eregistries.org/wp-content/uploads/2017/06/Situation-Analysis.pdf), há cinco áreas nas quais se concentrar:

1. compreender a paisagem legal
2. governança existente em torno dos registros de saúde
3. orientação, legislação e práticas atuais associadas à coleta e armazenamento de dados
4. requisitos de supervisão e relatórios
5. potenciais e implicações éticas e sociais existentes

As políticas podem ser drasticamente diferentes entre os países, e é extremamente importante avaliá-las localmente no início de cada projeto Tracker. Também é fundamental obter suporte local para políticas de privacidade. A experiência tem mostrado que mesmo um documento legal bem elaborado, desenvolvido externamente, sem adesão local, pode ser arquivado e não ser usado porque a (s) organização (ões) local (is) não estiveram envolvidas em seu desenvolvimento e não foi traduzido para o idioma local. A implementação de um Tracker deve considerar o usuário final em todos os aspectos - incluindo legislação e políticas.

Dados de nível individual têm valor significativo para pesquisas e análises futuras, muito depois de coletados. Um [artigo 2018 IMIA Yearbook of Medical Informatics] (https://www.ncbi.nlm.nih.gov/pmc/articles/PMC6115206/?report=reader#!po=43.3333), mostra que o número do registro de saúde as solicitações de acesso estão crescendo. Para ajudar a garantir o gerenciamento adequado de dados confidenciais no futuro, deve-se considerar o estabelecimento de procedimentos para acordos de compartilhamento de dados, se eles ainda não estiverem estipulados localmente. Isso ajudará a manter uma abordagem sistemática e justa aos pedidos de informação e seu uso - seja de uma organização de pesquisa, doador ou outra parte interessada. Em situações em que não há orientação ou orientação limitada, é recomendado abordar as questões descritas no [eRegistries Governance Toolkit] (http://eregistries.org/wp-content/uploads/2017/08/eregistries-governance-toolkit. pdf) e receba aprovação governamental apropriada para políticas de rotina relacionadas ao compartilhamento e acesso de dados.

O planejamento adequado do projeto incluirá tempo e recursos para a identificação de políticas, procedimentos e protocolos essenciais para privacidade e segurança. O eRegistries Governance Toolkit fornece orientação prática sobre como seguir em frente por meio dessas etapas. Uma revisão completa com as partes interessadas locais sobre quais dados serão coletados e como podem ser mal utilizados pode ajudar a impulsionar o processo. Também é importante identificar um prazo para revisitar seu plano de privacidade à medida que as políticas mudam com o tempo. Manter-se informado sobre essas mudanças o ajudará a planejar melhor ao navegar pelo desenvolvimento, implementação e manutenção do Tracker.

Detalhes específicos sobre os recursos de privacidade do software Tracker e orientações para a configuração adequada podem ser encontrados nos [guias de implementação e usuário DHIS2] (https://docs.dhis2.org/2.33/en/index.html).

*References*:

 - [Governance guidance toolkit](http://eregistries.org/wp-content/uploads/2017/08/eregistries-governance-toolkit.pdf)
 - [Situation Analysis Toolkit](http://eregistries.org/wp-content/uploads/2017/06/Situation-Analysis.pdf)
 - [Frost MJ, Tran JB, Khatun F, Friberg IK, Rodriguez, DC: What Does It Take to Be an Effective National Steward of  Digital Health Integration for Health Systems Strengthening in Low-and Middle-Income Countries? Global Health: Science and Practice 2018, Vol 6, Supplement 1](https://www.ncbi.nlm.nih.gov/pmc/articles/PMC6203416/pdf/S18.pdf)
 - [Myhre SL, Kaye J, Bygrave LA, Aanestad M, Ghanem B, Mechael P, Frøen JF: eRegistries: governance for electronic maternal and child health registries. BMC pregnancy and childbirth 2016, 16(1):279](https://www.ncbi.nlm.nih.gov/pmc/articles/PMC5035445/)
 - [Kloss L, Brodnik, M, Rinsehart-Thompson, L: Access and Disclosure of Personal Health Information: A Challenging Privacy Landscape in 2016-2018. IMIA Yearbook of Medical Informatics 2018, 60-66](https://www.ncbi.nlm.nih.gov/pmc/articles/PMC6115206/?report=reader#!po=43.3333)
 -  Conjunto de ferramentas de estratégia de eHealth nacional da OMS de 2012 e da União Internacional de Telecomunicações (UIT) http://apps.who.int/iris/handle/10665/75211
 - O roteiro de 2015 para medição e responsabilidade em saúde https://www.who.int/hrh/documents/roadmap4health-measurement_accountability.pdf?ua=1Foundations


### Capacidade e competência { #capacity-and-competence } 

Dado o maior alcance do Tracker, tanto em termos de usuários quanto de suporte de TI, é importante ** avaliar e garantir capacidade suficiente e competência relevante ** para planejar, projetar, desenvolver, oferecer suporte e usar o programa tracker. É possível que existam áreas no país onde o Tracker é adequado, e outras áreas onde não é, com base na capacidade dos usuários pretendidos e seu acesso ao hardware e rede apropriados. Em muitos casos, é benéfico implantar o Tracker em fases, em vez de tentar introduzi-lo como um sistema de rotina em áreas ou com usuários que não estão preparados. Uma avaliação deve ser realizada antes de desenvolver o plano de implantação, para orientar o aumento de escala e o alcance do sistema com base na adequação.

O grupo de trabalho das principais partes interessadas descrito na seção sobre ** Compromisso e suporte institucional ** deve ser engajado desde o início para avaliar a qual grupo de usuários o sistema se destina, determinar qual departamento será responsável pelo suporte de longo prazo, quem terá a tarefa de fornecer treinamento, tanto inicialmente quanto ao longo do tempo, etc.

Pode ser necessário treinamento adicional para a unidade de TI, aumentando sua capacidade de gerenciar adequadamente os dados de identificação pessoal ou fornecer suporte para qualquer novo hardware fornecido.

As ferramentas e painéis configurados no Tracker devem ser projetados com os usuários pretendidos, a fim de garantir que sejam apropriados e aceitos.

Os treinamentos para usuários podem exigir não apenas currículos específicos para o sistema, mas também treinamento geral sobre o uso, manutenção e solução de problemas de hardware e acesso à rede. Auxílios de trabalho simples e acesso a suporte de TI de primeira linha devem ser desenvolvidos e estabelecidos para aumentar o número de necessidades do usuário que podem ser atendidas fora da equipe de nível central.


*References and Resources*:

- Myhre SL, Kaye J, Bygrave LA, Aanestad M, Ghanem B, Mechael P, Frøen JF: eRegistries: governança para registros eletrônicos de saúde materno-infantil. Gravidez e parto BMC 2016, 16 (1): 279
- [Software Development learning package](http://eregistries.org/learning-packages/)
- [Governance guidance toolkit](http://eregistries.org/learning-packages/)
- [Principles of Digital Development](https://digitalprinciples.org/)


### A infraestrutura { #infrastructure } 

É importante garantir infraestrutura adequada e suficiente, que pode ser diferente para o Tracker e para outros sistemas digitais existentes. Existem três grupos de infraestrutura necessária:

** Eletricidade e rede ** Em áreas onde a rede é estável, o uso do Tracker por meio do navegador de um laptop ou desktop é apropriado. Os dados do cliente do navegador são enviados instantaneamente para o servidor, sem armazenamento local fora do cache do navegador. Isso garante a fidelidade dos dados e aproveita o poder da computação do lado do servidor. Em áreas intermitentes ou de baixa conectividade, o aplicativo DHIS2 Android deve fazer uso do Tracker, pois cria uma cópia local do banco de dados e permite que o usuário continue trabalhando sem uma conexão direta com o servidor central. Projetos baseados em Android trazem requisitos adicionais com relação ao acesso à eletricidade para carregamento; Custos de SMS e dados; etc. Reveja as [Diretrizes de implementação de aplicativos DHIS2 Android] (https://www.dhis2.org/android-documentation) para obter mais informações.

** Servidores e hospedagem ** Com o aumento no número de usuários, a solução de hospedagem existente para o agregado DHIS2 pode não ser adequada e as implementações baseadas em Android sobrecarregam ainda mais os recursos do servidor. Considerando que, com os sistemas de relatórios com base mensal, às vezes é aceitável esperar opções de hospedagem de baixo desempenho, os programas Tracker que oferecem suporte aos processos de trabalho diários ou fluxos de trabalho clínicos exigem tempo de atividade constante e suporte de TI responsivo se surgirem problemas. É especialmente vital estabelecer um backup de rotina dos dados do Tracker em um local separado, para que a perda de dados críticos no servidor primário possa ser resolvida rapidamente. Faça uma avaliação das abordagens de hospedagem atuais, incluindo hardware e recursos humanos disponíveis, para desenvolver uma abordagem para a implementação do Tracker. Recomenda-se que os programas Tracker contendo dados de identificação pessoal sejam hospedados em um ambiente separado do sistema agregado, a fim de garantir maior segurança. Embora muitos países atualmente hospedem instalações locais de DHIS2, vale a pena considerar uma opção de hospedagem baseada em nuvem para programas Tracker, onde hardware padrão da indústria e suporte técnico podem ser garantidos ao longo do tempo.

** Hardware para usuários finais ** Dada a adoção em larga escala de projetos de saúde digital, é possível que o hardware existente disponível para usuários-alvo seja suficiente para uma nova implementação de rastreador. Uma avaliação deve ser conduzida para revisar a disponibilidade de computadores e dispositivos Android e determinar onde hardware adicional pode ser necessário. Contratos de longo prazo para manutenção e substituição de hardware devem ser estabelecidos para garantir a sustentabilidade do sistema Tracker após a vida útil do hardware originalmente adquirido.

### Considerações de Segurança { #security-considerations } 

Security is primarily about people.  The people who are the subjects of data collected; the people who use the data; the people who are responsible for implementing technical measures; and the people whose responsibility it is to manage the security of the particular tracker project.

It is not sufficient to assume that technical implementers will have made a best effort to make the system as secure as possible.  In order to meet any level of regulatory compliance and avoid legal hazard it is usually necessary to be able to demonstrate that reasonable steps have been taken to secure the system.  At a minimum this implies that:

1.  There is a role defined in the organisation whose responsibility it is to be concerned with security related issues.  This might be a chief security officer, a data protection officer or some other designation. The important thing is that there is an individual whose job it is to be concerned about, and to be accountable for addressing, security considerations.  Ideally this is not a technical role, but one closer to senior management.
2.  There should be some documented security plan around the tracker program. This is sometimes referred to as a security posture. It should indicate the principles that are important to the organisation and the processes which are in place to identify, monitor and mitigate risk on an ongoing basis and various. The security plan can include other processes such as acceptable use policies (for employees); Non-Disclosure Agreements (for contracters); access policies; backup and disaster recovery plans; minimum standards for software deployment and configuration etc.

In some organisations the role of security officer is already established and well defined.  In many others it is an evolving need which manifests itself in an environment characterised by the absence of strong regulation, weak IT institutions and management structures, and a lack of appropriate training.  There are existing standards and methodologies which can be useful in shaping such a role, such as the ISO27000 series (including useful free [online material](https://www.iso27001security.com/html/toolkit.html) and templates).  It is not an item frequently seen on funding and budget proposals, but security management training might well be one of the more important items to consider and budget for.

Uma lista não exaustiva de tarefas de alta prioridade a considerar:
1.  Make sure the software setup is technically strong, documented and preferably automated.  There are various strategies that can satisfy security concerns, some of which are documented in the DHIS2 Installation Guide.  For system administrators, attending server academy is a good way of meeting peers and exchanging ideas.  Also interact with the server admin community via the community of practice.  There is also telegram group of DHIS2 system administrators, which can be a useful way to ask and answer questions. (to join, email Lamin - laminbjawara@gmail.com ).
2. make sure you have a team (at least 2) of sysadmins that are responsible for the daily maintenance of the system.  Depending on a single person in this role is one of the biggest identified risks in many implementations.
3.  Conforme descrito acima, alguém DEVE ser responsável pela segurança. Essa função deve:
- report directly to management
- gerenciar o risco geral (o registro de risco é seu amigo)
- certifique-se de que os administradores de sistemas estão fazendo seu trabalho
- be aware of local law, constraints and SOPs regarding data handling and privacy.   In their absence, or where they are
inadequate, develop and maintain good practice guidelines locally.
4. Ensure that there is a backup plan, including off site, which is regularly tested.  Straightforward unrecoverable data loss has been the single most common security problem countries.
5. DHIS2 Tracker systems should be audited regularly. This can be officially conducted by an auditor general; peer-to-peer within the DHIS2 community; or by engaging the services of an external auditor.  Audits are the best way to ensure that systems remain aligned with secuirty policies.





# Planning your Tracker Implementation { #planning-your-tracker-implementation } 

O objetivo desta seção é fornecer uma visão geral de alto nível das considerações que levarão ao sucesso na implementação do seu Tracker, agrupadas por tópico e com links para ferramentas específicas.

Esta seção cobrirá:

1. Defining purpose, aim and scope
2. Escala
3. Design and Configuration process
4. Entrada de dados em tempo real vs. secundária
5. Celular vs. Web
6. Estabelecendo uma Equipe Principal
7. Hospedagem
8. Treinamento
9. Sair da cama

## DEFINE PURPOSE, AIM AND SCOPE { #define-purpose-aim-and-scope } 

Um propósito claro e objetivos bem definidos são a chave para estabelecer um entendimento comum do escopo e das limitações do projeto, e para ser capaz de comunicar o processo de desenvolvimento e execução de um programa Tracker interna e externamente.

- Defina os objetivos primários e secundários do programa Tracker.
- Identifique as entidades rastreadas, o escopo da coleta de dados e os quadros de saúde envolvidos na coleta de dados.
- Determine como identificar exclusivamente membros da população-alvo (por exemplo, uso de números de identificação únicos ou uma combinação de atributos).
- Esclareça as expectativas iniciais entre a equipe principal, bem como outras partes interessadas e usuários do sistema.
- Faça um brainstorm e discuta as principais questões e áreas de preocupação a serem abordadas durante a fase de desenvolvimento.
- Prepare-se para conduzir uma fase de desenvolvimento: Desenvolva um cronograma e incorpore planos de contingência para eventos inesperados que incorrem em atrasos. Articule os problemas previstos e discuta como mitigá-los.

## Escala Determinante { #determining-scale } 

Because individual-level data systems (i.e. Tracker) are aimed at the lowest levels of a system, Tracker programs can dramatically increase the number of users, hardware/devices, technical resources and organisational support required to implement and maintain the system. Countries often have limited personnel that are qualified to manage deployments and there are significant costs associated with the work. 

Scale can refer to several dimensions: programmatic scale, functional scale or geographic scale, to mention a few. 

Scaling geographically can thus take time and resources. There are different strategies to achieving geographical scale i.e. cover one region completely or start “small” in several regions at the same time and scale at a slightly slower pace in parallel.

As implementations scale, a snowball effect tends to take place. When you start scaling things will happen faster; the number of users can increase exponentially, which requires more people and stronger support mechanisms. Hence, planners can ensure that support teams are equipped to handle an increased volume and speed by taking into consideration the following:

** Finalize e teste o rastreador antes de dimensioná-lo **
Reúna evidências e demonstre o impacto antes de tentar escalar. Considere a redução do investimento em recursos que não demonstram impacto ou recursos que consomem muitos recursos e têm impacto limitado. Você deve ter um projeto / configuração final que é testado pelo usuário e pilotado e produz os resultados desejados em termos de gerenciamento de informações e os relatórios desejados ANTES de escalar. Quando você começa a dimensionar, não é hora de experimentar. Em outras palavras, teste seu design e configure com 100 em vez de 5.000 usuários.

**Governança**
Certifique-se de que haja processos de governança sólidos e uma distribuição clara de responsabilidades antes de tentar escalar. Certifique-se de auditar este processo para garantir que o processo de governança seja seguido. A governança adequada também é fundamental para garantir a flexibilidade e adaptabilidade de seu projeto de rastreador, por exemplo, rotinas para adicionar novos conjuntos de opções ou novas clínicas. Quem toma essas decisões e como você as documenta e como as comunica aos usuários?

** Custo / considerações financeiras **
Considere seu modelo de financiamento, incluindo opções de geração de receita, modelos de negócios sociais, o custo por usuário e caminhos financeiros para sustentar a iniciativa. O escalonamento leva ao aumento dos custos operacionais em termos de suporte, dispositivos e conectividade.

** Ampliação da infraestrutura **
Com maior escala, você precisa lidar com mais conexões que, por sua vez, requerem mais recursos de memória, capacidade de processamento, armazenamento e conectividade.

Parte do processo de dimensionamento garante que você tenha um plano sólido para uma recuperação rápida, porque mais pessoas dependem do sistema.

** Revise o processo do piloto **
Muitas vezes, a ampliação não pode ser feita com a mesma ferramenta e abordagem exata que é feita em um piloto, especialmente quando se trata do nível de recursos humanos e especialização necessários em treinamento e suporte para atingir o nível de uso alcançado em um piloto. Consequentemente, analise sua ferramenta e abordagem de implementação e considere quais aspectos podem ser reprojetados e simplificados para atingir seu objetivo principal


*References*:    

- Princípios de Desenvolvimento Digital

*Tools*:

- Avaliação de prontidão


## Processo de design e configuração { #design-and-configuration-process } 

** Envolva os usuários de perto no design e na configuração de seu programa Tracker ** para garantir que ele melhore e apoie seu trabalho. Para desenvolver um programa Tracker, é necessário definir quais dados inserir, definir um fluxo de trabalho e definir as regras do programa. Todas essas decisões de definição devem ser feitas em estreita colaboração com os usuários, uma vez que se relacionam diretamente com - e podem afetar - como eles fazem seu trabalho.

We recommend to start the design process by asking the following questions to initiate discussions:

1. Qual é a finalidade dos dados que você coleta? Como você pretende usar os dados?
2. Quem se beneficiará com a implementação do Tracker?
3. Como os usuários que inserem os dados se beneficiam da implementação do Tracker?
4. Do you currently collect this data today? How? What is the current data flow?
5. Existem elementos de dados que você coleta atualmente e que não precisa?


**FORMATIVE PHASE**

Obtenha uma compreensão clara do sistema de saúde (ou outro sistema que o programa Tracker irá abranger, para implementações não relacionadas à saúde) para entender os "pontos problemáticos" do sistema atual, identificar oportunidades de melhoria e, finalmente, desenvolver um sistema útil e adequado que aborda essas questões e oportunidades. Isso inclui a compreensão dos profissionais de saúde, os dados que eles coletam, seus fluxos de trabalho clínicos e seus sistemas de supervisão e notificação.

- Preparar e realizar visitas de campo para mapear fluxos de trabalho clínico e demandas de supervisão e relatórios com a participação de todos os quadros do pessoal de saúde que usariam o Tracker.
- Prepare e realize reuniões com as partes interessadas para informar, explorar e obter feedback.
- Verifique as diretrizes nacionais (clínicas) existentes relevantes para o escopo do Rastreador.
- Mapeie o fluxo de trabalho de documentação existente: documente o que os trabalhadores fazem atualmente e certifique-se de que seu projeto apóie suas práticas de trabalho em vez de torná-los mais pesados.
- Indicadores de mapa e pontos de dados associados para relatórios.
- Considere se há necessidade de revisão das diretrizes ou pontos de relatório. Nesse caso, faça planos paralelos para revisão das diretrizes e relatórios.

**DEVELOPMENT PHASE**

- Obtenha uma visão geral das diretrizes clínicas atuais, intervenções, indicadores e algoritmos.
- Com base nas diretrizes atuais - bem como indicadores e pontos de dados para relatórios - formule algoritmos e pontos de dados para rastreamento eletrônico.
- Defina os grupos-alvo e o nível de complexidade do suporte à decisão. De acordo com o nível de suporte de fluxo de trabalho, crie regras para o suporte e comunique isso aos desenvolvedores de software em um formato de requisitos acordado.
- Permitir um processo de revisão iterativa para garantir que a tradução dos desenvolvedores seja consistente com as necessidades dos provedores de saúde.

**CUSTOMIZATION AND TEST PHASE**

Esta fase é um processo iterativo de trabalho com as partes interessadas, desenvolvedores de software, implementadores e usuários e incorporando seus comentários.

- Estabeleça um sistema digital estruturado e facilmente acessível para canais de feedback abrangentes e imediatos entre o grupo de trabalho principal.
- Certifique-se de que o desenvolvimento de conteúdo esteja alinhado com as expectativas das partes interessadas, usuários do sistema e financiadores.
- Mantenha discussões contínuas e de mente aberta sobre tradução, uso de botões de informação, etc., para evitar interpretações erradas.
- Certifique-se de que haja processos contínuos e paralelos que envolvam e promovam o fluxo de informações entre todos os grupos de usuários nessas fases.
- Defina marcos para desenvolvedores, implementadores e usuários.
- Estabeleça um sistema digital online estruturado e facilmente acessível para feedback abrangente e detalhado dos usuários finais.

**WHO DHIS2 Health Data Toolkit**

DHIS2 works in partnership with the World Health Organization (WHO) on a variety of health-related initiatives, including the creation of standardized metadata packages to strengthen data use on a national and international level. The WHO-approved DHIS2 Health Data Toolkit provides a digital set of tools to support adoption of WHO routine health data standards into the national routine health information system. Aligned with the WHO Toolkit for Routine Health Information Systems Data, integrated analysis and program-specific DHIS2 modules are designed according to global data analysis guidance and standards for measurement. The DHIS2 toolkit provides a fully digitized reference implementation consisting of installable metadata packages, technical documentation, demo databases and implementation guidance. WHO-approved DHIS2 metadata packages can be installed in standalone DHIS2 systems or integrated into existing DHIS2 instances and adapted according to national context. The metadata packages bring together global standards and DHIS2’s evidence-based design practices for integrated health information systems in an installable toolkit that can be used for design reference or as a direct import for local use.

For more information on the WHO DHIS2 Health Data Toolkit documentation and tools, [see here](https://dhis2.org/who/).

## Determinando sua estrutura de M&A { #determining-your-me-framework } 

A monitoring and evaluation (M&E) framework is an essential component of a DHIS2 Tracker implementation. It enables the assessment of the implementation's progress and success, and the identification of areas for improvement. A mature tracker implementation should have a robust M&E framework in place to ensure that data collection, use practices, DHIS2 version updates, user administration, security, hosting, user support, and training are all being effectively managed.

**What does a mature tracker implementation look like?**

A mature tracker implementation should have a comprehensive M&E framework that covers all aspects of the implementation. This includes regular evaluations of data collection, data use practices, DHIS2 version updates, user administration, security, hosting, user support, and training. The M&E framework should also include a process for identifying and addressing any issues that arise.

**Maintain and evaluate data collection**

It is important to regularly evaluate the data collection process to ensure that it is accurate, complete, and timely. This includes assessing the quality of data entered, the completeness of the data, and the timeliness of data submission. Identifying and addressing any issues with data collection will improve the overall quality of the data.

**Maintain and evaluate data use practices**

Regularly evaluating data use practices will ensure that the data is being used effectively to inform decision-making and that it is being used in a way that aligns with the organization's goals and objectives. This includes assessing the quality of data analysis, the use of data in decision-making, and the effectiveness of data dissemination.

**Maintain and evaluate keep up with new DHIS 2 versions**

Keeping up with new DHIS2 versions is important to ensure that the implementation is using the most up-to-date version of the software. This includes regularly assessing the version of DHIS2 being used, evaluating the benefits of upgrading to a new version, and implementing any necessary upgrades.

**Maintain and evaluate user admin**

Regularly evaluating user administration will ensure that users have the appropriate access to the system, that user roles and permissions are properly configured, and that user accounts are being managed effectively. This includes assessing the number of active users, the number of new users, and the number of inactive users.

**Maintain and evaluate security**

Regularly evaluating the implementation's security measures will ensure that the data is being protected and that the system is in compliance with security regulations. This includes assessing the effectiveness of the system's authentication and authorization processes, the security of the hosting environment, and the effectiveness of the system's disaster recovery plan.

**Maintain and evaluate hosting**

Regularly evaluating the hosting environment will ensure that the system is properly configured, that the system is performing well, and that the system is available to users. This includes assessing the stability and performance of the hosting environment, the security of the hosting environment, and the availability of the system.

**Maintain and evaluate user support**

Regularly evaluating user support will ensure that users are able to effectively use the system and that any issues are being resolved in a timely manner. This includes assessing the responsiveness of the user support team, the effectiveness of the user support team, and the quality of the user support documentation.

**Maintain and evaluate training**

Regularly evaluating the training program will ensure that users are properly trained and that the training program is meeting the needs of the organization. This includes assessing the effectiveness of the training program, the quality of the training materials, and the number of users who have completed the training program.

It is important to note that the monitoring and evaluation framework should be regularly reviewed and updated to ensure that it is meeting the needs of the organization and that it is aligned with the organization's goals and objectives. It should also be compliant with any national and international regulations and standards related to data security and protection.


## Entrada de dados em tempo real vs. secundária { #real-time-vs-secondary-data-entry } 

**Carefully evaluate whether the data should be entered real time** as this has important implications for how you structure your project. Trackers are used to track individuals through defined programs with associated data elements and rules. The data can be captured by health personnel during the consultation (real-time point of care), or at the end of the day (or when they have time to enter it). The two different approaches naturally have consequences for what the Tracker is used for.

Entering data in real-time allows for real-time decision support, validation of data, and the prevention of double data entry. However, it also requires a reliable internet connection, which may not be available in certain locations. Additionally, real-time data entry may require the use of mobile devices, which can introduce additional challenges such as device maintenance, power supply, and training for health personnel.

If the data are entered at the end of the day or when the health personnel have time, it eliminates these challenges with real-time data entry. However, it also means that the data is not available in real-time and may not be as useful for real-time decision support.

When deciding on the approach, it's important to consider the available resources, the local context, and the organization's goals and objectives. It's also important to have clear Standard Operating Procedures (SOPs) for backup paper files, easy navigation to find clients and mechanisms to prevent errors (such as rules that make it impossible to enter a date in the future).

## Mobile vs Web { #mobile-vs-web } 

** Considere como e quando as pessoas que fazem a entrada de dados podem acessar a Internet ** Existem contextos ou locais onde acessar o servidor DHIS2 central online através de um computador é desafiador ou mesmo impossível. O DHIS2 Android Capture App foi projetado e desenvolvido para responder a essas situações. No entanto, a introdução de dispositivos móveis em uma implementação de DHIS2 impactará seu projeto em muitos níveis, por isso é uma decisão que precisa ser tomada de uma maneira informada e consciente.

** Web ou celular? **
Existem dois aspectos principais que devem ser levados em consideração ao considerar um componente móvel para a implementação do seu Tracker: a disponibilidade da Internet e a mobilidade dos seus postos de saúde. Uma determinada implementação do Tracker pode precisar abordar apenas um desses dois aspectos, ou ambos ao mesmo tempo. Tentaremos defini-los e ajudá-lo a analisar sua situação nesta seção.

- ** Mobilidade **: São equipes que prestam seus serviços em diferentes localidades por meio de uma unidade móvel. Nos locais visitados pela unidade móvel, poderia haver uma instalação com estação de trabalho própria para coleta de dados, mas às vezes a entrada de dados é feita em um ambiente mais dinâmico ou no próprio veículo. Nesses casos, nem sempre é fácil carregar um laptop e pode ser mais adequado usar um dispositivo móvel.

- **Internet availability**: There are many locations where access to the Internet is challenging. The different possible scenarios can be summarized in two main cases: *Internet connection is unstable or limited*, and *Internet connection is not available*.  

    - When the *Internet connection is unstable or limited* scenario is confined to certain moments in the day, it is possible to consider the use of either mobile or web for data entry. DHIS2 web data entry allows for the continuation of data entry when the Internet is interrupted. The data entered will be stored locally in the web browser cache, and the next time the user gets online the data, it will be automatically uploaded. Is important to note that this offline support depends on web browser storage and will only work while the browser window remains open. If a user is collecting data offline and closes the window where s/he is working while still offline, the data will unfortunately be lost. Offline support *absorbs* the impact of intermittent Internet connectivity interruptions to provide a smooth and stable work experience, but is not a full offline solution.

    - When *Internet connection is not available*, you should consider using the DHIS2 Android Capture App, which provides full offline support for data collection. This app can be used with both mobile devices and tablets, and it is also possible to run it on other devices such as Chromebooks. The Android Capture App can thus be suitable for those cases where you have Internet availability challenges but not challenges to mobility of the individuals doing the data collection.    

** Implicações do uso do aplicativo Android **
O DHIS2 Android Capture App facilita o uso offline da coleta de dados do Tracker, mas também traz implicações que devem ser consideradas desde as fases iniciais do projeto. Ter um componente móvel em sua implementação pode impactar seu planejamento, orçamento, treinamento, configuração e estratégia de implantação, entre outros aspectos.

- ** Configuração DHIS2: ** Ao configurar o Tracker para uso com dispositivos móveis, você precisa prestar atenção especial à configuração dos usuários móveis, seu acesso à entrada de dados e unidades de organização. Normalmente, os usuários móveis devem coletar dados fisicamente nas áreas mais remotas e inacessíveis, portanto, não se espera que um usuário móvel colete dados de um grande número de instalações, como a hierarquia da unidade organizacional de todo o país. Embora não haja um número máximo de unidades de organização permitidas no aplicativo, um grande número pode ter impacto no desempenho dependendo dos recursos do dispositivo (memória, processador). Em geral, menos de 250 unidades organizacionais devem ser seguras, mas ainda é um número muito grande para um caso de uso móvel típico.
It is also very important to pay attention to the configuration of program rules and program indicators. The Android App aims to support all Tracker web functionalities, however some of them might behave slightly differently in Android, or be in the app development roadmap awaiting implementation. A detailed list of the behavior of program rules and program indicators in Android can be found in the _Program Rules_ and _Program indicators_ sections of the [Android App documentation]([https://www.dhis2.org/android-documentation](https://www.dhis2.org/android-documentation)).  

- **Visual representation of data collection:** The user experience of the Android App has been designed to be very visual and intuitive. Icons and colors can be used to configure the data entry forms and how they are displayed. Visual representation is configurable by the system administrator. There is an icon library of over four hundred images and a color palette, and both icons and colors are assignable to most metadata objects: Options, Data Elements, Attributes, Programs / Data Sets. More information for the visual configuration of DHIS2 can be found in the _Visual Configurations_ section of the [Android App documentation]([https://www.dhis2.org/android-documentation](https://www.dhis2.org/android-documentation)).  

- ** Teste: ** O teste é uma fase muito importante em qualquer implementação DHIS2. Você deve testar o aplicativo Android em paralelo com a configuração do seu servidor, para se certificar de que todas as configurações feitas no servidor estão refletidas e funcionando corretamente no aplicativo. Isso é especialmente importante durante a configuração das regras do programa. Mais informações sobre os diferentes tipos de teste e como planejar as fases de teste do seu projeto podem ser encontradas na seção _Testes_ das [Diretrizes de implementação móvel DHIS2] (https://s3-eu-west-1.amazonaws.com/content .dhis2.org / Publications / DHIS + 2 + Mobile + Implementation + Guidelines.pdf).

- ** Segurança: ** Dependendo da configuração do seu Tracker, você pode armazenar dados pessoais em dispositivos móveis e pode haver tensão entre a necessidade do sistema de saúde por dados identificáveis e o direito do paciente à privacidade. Garantir que os dados pessoais só sejam acessíveis por pessoal de saúde autorizado é de extrema importância. O gerenciamento adequado de dados pessoais é um componente crítico da educação do usuário e é vital estabelecer SOPs que descrevam as medidas de segurança a serem aplicadas e garantir que esses SOPs sejam compartilhados e seguidos por todos os usuários. Os administradores de sistema também desempenham um papel importante ao configurar o nível de acesso de um usuário, garantindo que o acesso aos dados seja apropriado para cada usuário e nunca desnecessariamente excessivo. As recomendações para uma abordagem de segurança / privacidade adequada para qualquer implementação móvel DHIS2 podem ser encontradas na seção _Segurança e privacidade de dados_ das [Diretrizes de implementação móvel DHIS 2] (https://s3-eu-west-1.amazonaws.com/content .dhis2.org / Publications / DHIS + 2 + Mobile + Implementation + Guidelines.pdf).
FAÇAM; adicionar link para a seção de segurança neste documento!

- ** Aquisição de dispositivos móveis: ** A aquisição de dispositivos móveis é um aspecto fundamental para uma implantação móvel e precisa ser considerada para planejamento, orçamento e logística. Uma boa estratégia é obter os melhores e mais novos dispositivos que você puder pagar, de modo que durem mais durante a vida útil do seu projeto. Nesse sentido, é uma boa prática atrasar a maior parte da aquisição (em outras palavras, quaisquer dispositivos não necessários para o teste inicial e a fase piloto) tanto quanto possível, em vez de comprar todos os dispositivos no início do processo de planejamento. A tecnologia - e particularmente os dispositivos móveis - evolui muito rapidamente. Um determinado modelo é normalmente atualizado em um ciclo anual, dando aos consumidores acesso a melhorias técnicas significativas ano a ano a um preço semelhante. As especificações para dispositivos móveis que podem ser usados com o aplicativo DHIS2 Capture Android podem ser encontradas [aqui] (https://docs.google.com/document/d/1jZjw-hb1W8sszkPU9yPWrPoow91gEkTb0nyZJh3IJQQ/edit).
Depois de realizar todos os testes e concluir o piloto, você está pronto para expandir sua implantação com a aquisição de hardware e serviços necessários. Você pode encontrar orientação para sua aquisição móvel na seção _Scale Up_ das [Diretrizes de implementação DHIS2 Mobile] (https://s3-eu-west-1.amazonaws.com/content.dhis2.org/Publications/DHIS+2+ Mobile + Implementation + Guidelines.pdf). Resumimos abaixo os principais aspectos a serem considerados nesta fase:

  1) Purchasing of devices vs BYOD (bring your own device): The advantage of BYOD is that it avoids the large initial cost for acquisition and reduces administrative costs and logistics considerations. On the other hand, using the BYOD model leads to the challenge of managing a very heterogeneous hardware environment, meaning different devices and Android OS versions, which can result in different end users having different capabilities for capturing and reviewing data, and can ultimately lead to challenges with upgrading the core Tracker instance, as newer versions may have limited backward compatibility with older app versions. The primary advantage of purchasing devices for end users is uniformity of devices and app versions, but this approach increases hardware costs and involves logistics challenges related to distributing the mobile devices, as well as maintaining and replacing them over time.

  2) Distribution of the app: you can manually install the Android Capture App by using the APK available in [Github](https://github.com/dhis2/dhis2-android-capture-app/releases) or use the [Google Play](https://play.google.com/store/apps/details?id=com.dhis2) store. With Google Play it is easier to update the app on all your devices, however you are forced to automatically install all updates of the app. Installing the APK allows you to control when to update and to which version, but it requires a more complex process for updating all your devices and is not recommended for projects not using Mobile Device Management software (see next item).  

  3) Telecommunication contracts: The process of selecting and signing a contract with a mobile provider varies by country, and will also depends on the procurement procedures of your organization.  

- ** Gerenciamento e manutenção de dispositivos: ** Gerenciamento de dispositivos móveis (MDM) refere-se ao software usado para a administração de dispositivos móveis. O software MDM é necessário para oferecer suporte a centenas de dispositivos, controlar a distribuição de arquivos APK em todos esses dispositivos, fornecer suporte técnico e fazer cumprir as políticas institucionais. Mais informações sobre os recursos desejáveis de um MDM, opções disponíveis e orientação sobre a seleção do MDM certo para o seu projeto podem ser encontradas na seção _Mobile Device Management_ das [DHIS2 Mobile Implementation Guidelines] (https: // s3-eu- west-1.amazonaws.com/content.dhis2.org/Publications/DHIS+2+Mobile+Implementation+Guidelines.pdf).

## Recursos Humanos e Suporte de TI { #human-resources-and-it-support } 

Nenhuma implementação do Tracker terá sucesso ao longo do tempo sem as pessoas certas a bordo. Antes de iniciar um projeto de rastreador, é importante garantir que o pessoal certo com a competência certa esteja disponível.

Aqui estão algumas considerações ao construir sua equipe:

1. Busque um envolvimento de longo prazo. As pessoas que manterão a implementação do Tracker ao longo do tempo devem fazer parte do projeto desde o início

2. Os recursos do país em todos os níveis do sistema (de saúde) precisam ser envolvidos desde o início. A transferência do histórico do projeto, das decisões e das rotinas estabelecidas de consultores externos para a equipe permanente costuma ser um desafio.

3. Se você já tem uma instância DHIS2 agregada, lembre-se de que as pessoas que gerenciam o agregado não são automaticamente “qualificadas” para o projeto Tracker, pois o Tracker é diferente do relatório agregado.


|Função | Responsabilidades / tarefas |
|:------|----------------------|
|Gestor de projeto | Gerenciar o projeto Tracker|
|Líder de configuração / desenvolvimento    | Trabalho de desenvolvimento de liderança|
|Gerente de segurança | Responsável pela segurança, política ++|
|Gerente de treinamento   | Organizar treinamento|
|Líder de teste | Trabalho de teste de chumbo|
|Treinadores | Realizar treinamento com usuários finais|
|Líder de suporte | Liderar esforços de suporte|
|Equipe de suporte distribuída| Receber pedidos de suporte e ajuda aos usuários|

### Unidade de suporte de TI { #it-support-unit } 

O suporte deve estar disponível próximo ao usuário, o que geralmente requer a criação de uma nova estrutura de suporte de TI em nível de distrito ou subdistrito. Se o Tracker for usado em tempo real, o suporte técnico deve estar sempre disponível durante o horário comercial para resolver e relatar problemas. Se o Tracker apoiará as decisões clínicas, a equipe de TI deve entender o fluxo de trabalho clínico e sua representação no sistema técnico. Portanto, a equipe de suporte de TI do Tracker pode ter diferentes conjuntos de habilidades e experiências de outros oficiais de informações de saúde e pode ser um quadro de trabalhadores totalmente novo e diferente dentro do seu sistema de saúde.

** Estrutura e administração da equipe **

Cada membro da unidade de suporte de TI deve ser treinado antes do primeiro usuário final e deve demonstrar um alto nível de conhecimento do sistema e de como ele funciona. Freqüentemente, a unidade de suporte de TI consiste nas mesmas pessoas que lideram o treinamento do usuário final. No mínimo, a equipe de suporte deve ser apresentada aos usuários finais durante o treinamento para desenvolver harmonia e confiança desde o início. Um grande componente do trabalho da equipe de apoio é a “supervisão de apoio” no trabalho. A equipe de suporte eficaz também deve ser bem informada, respeitada e respeitosa, mas geralmente não está em uma posição de autoridade direta sobre o usuário final, pois isso pode reduzir a disposição do usuário de fazer perguntas técnicas e relatar problemas com o sistema.

Uma vez que a equipe está no lugar, uma hierarquia de trabalho interna pode ser estabelecida, aumentando a capacidade técnica na hierarquia (por exemplo, administrador do sistema no topo da hierarquia), e aumentando o acesso aos usuários finais na hierarquia (por exemplo, supervisor direto do usuário final , equipe de suporte de campo). Durante esta fase de organização de pessoal, os procedimentos operacionais padrão para relatar e responder às questões dos usuários finais precisam ser desenvolvidos.

** Ferramentas essenciais para qualquer unidade de suporte de TI **

- Documento de Perguntas Freqüentes (FAQ): Um documento simples que descreve em gráficos e / ou idioma local os procedimentos operacionais padrão para entrada de dados e o que fazer em caso de bugs. Um FAQ deve ser distribuído durante todos os treinamentos, e deve ser atualizado regularmente pela unidade de suporte de TI e compartilhado com os usuários finais conforme o sistema Tracker evolui.

- Gerenciamento de dispositivo móvel: para proteger os dados do paciente, um sistema de gerenciamento de caso separado deve ser implementado para rastrear quais usuários têm acesso a qual dispositivo para identificar dispositivos perdidos / roubados e acompanhar o caso. Esse sistema pode ser tão simples quanto uma planilha, mas em instâncias maiores e mais complexas, um sistema MDM de nível empresarial pode ser usado para rastrear a localização do dispositivo e pode limpar um dispositivo individual remotamente, se necessário.

- Gerenciamento de usuários: a unidade de suporte de TI deve ser capaz de documentar e gerenciar tarefas básicas de administração do sistema, como a criação de novas contas de usuário, desativação de contas de usuário inativas ou redefinição de senhas.

- Plataforma de monitoramento para rastrear os indicadores-chave do sistema: Esses indicadores-chave incluem novas inscrições por unidade organizacional, usuários inativos, tempo de inatividade do servidor, etc. No mínimo, a unidade de suporte de TI deve ter acesso a indicadores agregados em um painel DHIS2 dedicado, onde eles podem visualizar progresso da implementação por tempo e região.

- Plataforma de gerenciamento de caso para registrar bugs e tíquetes: Essas plataformas (por exemplo, JIRA) permitem que os membros da equipe de suporte de TI entrem, editem, atribuam, rastreiem e resolvam bugs e outros tíquetes, e permitem que os supervisores supervisionem importantes fatores relacionados ao serviço , como número de tíquetes abertos e bugs não resolvidos, tempo médio de resposta, etc.

- Plataforma de gerenciamento de conhecimento: este é um repositório onde os funcionários podem aprender com tickets anteriores (construindo assim uma base de conhecimento). A unidade de suporte de TI entende a experiência do mundo real do usuário com o Tracker melhor do que qualquer outro implementador ou administrador de sistema, e sua perspectiva pode ser inestimável para adaptar o Tracker para melhor atender às necessidades do usuário. Uma plataforma de conhecimento - seja eletrônica ou reuniões regulares entre a equipe - pode compartilhar experiências comuns, frustrações ou ideias para melhorias potenciais

- Linha direta para relatar bugs: Esta linha direta pode vir de várias formas. Por exemplo, pode ser um número de telefone dos funcionários da equipe de suporte compartilhado com cada usuário ou um endereço de e-mail para o qual os usuários podem enviar notas e capturas de tela. Independentemente do formato, deve haver um SOP em vigor para inserir bugs relatados por meio da linha direta na plataforma de gerenciamento de caso mencionada acima.

- Grupos de bate-papo públicos: muitas equipes de suporte descobrem que a criação de grupos de bate-papo entre a equipe e os usuários finais pode oferecer suporte ao aprendizado ponto a ponto (por exemplo, Whatsapp ou Wechat para compartilhar capturas de tela, mensagens de voz ou soluções criativas para problemas comuns).

*References*:  

- [Principles of Digital Development](https://digitalprinciples.org/) 


## Hospedagem { #hosting } 

The DHIS2 Tracker program and collected data must be hosted on a server. This can be done locally (such as at the ministry of health or IT), through a local professional service provider, or in the cloud. Each option has its own advantages and disadvantages. For example, hosting a tracker implementation in the cloud means the administrator does not need to worry about server capacity and downtime, but there may be legal issues with hosting the data outside the country's borders unless a local provider is used. Regardless of the hosting strategy, security is a key consideration. This includes identity management, authentication and authorization (restricting access to data or services), and protecting servers.

Additionally, it is important to decide whether to configure the tracker in a separate or the same instance as your aggregate system. A major advantage of having one instance is the ability to directly generate reports from tracker data. However, having the two in the same instance requires stricter standard operating procedures (SOPs) for maintaining user accounts to ensure proper access to patient data is restricted.

**Key hosting and security principles that should be included in your hosting plan, regardless of whether the instance is local or in the cloud:**

- The operating system is a Long-Term Service (LTS) edition
- Existe um processo automático para a aplicação de patches de segurança do sistema operacional
- A host-based firewall is configured to allow minimal access
- Access is via Secure Shell (SSH) according to agreed policy (keys, no root access, etc.)
- The DHIS2 version is not more than 3 versions behind the latest release, and a process exists to apply patch releases regularly.
- An automated backup system is in place and regularly tested, including offsite.
- PostgreSQL database access controls allow minimal access
- A Web-proxy server is properly (SSL Labs test A+) configured with Secure Sockets Layer (SSL)
- All Database data is stored on a separate data partition (allowing encryption at rest, performance settings)
- A monitoring and alerting system is in place
      - There is a wide range of options available, depending on the environment. For example, boombox might be fine with email + logwatch + munin.
- Enough/stable electricity to charge devices
- If using Android, there must be a network with a certain amount of uptime to sync.
- If web-based, a stable network is present


**Management and sustainability of the IT systems:**

Documentation exists on security plans and protocols, both at a high-level as well as technical procedures. Thi is especially critical for locally-hosted systems without a “security first” culture.

One individual needs to be responsible for developing, maintaining, and implementing the security plan. Another security manager committed to identifying and mitigating risks. Both roles require experience, capacity, and incentives.

Ensure that there is a documented set of technical controls mandated, and that there is an audit process against those controls

Published and available SOPs for operational, network, and physical security (locking PCs, strong passwords, data encryption, etc.), as well as for monitoring and response if the system is down or system breach


## Treinamento e implementação { #training-and-rollout } 

** Planeje um treinamento contínuo de alta qualidade. ** O desenvolvimento de capacidades é crucial para o sucesso de um programa Tracker, e deve ser de alta qualidade e continuar periodicamente durante toda a duração do programa. Não é suficiente fornecer treinamento ao usuário apenas uma vez - seu plano de treinamento deve fornecer um treinamento inicial e de atualização ao longo do tempo. Os usuários do Frontline Tracker são normalmente profissionais de saúde de nível básico que podem se sentir menos confortáveis com a tecnologia do que a equipe distrital que trabalha mais frequentemente com dados agregados. Uma forte ênfase no treinamento incluirá tempo para familiarizar os trainees com as ferramentas, bem como como integrar o Tracker em seu fluxo de trabalho.

Um princípio fundamental é ** desenvolver material de treinamento em colaboração com os usuários. ** Trabalhar junto com os usuários ao projetar o material de treinamento permitirá que você entenda quais conceitos são difíceis para os usuários entenderem, para que você possa refinar o material e o tempo para a agenda de treinamento. Faça um treinamento inicial completo com um grupo de usuários reais para ajustar seu curso.

Identifique a abordagem de treinamento apropriada: Existem várias opções para ministrar seu treinamento (por exemplo, vídeo, teste online, no local, reuniões), que podem ser usadas individualmente ou em conjunto umas com as outras.

**Involve health staff** and not just IT staff in the trainings in order to explain and emphasise the health reasons behind the data entry processes. This is particularly relevant for configurations that involve decision support. Doing this helps end users to get a better understanding of why the Tracker program is significant, which can lead to more complete and accurate data entry, and thus a greater likelihood that the program will succeed in its goals.
Revise the material based on feedback from those attending the course, or if there are revisions of the Tracker program that cause the old training materials to become inaccurate.

**Logística**
Planeje o treinamento dos usuários do Tracker como uma série de etapas de treinamento, de forma que eles recebam um treinamento de atualização após algum tempo. O cronograma de treinamento de atualização deve se alinhar idealmente com os ciclos de revisão do software Tracker, para facilitar a introdução dos usuários finais às mudanças e aos novos recursos do programa.

Note that training a large group of users (especially spread out over a large geographical area) will often require that you first train other trainers (at a Training of Trainers, or ToT) early on, to help scale your training capacity.
Keep track of which Tracker users have been trained in spreadsheet, list, or other centralized database, and establish an SOP to update this list when new staff members join, or when existing staff members quit or are relocated. New/untrained staff members should be provided with training at the earliest possible opportunity.
Choose a training venue with care. Training can take place either on site (at or close to the users’ work environment) or in centralized trainings that bring larger groups of users from various workplaces to one centralized location. Both approaches have positive and negative aspects. Regardless of where the training takes place, the person responsible for planning the training will need to organize logistical details such as the venue, transport, food and drink, computers, Internet access, etc.

If possible, train users on the devices they will use in their work. Don’t underestimate the time it takes for people to log in and familiarize themselves with the device -- it can take a significant amount of time at the beginning of the training program to get all participants ready from a technical standpoint. It is recommended to have several members of the training team available to help troubleshoot these issues as they arise.
Schedule follow up regular/onsite training /refresher training

** Treinamento em configurações de baixa largura de banda **
Se a conectividade com a Internet for muito lenta, não confiável ou inexistente em seu local de treinamento, você precisará instalar uma instância local do Tracker e configurá-la para treinamento em uma máquina / servidor local e configurá-la para o treinamento de forma que os participantes possam conectar-se por meio de um ambiente de rede local comum, um endereço IP ou cliente localhost. Mesmo em configurações onde o acesso à Internet é geralmente bom, ter um grande número de usuários acessando a instância do Tracker baseado na web por meio de uma rede WiFi ou ponto de acesso à Internet pode levar a problemas de rede. Portanto, é geralmente aconselhável ter uma instância de treinamento disponível como backup nesses casos.



## Relacionando o Tracker ao seu Sistema de Dados Agregados { #relating-tracker-to-your-aggregate-data-system } 

When designing the tracker, it is important to consider the basic reporting requirements of the Health Management Information System (HMIS) to avoid double reporting. The data entered into the tracker forms the basis for generating aggregate numbers. For example, if there are 4 patient entries, 2 with condition X and 2 with condition Y. The tracker should support the aggregate system, rather than being an additional burden on data collectors. The system design should take into consideration how to meet aggregate data requirements using the data entered through the tracker.

There are different options to consider, such as automation or manual methods with the help of tools. It is crucial to have a clear workflow, tools, and governance model for data quality and completeness assurance and the data authorization process. This includes determining who can approve and process data from individual to aggregate data and how this process occurs.

When designing the integration with the HMIS, make sure to thoroughly review the indicators, create the reports, establish a governance model for data quality and publishing, and ensure that the data revision processes are working. It is important to involve care providers in the process to ensure they understand the indicators and are able to input into how they are calculated. Additionally, involve Ministry/policy-makers in the process so that they understand the fundamental differences between how reporting happened before vs. now in a tracker or eRegistry.

**Feeding into the HMIS**

The data entered into the tracker forms the basis for generating aggregate numbers. The tracker should support the aggregate system, rather than being an additional burden on data collectors. The system design should take into consideration how to meet aggregate data requirements using the data entered through the tracker. In other words, the workflow should avoid additional work for health workers and they should not have to aggregate data manually and enter it manually into the HMIS.

The difference between aggregate data collection systems, where the final numbers are input into online reporting forms, and a tracker/eRegistry that does automated reporting is the significantly more effort required in software design to cover all reporting and indicator needs. It is important to define indicators and understand what is to be measured, including the numerator and denominator.

Removing traditional paper reporting can be time-consuming and behavior-change takes time. It is important to make sure that care providers understand the indicators and are able to input into how they are calculated. Involve Ministry/policy-makers in the process so that they understand the fundamental differences between how reporting happened before vs. now in an eRegistry.

> *References*:  
>
> Venkateswaran M: Attributes and consequences of health information systems data for antenatal care – health status, health system performance and policy, PhD dissertation, University of Bergen 
>
> Venkateswaran M, Mørkrid K, Khader KA, Awwad T, Friberg IK, Ghanem B, Hijaz T, Frøen JF: Comparing individual-level clinical data from antenatal records with routine health information systems indicators for antenatal care in the West Bank: A cross-sectional study. PloS one 2018, 13(11): e0207813 






# Tracker performance at scale { #tracker-performance-at-scale } 

This document describes approaches to optimizing DHIS2 tracker implementations for COVID-19 vaccine delivery at scale.

## Executive summary { #executive-summary } 
> **Server**
>
> * Appropriate software versions are used:
>   * JDK11
>   * PostgreSQL 12 or 13
>   * DHIS2 version 2.35 or later, latest available patch
> * Server monitoring is set up. Recommended: munin, glowroot
> * Server is appropriately sized. For covax, at least:
>   * 32 CPU cores
>   * 32GB RAM
>   * SSD/fast disk
>   * Fast and stable internet and internal network connectivity
> * In shared hosting environment, verify that the server has the
> specified resources in practice
> * Use dedicated server for database/postgresql if possible
>
>
> **Tracker/Tracker Analytics**
>
> * Minimize the use of program indicators in dashboards, as this has cause performance issues.
>   * Alternative: serving tracker analytics through the aggregate data model, using strategies described in this document.
> * Limit access to dashboards that use program indicators, particularly those dashboards that load by default as the 'landing page' upon logging into DHIS2.
>   * Alternative: Set up a text only/information landing dashboard that excludes tracker analytics to minimize impact. Limit dashboards based on program indicators only to those users/users groups who need them for analytical purposes (e.g. not for general data entry users)
> * Enable analytics cache
> * Do not use continuous analytics
> * Tracker: Disable the "Display front page list" check in the
> program details.
> * Apply custom database indexes for frequently searched TEI
> attributes.
> * Ensure that system generated attributes don't use RANDOM pattern
>
>
> **Android**
>
> * Ensure admins responsible for Android deployments are familiar with:
>   * The use of the Android Settings App and the various sync strategies that can improve performance.
>   * Specific configuration for users which will use Android is highly recommended.
>   * Distribution of the Android App mechanisms and management of version updates.
>
> **Implementation Strategies**
>
> * Ensure there is an aggregate configuration available for reporting (e.g. daily reporting based on tally sheets) that can be used routinely, or as a back-up in the case of lag time in Tracker data entry during high-volume periods (e.g. COVAC Aggregate Package)
> 16. Use the latest COVID-19 Immunization/EIR tracker package and related aggregate datasets (for serving the dashboard) as a reference; though we do not recommend 'updating' a package that has already been substantially customized for the country. 


## Fundo { #background } 

### Audience  { #audience } 

O público principal da secção são os administradores de sistema que apoiam o MISAU com seus planos nacionais de entrega de vacinas COVID-19. No entanto, embora a entrega da vacina COVID-19 seja o caso de uso específico apresentado aqui, grande parte da orientação é relevante para implementações de rastreadores em larga escala em geral.


### Objectivo { #purpose } 

- To share the 'best information available', real-time/emerging guidance, tips & tools to optimize DHIS2 implementations for anticipated scale of COVID-19 vaccines. This information is often sourced through the community of practice.
- This is not intended to prescriptive guidance, but rather a series of recommendations that may evolve in real-time as we learn from real-world implementations; and update/improve the global products 
- We aim to facilitate information sharing between country implementations that may face similar challenges and can benefit from common solutions

## Guidance for implementers { #guidance-for-implementers } 

### General Guidance { #general-guidance } 

* Substantial performance improvements were introduced from V 2.35. We strongly recommend upgrading tracker instances to the latest patch version of 2.35 or 2.36, where performance improvements have also been added in the point releases. 
* We strongly recommend to set up a server monitoring tool to identify when and why your server is struggling   
    * Some recommendations include [https://glowroot.org](https://glowroot.org/) and    [https://munin-monitoring.org](https://munin-monitoring.org/) 
    * Here is a [tutorial for installing glowroot on DHIS2](https://github.com/dhis2/dhis2-docs/blob/glowroot-tutorial/src/tutorials/glowroot.md)

### Analytics Performance { #analytics-performance } 

Recognizing that country demands for frequency of 'real time' analytics data for decision making may vary and timely data is crucial, we recommend to avoid running analytics during heavy data entry periods. We have seen major spikes in overall response times while analytics tables are being generated. **These seem to have the most impact when many users are accessing dashboards that contain program indicators calculating on the fly.**

#### Dashboard Performance { #dashboard-performance } 

Below are steps that can be taken to improve dashboard performance.

* Users should **not** have dashboards with tracker-based analytics as the landing page after logging in.
    a. Add a dashboard without analytics as the default/first dashboard that users land on after logging in. (i.e. ensure it is the first alphabetically. For example "\*\*NOTICE\*\* or \*\*INFO\*\*) 
    b. This dashboard could be populated with text items to communicate key information, updates, standard operating procedures, etc. 
    c. The dashboard should be shared with Public access

![Example of dashboard without analytics used as landing page after logging in.](resources/images/covax_perf_image2.jpg)

* Limit sharing dashboards only to only those analytics users who need to use data for decision making; restricting from data-entry users. This can be achieved with User Groups, combined with a Landing Dashboard for non-analytics users as above. 

* Tracker analytics requests, in particular for certain program indicator configurations, can be slow and create performance problems. When extracting such data: 
    a. Do it outside peak hours for vaccinators, to avoid any slowdowns hindering their work 
    b. Work with smaller data sets at the time. For example, it may be  necessary to get figures for a subset of organisation units at the time (e.g. by region). 
    c. Rather than several people downloading the same data (e.g. for the national level) from DHIS2, download once and share via for example excel.

* Ensure caching is enabled in the dhis2 configuration, so that repeated requests for the same analytics resources are served from the cache and database queries are skipped. 
    a. dhis.conf - `analytics.cache.expiration` set to at least 3600 (6 hours). 
    b. System settings -\> analytics -\> cache strategy. Recommended value: at least CACHE_6AM_TOMORROW. Set cacheability to    "private" to avoid nginx cache.

* Desligue a análise contínua. Se desativar a análise contínua, só verá sua análise actualizada após a execução das tabelas de análise.

* As a **last resort/blunt measure for poor performing dashboards, you may also:** a. Remove tracker analytics access for non-critical users. b. Set the default landing app through the system settings to the capture or data entry applications. This will mean that all users will first be directed to those apps. This may be disruptive for users that do not enter data, but it will minimize traffic to the dashboards.

* Consider serving Tracker analytics from the COVID-19 EIR Tracker through the aggregate data model as described in the [Implementation Section](#implementation-strategies). In short:
    a. Mapping PIs to aggregate data elements 
    b. Pushing data values to aggregate data model (via a script) at a predetermined frequency 
    c. Dashboards shared more widely based on the aggregate data model via indicators can be 100 times more performant (dashboard items load in 0.02-0.1 seconds vs 10-200 seconds on testing instance). In addition, they give greater analytical power through the use of dimensions (e.g. to represent and slice/dice CatCombos).

#### Assessing Analytics/Program Indicator Performance { #assessing-analyticsprogram-indicator-performance } 

An analysis of the dashboards originally included in the COVID-19 EIR Tracker Package (note: these tracker dashboards have now been removed from the package and are not recommended) revealed:

* Dashboards are significantly slowed down by long queries for enrollment-type program indicators.

* Dropout rates are good to know, but they take a long time to load even on our test db. We believe that drop out rates are unlikely to require daily monitoring, but rather can be analyzed weekly or even monthly at a higher level through the COVAC Core Module (aggregate datasets & monitoring dashboard for coverage, etc.)

![](resources/images/covax_perf_image6.png)

![](resources/images/covax_perf_image5.png)

Other "heavy" visualizations should be removed from routine monitoring dashboards which are shared with lower-level users and will lead to performance stress. These could be moved to dashboards which are viewed less frequently, an HTML report, or another reporting tool:

a. Mapas em níveis inferiores ou solicitando unidades organizacionais desnecessárias

b. Event reports with more than 100 event rows or 50 enrollment rows

c. Visualizations requesting lengthy periods of longitudinal data, e.g. last 12 months

d. Any visualization with enrollment-type program indicators, such as dropout rates

e. In tests of program indicators from the COVAC package, program indicators of "enrollment type" took the longest response time. Further, they have poorer scalability, as they take longer to serve data when requesting additional periods, org units, or TEI.

### Tracker Performance { #tracker-performance } 

* TEAs that generate a Unique system IDs using the SEQUENTIAL() pattern are much more performant than those using the "RANDOM()" pattern. **We recommend avoiding the RANDOM pattern** because:
    * It's open for race conditions; 
    * It will have a huge downward trend in performance the longer it\'s been used; and 
    * It uses the reserved values table in the database to keep track of which values have been distributed already. This table has been known to be a pain point during tracker import.
    * Nota para implementações que usam Android: reservar valores para os dispositivos para uso offline pode afetar a percepção do usuário da geração SEQUENCIAL conforme documentado aqui: [https://docs.dhis2.org/en/full/implement/android-implementation.html#implementation_guide_dhis2_config_reserved_id](https://docs.dhis2.org/en/full/implement/android-implementation.html#implementation_guide_dhis2_config_reserved_id)

* In early versions of the COVID-19 vaccine registry, some working lists caused performance issues. These were removed from the packages in the COVID IER package V 1.1.2. If you experience that tracker is showing slow load times, this may be related to the working lists and a large number of TEIs in one org unit. A solution is to disable the "Display front page list" check in the program details (this has the downside of also disabling working lists)

* Searches on TEIs on attributes (especially non-unique ones like firstName, surname, phoneNumber) can significantly improve by adding partial trigram indexes for that particular tracked entity attribute. This has been done in Nigeria and Rwanda and the performance improvement was huge. This is yet to be added into the core, so implementations will have to create them manually for now. For adding trigram indexes and compounding it with primitive column types, two extensions have to be created. The extensions are already part of the default posgresql installation. Extensions:

```
create extension pg_trgm;
create extension btree_gin;
```

Index example for trackedentityattributeid 1234 (eg: PhoneNumber). Has to be repeated for every attribute that is used heavily during searches (firstname, surname, etc)
```
create index concurrently in_gin_teavalue_1234 ON trackedentityattributevalue 
using gin (trackedentityinstanceid,lower(value) gin_trgm_ops) 
where trackedentityattributeid = 1234;
```

* Similarly, trigram indexes will also help if the system searches based on event data values. Nigeria had their QR code for completed vaccinations as an event data value which they searched on heavily (eg: passengers qr code checked before boarding). Depending on search patterns for the specific implementation's configuration, this trigram index can also be applied. Not all implementations will need this. Assuming the extensions mentioned above are already created, an example index creation for a data element (uid=​​LavUrktwH5D, qrCode), attached to a programstage. The dataelementid=233047 and programstageid=64527 in this example.

```
create index concurrently in_gin_psi_edv_64527_233047 on > programstageinstance 
using gin (lower(eventdatavalues #>> '{LavUrktwH5D, value}') gin_trgm_ops);
```

* Usage of custom apps can have a positive or negative impact on performance. The apps can be a way of making more targeted functioanlity that prevents extra clicks and calls to the API. They are also a source of caution, and we have seen some custom apps use API functionalities that cause unnecessary stress on the system. Parameters to skip paging, counting the number of results in the paging, using LIKE operator to compare when EQ(equals) is more suitable are some of the notable culprits that cause some stress. If LIKE operator is used with unique attributes, trigram index as mentioned above should be created for it. SkipPaging should always be avoided. When using paging, the totalPages should always be avoided, as it makes the DB query get the full count of records to count them, instead of only fetching the given page. If feasible, a searchString minimum limit of 3 characters should be enforced on searchable attributes. Nigeria had a custom app that enforced the 3 character minimum search limit on the app side and that helped alleviate several heavy queries. Trigram indexes will only be used by the query optimizer if the search string has at least 3 characters.

> **Note**
>
> The calls made by custom apps need extra attention, as the calls might be constructed in a way that has not been well tested and proven to be performant. The list of common performance culprits provided here is not exhaustive. It is important to have monitoring in place and keep an extra eye on the calls made from custom apps, integration middleware and external scripts.

* Tracker Capture App updates event data values individually. In highly concurrent environment, this can cause database row level locking and waiting. Sri Lanka created a Custom Tracker Capture App using the core Tracker Capture App as a baseline. In the Custom App, they changed the flow so that all event data values are updated together in a single API on user clicking "Save and Complete". The button was "Complete" in the original core app. If the supporting HISP groups/administrators/implementers have the necessary skillset, they can maybe look into doing the same.

### User Management { #user-management } 

* We recommend against sharing user logins across multiple devices. This has resulted in some scenarios where the users are unintentionally logged out.
    * Alternatives: one user per device (e.g. the user follows the device, i.e. vaccine site data entry staff; passwords could be recycled each day for added security)
* Optimizing users for Android (described in Android section)
* Restricting unnecessary access to tracker-based dashboards as described above

## Guidance for Android Deployments { #guidance-for-android-deployments } 

### DHIS2 Configuration recommendations { #dhis2-configuration-recommendations } 

This subsection covers the specific recommendations that can be achieved by tweaking the DHIS2 server configuration directly.

#### User access { #user-access } 

Due to the nature of Android being able to work offline, the application will try to download as much information as possible in case the device goes offline. To reduce the amount of data transferred:

- Set the Organisation Units, Programs and DataSets that users will have access to; this will greatly reduce the amount of data being transferred and the load of the server

- Please see the recommendations on how to [create a user](https://docs.dhis2.org/en/full/implement/android-implementation.html#implementation_guide_dhis2_config_creating_user)

#### Auto-generated Values { #auto-generated-values } 

Because of the offline nature Android will also download reserved values. The application will try to evaluate the amount of remaining values and retrieve more from the server whenever a synchronization happens.

In implementations where users will be offline for long periods of time this value might need to be increased (explained in the section below). If the auto-generated values defined include the usage of dates in any of its forms (days, months, years) the system administrator should pay special attention while defining them and using the Android App. Also note, reserving values to devices for offline use with the SEQUENTIAL() pattern (e.g. for a TEI attribute 'System Generated ID') will take each of these values sequentially as they are *reserved in the devices*, which can be confusing for some users. This behavior is expected as documented [here](https://docs.dhis2.org/en/full/implement/android-implementation.html#implementation_guide_dhis2_config_reserved_id).

Please see more information about this topic in the [official documentation](https://docs.dhis2.org/en/full/implement/android-implementation.html#implementation_guide_dhis2_config_reserved_id) and in [this post in the CoP.](https://community.dhis2.org/t/question-regarding-expiry-of-reserved-ids-of-an-auto-generated-unique-values-configured-with-a-text-pattern-containing-current-date-mm-yyyy/40761/2)

### Android Settings WebApp { #android-settings-webapp } 

The [Android Settings WebApp](https://apps.dhis2.org/app/a1bd6b5b-de8c-4998-8d34-56c18a139683) is an application that can be installed on any of the latest DHIS2 servers and allows the system administrator to define some settings that will be read by each mobile.

#### Reserved Values { #reserved-values } 

In the section above the usage of auto-generated values was briefly explained. With the Android Settings App the system administrator can define how many of those values will be retrieved by each mobile user. If your mobile users will be going offline for very long periods of time it might be a good idea to increment this value, however, setting a huge large number here can incur in the exhausting of values and an increase of the data transferred in the initial sync.

![](resources/images/covax_perf_image4.png)

As an example, imagine we have an implementation with mobile devices which will be going offline for a full week and then come back to a central location for the synchronization of data. Each user might see up to 50 patients per day and therefore during a week up to 350 patients. Setting the *Reserved values downloaded per TEI attribute* to at least 350 would ensure the users can work properly offline without risking exhausting the values.

#### Metadata Sync { #metadata-sync } 

![](resources/images/covax_perf_image1.png)

If your program is very unlikely to be modified, setting a long period value for this setting will reduce the amount of connections towards the server. It is good to find a balance between how important it would be having devices without the metadata fully updated and the load the server can experience due to the number of devices.

As an example, imagine we have an implementation with 10.000 devices and they are set to sync every 1 day. This means that the server should be ready to handle 10.000 metadata update pulls every day. Even though these requests will result in an empty response if no changes have been made, it might be smarter setting that value to 1 week or even manual (with a proper way of communicating with the field users) if no changes will be made in the package or changes are unlikely to be critical.

You can even disable automatic metadata synchronization and rely on manual synchronizations triggered by your users if that is an option for your implementation.

#### Data Sync { #data-sync } 

Data sync follows the same principle as the one for metadata and it should be adjusted according to the implementation. For example, we can find implementations where users are going on the field where they will be working offline therefore it should be important to provide those users with all the data needed for their work. Or there can be implementations where users will be most likely registering patients on the field and transferring data from the devices to the server.

See the following examples:

* In an implementation where users will be working pretty much offline and they need to have as much data as possible on their device, the *data sync* could be set to *Manual* if the users are instructed to perform this before leaving to the field. Or daily if this process should be automated.

* In an implementation where users are going to the field, and they are likely to be robbed, or a fear of devices being lost is present it might be interesting to set the *data sync* to the minimum (30 minutes) so the data is pushed to the server as soon as possible. Users could also be instructed to use [granular sync](https://docs.dhis2.org/en/full/use/dhis2-android-app.html#capture_app_generic_sync_info) every time they add or modify a patient but this might be more cumbersome.

![](resources/images/covax_perf_image3.png)

You can also disable automatic data synchronization and rely on manual synchronizations triggered by your users, however this puts more risk on data being recorded and not synced if users are not systematic.

#### Download Settings { #download-settings } 

These settings allow the users to define the amount of TEIs that will be downloaded when performing the data sync. It should probably be combined with the *Data Sync* setting explained above. It is important to understand how these settings work to define a targeted and valid approach. The official documentation, [synchronization settings](https://docs.dhis2.org/en/full/use/dhis2-android-app.html#capture_app_andoid_settings_webapp_synchronization), explains in detail what to expect when setting this up. The connectivity capabilities of the implementations should also play a big role while defining these, as in implementations with very good connectivity reducing this value to the maximum would decrease the load of the server during the *data sync* without having a big impact in the users (they will always be able to find the patients online). However, this could lead to a server overload while performing very broad searches. The way mobile users will connect to the server (i.e. using mobile data packages instead of wifi) also plays a role as downloading many patients that might not be used will incur in expending mobile data for no reason.

See the following examples:

*  In an implementation where the users will be mainly adding patients to the system (i.e. registering patients with COVID) there is no need to have many patients on the device. Therefore, setting a low value of download TEI would decrease the load of the server during the data sync and will reduce the amount of data transferred (to be taken into account when connecting with mobile data)

*  In an implementation where users will be visiting patients offline without the possibility for an online search the system administrator might want to let the users download as many TEI as possible so they take with them all the patients' data that will need.

*  In an implementation with very good connectivity the user administration could decide to decrease the download settings so the devices have as few TEI as possible relying completely on the online search. As the users will be searching by a unique id (i.e. National ID number) which is a low demanding task for the server the setup seems to be adequate. However, if users will not be able to search for patients by a unique id and will use a family name the server could suffer for an overload on the searches and therefore might be more interesting to allow the users downloading more patients and relying on the offline mode.

### Application Updates { #application-updates } 

![](resources/images/covax_perf_image8.jpg)

The DHIS2 Android App is published via two channels: [Google Play Store](https://play.google.com/store/apps/details?id=com.dhis2) and [Github](https://github.com/dhis2/dhis2-android-capture-app/releases). We publish releases every 6 months and patch releases as often as it is needed. If implementations are using the Google Play Store as their provisioning source they could benefit from automatic updates, however, this might not be desirable in some scenarios where implementations want to test a newer version before making it available for their users. We recommend disabling automatic updates so the App can be heavily tested by administrators/testers before asking their users to do so.

To disable the automatic updates, once the application has been installed in via the Google Play proceed as follows:

- Select the 3-dot menu from the right corner of your screen. By default, "Enable auto-update" will be selected.
- De-select this button. This will ensure that the Android app does not automatically update when an update is available.
- When finished, the box "Enable auto update" should not be checked.

System administrators could now benefit from checking the new versions and then letting the users know when they should update their App that they could do by going to the Play Store and clicking on the Update button that will be presented every time there is a new release.

More information about roll-out plans and testing can be found in the [official guides](https://docs.dhis2.org/en/full/implement/android-implementation.html#implementation_guide_testing).

### Device and management recommendations { #device-and-management-recommendations } 

In this section we cover briefly some recommendations related to the devices themselves and their management.

#### Android device specifications { #android-device-specifications } 

It is very hard to give general recommendations on which device to use. Implementations should test their final configuration on a set of devices to understand the user experience.

For example if an implementation will have users going to the field and working offline with a large number of TEIs they should aim for higher end devices as the Android App will be more resource consuming. However, if implementations are very budget constraint and they will be having thousands of users but working with much smaller amounts of TEIs and data they might prefer using some middle end devices.

More information on this process can be found in the [official guide](https://docs.dhis2.org/en/full/implement/android-implementation.html#implementation_guide_mobile_specs).

#### Mobile Device Management { #mobile-device-management } 

We strongly recommend using a Mobile Device Management (MDM) in mobile implementations. Having an MDM will provide several advantages that can ease the implementation and support. However they usually incur higher costs.

Implementations could opt for ready to use MDMs or deploy a solution in their own infrastructure. The latter might be a better solution in terms of budget but will require high technical skills like system administration and DB management.

This [[official guide]{.ul}](https://docs.dhis2.org/en/full/implement/managing-mobile-devices.html) covers several MDM that have been tested listing their main advantages and disadvantages.

### Mobile recommendations checklist { #mobile-recommendations-checklist } 


| **DHIS2 Mobile Implementation at scale checklist** |  |
| --- | --- |
| User access configuration |  |
| Auto-generated values pattern            |                           |
| Android Settings Webapp:                  |                           |
| *Number of reserved values*              |                           |
| *Automatic metadata sync period*         |                           |
| *Automatic data sync period*             |                           |
| *Data download settings*                 |                           |
| Management of Android App updates        |                           |
| Mobile Devices Management                |                           |


## Server hosting, administration and monitoring { #server-hosting-administration-and-monitoring } 

There are two fundamental requirements related to server hosting:

- There should be somebody - preferably two - people with the requisite training and experience to manage the server.
- There should be a privacy/security policy to cover the storage of large proportion of population data

### Server specifications { #server-specifications } 

As indicated in the documentation on server [specifications](https://docs.dhis2.org/en/manage/performing-system-administration/dhis-core-version-237/installation.html#install_server_specifications), "DHIS2 scales linearly on the amount of RAM and number of CPU cores so the more you can afford, the better the application will perform". Covax implementations, generally targeting the total adult population of a country, will be large-scale even in smaller countries. Exact requirements will vary depending on the expected number of users and TEIs, but 32GB RAM and 32 CPUs could be considered a starting point for all but the smallest implementations. All implementations should be prepared to upgrade the hardware to support changing scale and growing data.

SSD/disk performance is also critical for the overall performance, heavily influencing key activities such as searching for TEIs and analytics. The documentation suggests that "Minimum read speed is 150 Mb/s, 200 Mb/s is good, 350 Mb/s or better is ideal." Real disk performance can also be assessed by looking at disk latency. You can see these figures on munin, a simple one off assessment can be done with dd:

```
dd if=/dev/zero of=/root/testfile bs=512 count=1000 oflag=dsync
```

For a good disk this command should finish in a fraction of a second (\<0.5s). Anything over 5 seconds is probably going to be too slow to reach acceptable levels of performance.

### Server architecture and infrastructure { #server-architecture-and-infrastructure } 

The application (tomcat) and database (postgresql) *could* be hosted on the same server, but ideally the database should be set up on a dedicated server.

Fast and stable internet is always required, but when the database is set up on a separate server, it is also important to ensure that there is a fast and stable *internal* network connection between the two.

Special consideration must be taken when the server is hosted in a shared, virtualized environment. In these cases, the hosting provider may over-provision resources (e.g. CPUs, disks), meaning the server does not actually have the resources it appears to have. This also means that performance fluctuates based on the load on other systems. In some cases, countries have had to negotiate with the hosting provider to ensure the server used is not being over-provisioned, alternatively moving to a physical server.

### Installation and configuration { #installation-and-configuration } 

It is important to ensure that the right software versions are used to optimise performance:

- JDK11
- PostgreSQL version 12 or 13
- DHIS2 version 2.35 or later, **the latest available patch version**

Tomcat needs to be configured with enough memory. This will depend on the total available memory of the server, and whether this is shared with postgresql or if the database is running on a separate server. With a DHIS2 superuser account, you can verify the tomcat memory configuration by opening "About DHIS2" and looking at the "Memory info" field:

![](resources/images/covax_perf_image7.png)

It is also critically important to configure postgresql correctly for good performance. Instructions for this are available in the [server documentation](https://docs.dhis2.org/en/manage/performing-system-administration/dhis-core-version-237/installation.html#install_postgresql_performance_tuning).

### Server monitoring { #server-monitoring } 

We strongly recommend setting up a server monitoring tool to identify when and why your server is struggling. Key performance metrics should be monitored eg. RAM, CPU, disk performance on all nodes and application specific measures on proxy, database and tomcat. Some recommendations include [https://glowroot.org](https://glowroot.org/) and [https://munin-monitoring.org](https://munin-monitoring.org/). A [tutorial for installing glowroot on DHIS2](#glowroot_tutorial) has been written to support this.

Other options which might require more configuration but allow significant customisation include prometheus/grafana and the ELK stack.

## Implementation Strategies { #implementation-strategies } 

Based on experiences from Sri Lanka, Indonesia, Nigeria, Rwanda and others, visualizations based on tracker analytics in large-scale COVID-19 vaccine deployments can result in very heavy TEI count queries, nearly rendering the system unusable. Blunt mitigation strategies taken in Rwanda (disabling of all Analytics apps), while Sri Lanka reverted to SQL queries.

These challenges can be partially addressed with the guidance on performance optimization provided above. We also recognize that:

* The unpredictability of Tracker performance at unprecedented scale, given the many varying factors at play in country implementation, configuration & customization
* Capacities, resources and structures for server administration are highly variable across countries

Meanwhile, daily aggregate reporting through DHIS2 was proven to be highly effective at large scale in the Measles-Rubella campaign in Bangladesh in 2020. Having an aggregate configuration can facilitate daily reporting on stocks and doses administered (e.g. from tally sheets), data which are largely sufficient to serve the purpose of "real-time daily" monitoring of the overall campaign via dashboards. In Uganda, an aggregate implementation was used side-by-side with the COVID EIR Tracker, to enable daily monitoring and check data completeness during high-volume periods when tracker data entry could not be sustained (not enough devices, etc).

Based on feedback, we understand that most implementations require at least daily monitoring during the campaign phases of COVID-19 vaccine delivery, but the definition of 'real-time' is variable. There may be a time of day when campaign operations centers are monitoring the daily performance and should be considered for the country implementation & scheduling of analytics.

### Use of Aggregate Data Model with Tracker Deployments { #use-of-aggregate-data-model-with-tracker-deployments } 

We recommend incorporating aggregate data models into COVID-19 vaccine implementations for two separate functions.

#### Parallel aggregate reporting: daily stock & tally sheets of vaccine doses administered at vaccination site level { #parallel-aggregate-reporting-daily-stock-tally-sheets-of-vaccine-doses-administered-at-vaccination-site-level } 

The recommendation to ensure countries have an aggregate COVAC package in parallel to the Tracker Registry is an old one. Here we provide some reasons why think a country should be prepared with an aggregate configuration for reporting alongside their Tracker deployment:

- For many country contexts, this will be necessary to ensure completeness of data for the purposes of monitoring the campaign: e.g. if the entire population cannot be covered by the Tracker Registry for any number of reasons

- In some contexts, this reporting mechanism (e.g. based on daily tally sheets) can be used during high volume periods in the campaign where individual level data entry can lag (not enough devices, connectivity issues, not enough data entry staff etc).

- Daily reporting from tally sheets is also often used for data quality comparisons to Tracker data, and helps the country to assess their Tracker deployment and make decisions about data sources/data flows

The [COVAC 'Core' Aggregate Package](https://docs.dhis2.org/en/topics/metadata/covid-19-vaccine-delivery/covac-aggregate/version-110/design.html) contains a configuration to support this (aligned to WHO monitoring guidelines, WHO AFRO reporting tools and eJRF):

- Daily dataset: COVIDVAC - Vaccination Delivery (e.g. doses administered, byt target groups)

- Daily dataset: site level stock reporting (e.g. vials used, physical stock count, etc)

- Annual dataset (could also be monthly/quarterly depending on country's plan): setting population targets, that may be disaggregated by priority groups etc

- COVAC Monitoring dashboard that contains coverage rates, doses administered, key stock data, drop-out rates etc. This monitoring dashboard is generally tailored for higher level monitoring of the overall national COVID vaccine delivery plan; not all components of this dashboard are intended for 'real-time'/daily monitoring.

#### Converting tracker data to aggregate data model → for the purpose of analysis (e.g. serving performant dashboards) { #converting-tracker-data-to-aggregate-data-model-for-the-purpose-of-analysis-eg-serving-performant-dashboards } 

Due to the potential for performance issues with dashboards serving tracker-based data (e.g. heavy program indicators calculating on the fly every time the dashboard is loaded), we recommend that a daily/near real-time dashboard can be served using the aggregate data model. In our tests, this has shown to be far more performant and still capable of serving key metrics to analytics users. An additional benefit for analysis is the structuring of data into dimensions (category combos) for pivoting and slicing.

In order to serve COVID-19 analytics from tracker source data (e.g. COVID vaccine registry), you will need:

1. An aggregate data set (in the same instance as the Tracker program or in another instance) and a set of DEs and COCs to receive the data aggregated from tracker

2. A dashboard to replace the tracker-based dashboard for campaign monitoring; the dashboard should be based entirely on indicators and/or data elements based on the aggregate domain.

3. A set of Program Indicators that can aggregate the tracker data to push to the target aggregate DEs/COCs, with attributes mapped to the target aggregate metadata

4. A script to push the tracker data (e.g. values of program indicators) target aggregate DEs. An example script is under development and will be shared soon.

Generic [guidance for tracker-to-aggregate data is available](https://docs.dhis2.org/en/implement/maintenance-and-use/tracker-and-aggregate-data-integration.html#how-to-saving-aggregated-tracker-data-as-aggregate-data-values) and will continue to be updated.

## List of Known Software Issues { #list-of-known-software-issues } 

[COVAC: performance issues](https://docs.google.com/document/d/1NJoio5qkdtdljflbt3_AS6N2HgGTepW_TW2m4-qHlTE/edit#) 

