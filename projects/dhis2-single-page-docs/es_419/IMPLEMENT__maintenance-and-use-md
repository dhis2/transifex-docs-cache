---
revision_date: "2021-09-15"
template: single.html
---

# Users and user roles { #users-and-user-roles }

## About user management { #about_user_userrole }

Multiple users can access DHIS2 simultaneously and each user can have different authorities. You can fine-tune these authorities so that certain users can only enter data, while others can only generate reports.

- You can create as many users, user roles and user groups as you need.

- You can assign specific authorities to user groups or individual users via user roles.

- You can create multiple user roles each with their own authorities.

- You can assign user roles to users to grant the users the corresponding authorities.

- You can assign each user to organisation units. Then the user can enter data for the assigned organisation units.

Table: User management terms and definitions

| Term | Definición | Example |
| --- | --- | --- |
| Autoridad | A permission to perform one or several specific tasks | Create a new data element<br> <br>Update an organisation unit<br> <br>View a report |
| Usuario | A person's DHIS2 user account | admin<br> <br>traore<br> <br>guest |
| User role | A group of authorities | Data entry clerk<br> <br>System administrator<br> <br>Antenatal care program access |
| User group | A group of users | Kenya staff<br> <br>Feedback message recipients<br> <br>HIV program coordinators |

You manager users, user roles and user groups in the **Users** app.

Table: Objects in the Users app

| Object type | Available functions |
| --- | --- |
| Usuario | Create, edit, invite, clone, disable, display by organisation unit, delete and show details |
| User role | Create, edit, share, delete and show details |
| User group | Create, edit, join, leave, share, delete and show details |

### About users { #about-users }

Each user in DHIS2 must have a user account which is identified by a user name. You should register a first and last name for each user as well as contact information, for example an email address and a phone number.

It is important that you register the correct contact information. DHIS2 uses this information to contact users directly, for example sending emails to notify users about important events. You can also use the contact information to share for example dashboards and pivot tables.

A user in DHIS2 is associated with an organisation unit. You should assign the organisation unit where the user works.

When you create a user account for a district record officer, you should assign the district where he/she works as the organisation unit.

The assigned organisation unit affects how the user can use DHIS2:

- In the **Data Entry** app, a user can only enter data for the organisation unit she is associated with and the organisation units below that in the hierarchy. For instance, a district records officer will be able to register data for her district and the facilities below that district only.

- In the **Users** app, a user can only create new users for the organisation unit she is associated with in addition to the organisation units below that in the hierarchy.

- In the **Reports** app, a user can only view reports for her organisation unit and those below. (This is something we consider to open up to allow for comparison reports.)

An important part of user management is to control which users are allowed to create new users with which authorities. In DHIS2, you can control which users are allowed to perform this task. The key principle is that a user can only grant authorities and access to data sets that the user itself has access to. The number of users at national, province and district level are often relatively few and can be created and managed by the system administrators. If a large proportion of the facilities are entering data directly into the system, the number of users might become unwieldy. It is recommended to delegate and decentralize this task to the district officers, it will make the process more efficient and support the facility users better.

### About user roles { #about-user-roles }

A user role in DHIS2 is a group of authorities. An authority means the permission to perform one or more specific tasks.

A user role can contain authorities to create a new data element, update an organisation unit or view a report.

A user can have multiple user roles. If so, the user's authorities will be the sum of all authorities and data sets in the user roles. This means that you can mix and match user roles for special purposes instead of only creating new ones.

A user role is associated with a collection of data sets. This affects the **Data Entry** app: a user can only enter data for the data sets registered for his/her user role. This can be useful when, for example, you want to allow officers from health programs to enter data only for their relevant data entry forms.

Recommendations:

- Create one user role for each position within the organisation.

- Create the user roles in parallel with defining which user is doing which tasks in the system.

- Only give the user roles the exact authorities they need to perform their job, not more. Only those who are supposed to perform a task should have the authorities to perform it.

### About user groups { #about-user-groups }

A user group is a group of users. You use user groups when you set up sharing of objects or notifications, for example push reports or program notifications.

See also:

[Sharing](https://ci.dhis2.org/docs/master/en/user/html/sharing.html)

[Manage program notifications](https://docs.dhis2.org/master/en/user/html/manage_program_notification.html)

[Mange push reports](https://docs.dhis2.org/master/en/user/html/manage_push_report.html)

## Workflow { #user_mgt_workflow }

1.  Define the positions you need for your project and identify which tasks the different positions will perform.

2.  Create roughly one user role for each position.

3.  Create users.

4.  Assign user roles to the users.

5.  Assign the users to organisation units.

6.  (Optional) Group users in user groups.

7.  Share datasets with users or user-groups via the Sharing Dialog in Data set management section of the Maintenance app

> **Tip**
>
> For users to be able to enter data, you must add them to an organisational unit level and share a dataset with them.

## Example: user management in a health system { #user_mgt_example }

In a health system, users are logically grouped with respect to the task they perform and the position they occupy.

1.  Define which users should have the role as system administrators. They are often part of the national HIS division and should have full authority in the system.

2.  Create roughly one user role for each position.

Examples of common positions are:

| Position | Typical tasks | Recommended authorities | Comentario |
| --- | --- | --- | --- |
| System administrators | Set up the basic structure (metadata) of the system. | Add, update and delete the core elements of the system, for example data elements, indicators and data sets. | Only system administrators should modify metadata. <br>If you allow users outside the system administrators team to modify the metadata, it might lead to problems with coordination.<br> <br>Updates to the system should only be performed by the administrators of the system. |
| National health managers<br> <br>Province health managers | Monitor and analyse data | Access to the reports module, the **Maps**, **Data Quality** apps and the dashboard. | Don't need access to enter data, modify data elements or data sets. |
| National health information system division officers (HISO)<br> <br>District health records and information officers (DHRIO)<br> <br>Facility health records and information officers (HRIO) | Enter data that comes from facilities which are not able to do so directly<br> <br>Monitor, evaluate and analyse data | Access to all the analysis and validation apps<br> <br>Access to the **Data Entry** app. | - |
| Data entry clerks | - | - | - |

# Guidelines for offline data entry using DHIS 2 { #offline_data_entry }

<!--DHIS2-SECTION-ID:offline_data_entry-->

The de facto standard way of DHIS 2 deployment has become _online_ meaning that a single instance of the application is set up on a server connected to the Internet and all users connect to the application using a web browser over internet. This was made possible possible thanks to the steady increase of internet availability (mostly mobile internet), the offerings of readily available and cheap cloud-computing resources combined with the fact that DHIS 2 does not request a significant bandwidth. These developments make it possible to access on-line servers in even the most rural areas using mobile Internet modems (also referred to as dongles).

This on-line deployment style has huge positive implications for the implementation process and application maintenance compared to the traditional off-line standalone style:

**Hardware**: Hardware requirements on the end-user side are limited to a reasonably modern computer/laptop and Internet<!-- Mention phone, since android is listed as
alternative? --> connectivity through a fixed line or a mobile modem. There is no need for a specialized server for each user, any Internet enabled computer will be sufficient. A server will be required for on-line deployments, but since there is only one (or several) servers which need to be procured and maintained, this is significantly simpler (and cheaper) than maintaining many separate servers is disparate locations. Given that cloud-computing resources continue to steadily decrease in price while increasing in computational power, setting up a powerful server in the cloud is far cheaper than procuring hardware.

**Software platform**: The end users only need a web browser to connect to the on-line server. All popular operating systems today are shipped with a web browser and there is no special requirement on what type or version<!--I’m not sure this is true, at least in practice -->. This means that if severe problems such as virus infections or software corruption occur one can always resort to re-formatting and installing the computer operating system or obtain a new computer/laptop. The user can continue with data entry where it was left and no data will be lost.

**Software application**: The central server deployment style means that the application can be upgraded and maintained in a centralized fashion. When new versions of the applications are released with new features and bug-fixes it can be deployed to the single on-line server. All changes will then be reflected on the client side the next time end users connect over the Internet. This obviously has a huge positive impact for the process of improving the system as new features can be distributed to users immediately, all users will be accessing the same application version, and bugs and issues can be sorted out and deployed on-the-fly<!-- Bugs can be deployed on-the-fly! -->.

**Database maintenance**: Similar to the previous point, changes to the meta-data can be done on the on-line server in a centralized fashion and will automatically propagate to all clients next time they connect to the server. This effectively removes the vast issues related to maintaining an upgraded and standardized meta-data set related to the traditional off-line deployment style. It is extremely convenient for instance during the initial database development phase and during the annual database revision processes as end users will be accessing a consistent and standardized database even when changes occur frequently.

Although a DHIS 2 implementation can be labeled as online, it is worth noting that such deployment may not purely online and may some local variation depending local constraints. For example, while most users in countries enjoy easy access to their national DHIS 2 instance using their mobile internet or better<!-- Other? Fixed might not be better... --> connectivity means, some unfortunately still struggle to access the system either for data entry or analysis in places where Internet connectivity is volatile or missing in long periods of time. And for these struggling users, alternatives ways to interact with the system need to be found.

This guideline aims at providing advice on how mitigate the effect of lack reliable internet in challenging settings.

## Cases and corresponding solutions { #offline_data_entry_cases }

<!--DHIS2-SECTION-ID:offline_data_entry_cases-->

In this section, we will examine possible challenging cases and describe possible ways to address them or to minimize their effects on users and the entire system on a short term. Obviously, the possible solutions proposed in this guidelines should be adapted in each context by taking into account many other parameters such as security, local practices and rules etc. The thinking in this guideline is not to prescribe bullet proof solutions that can work everywhere but propose ways of addressing connectivity issues in some places in the country.

We identify three (3) main scenarios:

1. Limited internet availability and data entry forms are small
1. Limited internet availability and data entry forms are huge
1. Internet is not at all available

We recognize that these scenarios are very simplistic because in practice a health facility can have for instance one small weekly form for disease surveillance, one big form for monthly progress report and a middle sized form for a health program. This makes the number of possible scenarios for a given setting greater than what is spelled out here. It will be therefore for up to each implementation team to discuss with the stakeholders to make simple choices that address all of the scenarios in a given setting. In most cases about 80 to 95% of districts<!-- Do we have a source for this? --> (or health facilities if data entry is done at this level) will have the same configuration regarding internet availability and only the the remain 5 to 20% will need alternative ways to get their data in DHIS 2.

### 1. Limited internet availability (instability of signal or limited mobile data) and data entry forms are small { #offline_data_entry_cases_small }

<!--DHIS2-SECTION-ID:offline_data_entry_cases_small-->

By limited internet availability, we mean case where:

- network signal is available and good but there is not enough resources to buy adequate mobile data to work continuously online
- network is good but fluctuates or is only available at a given period in the day
- network signal is weak but improves from time to time to allow connection to DHIS 2

And by data entry form small we mean data entry form having less than one hundred<!-- If I had guessed what «Small» meant, I would say
10-20 --> fields.

So if internet connectivity is limited and data entry forms are small, there are two possibilities to address the connectivity problem: Android data capture app and web data entry offline capability.

#### Use of Android data capture app: { #use-of-android-data-capture-app }

<!-- Need to make sure this is updated with release of new
apps -->

The Data Capture for DHIS 2 app allows users to enter data into a DHIS 2 server with an Android device. The app downloads instances of forms which are required to enter data from the server, and stores them on the device. This means that users can enter data offline for facilities they are assigned to and then upload it to the DHIS 2 server when they have network coverage.

To do this, the users will be request to go to the Google Play from their Android device and type DHIS 2 data capture and get the following screen.

Then install the app called **Data Capture for DHIS 2**.

![](resources/images/image5.png)

Once the app is installed and launched, the user will be requested to provide the url of their national DHIS 2, the username and password and tap LOG IN.

<table style="border:1px;">
<tr>
<td style="width:40%;padding: 5 20 5 20;border:1px;">

![](resources/images/offline_data_entry/image4.jpg)

</td>
<td style="width:40%;padding: 5 20 5 20;border:0px;">
</td>
</tr>
</table>

After a successful log in, the app will download automatically the forms and organization units the user is assigned to and store them locally for data entry. From here, any subsequent use of the app for data entry will not require internet connection as instances of forms are already stored locally. Internet connection will be needed only to sync data with the server. This can be done when internet is available locally.

<table style="border:0px;">
<tr>
<td style="width:40%;padding: 5 20 5 20 ;border:0px;">

![](resources/images/image9.jpg)

</td>
<td style="width:40%;padding: 5 20 5 20 ;border:0px;">

![](resources/images/image7.jpg)

</td>
</tr>
</table>

On the system administration side, organizing the data entry form into sections in DHIS 2 will make data entry experience more fluid and enjoyable.

As for the synchronization, when internet connectivity is not available when needed, the user take the mobile device to the district – during the district meeting – or to the nearest area where internet is available.

#### Use of the offline capability of DHIS 2 web data entry module { #use-of-the-offline-capability-of-dhis-2-web-data-entry-module }

The web data entry module is the module inside DHIS 2 allowing for data entry using the we browser. The is in DHIS 2 the regular way of data entry online. However it does have also an “offline” capability that support the continuation of data entry even when the internet is interrupted. This means that is the user want to do data entry at the end of the month for instant, he has to first connect to internet, log in to DHIS 2 and open the data entry forms for at least one of the facilities he is assigned to. From this step, he can disconnect his internet and continue data entry for all his facilities and for the periods he wants as long as the data entry web page window is not closed in the web browser. After finishing the data entry, he can close the browser and event shutdown his computer. The data entered will be stored locally in the cache of the browser and the next time the user will get online and log in DHIS 2 he will be asked to click on a button to upload it.

For this case, it is possible to use either android data entry app or the semi-offline web based feature in DHIS 2 or both depending on the size of data entry forms.<!-- Not clear what "For this case" refers to --> However, clearing the cache of the browser will result in the lost of the data stored locally. Therefore, it is recommended to not clear the cache without making sure that data locally stored is synced.

When the user is logged in and internet is cut (deliberately or not)

![](resources/images/image1.png) <!-- PALD: This screenshot was
taken when the home icon ()top left corner) was broken. I suggest we replace this image! -->

When internet is back and the user log in DHIS 2

![](resources/images/image6.png)

### 2. Limited internet availability and data entry forms are huge { #offline_data_entry_cases_huge }

<!--DHIS2-SECTION-ID:offline_data_entry_cases_huge-->

<!-- Does the PDF data entry option still exist? Where you could generate PDF-based data entry forms that could be managed offline and then be uploaded?-->

When internet but the availability is limited but the data entry form contains several hundreds of fields, it limits possible solutions. In this case it is not advisable to use the android capture for two reasons:

- it can regularly crash because it is not designed to handle forms of very big size<!-- We could perhaps de-emphasise this point.. -->
- it can turn out to be tedious and eye exhausting for users because the screen is small and does not allow for fast data entry

Thus the only option available is to use the web data entry module offline capability described above or move to the nearest place where internet is available when the user cannot afford to wait the next time internet will be available in his area.

### 3. Internet is not at all available { #offline_data_entry_cases_no_available }

<!--DHIS2-SECTION-ID:offline_data_entry_cases_no_available-->

In this case there are three options:

- Use of the Android capture app for data entry locally and sync the data at the upper level where internet is available if the user attends regular meetings there. This is only feasible if the forms are small
- Move to the nearest place (if affordable) or use the opportunity of regular meeting at the upper level to capture data with the web data entry module. In this case depending on the internet connectivity the user can either work online or use the offline capability described in the section [above](#offline_data_entry_cases_small).
- Ask the upper level where internet is available to do data entry regardless of the size of the form. Although this data entry happens at upper level, data can still be entered for every health facility.

<!-- Seems natural with some sort of conclusion or
summary -->

# Visión general de las herramientas de análisis de datos{ #data-analysis-tools-overview }

Este capítulo ofrece una visión general de las herramientas disponibles para el análisis de datos proporcionadas por DHIS2 junto con una descripción del propósito y los beneficios de cada una. Si busca una guía detallada sobre cómo usar cada herramienta, le recomendamos que continúe leyendo la guía del usuario después de terminar este capítulo. La siguiente lista muestra las diversas herramientas:

1.  Informes estándar

2.  Informes de Set de datos

3.   Informe de completitud de datos

4.  Informes estáticos

5.  Informe de distribución de unidades organizativas

6.  Tablas de informe

7.  Gráficas

8.  Tabla dinámica web

9.  SIG

10. My Datamart and Excel pivot tables

## Herramientas de análisis de datos { #data-analysis-tools }

La siguiente sección ofrece una descripción de cada herramienta.

### Informes estándar { #standard-reports }

Los informes estándar son informes con diseños predefinidos. Esto significa que los informes son fácilmente accesibles con unos pocos clicks y pueden ser consumidos por usuarios en todos los niveles de experiencia. El informe puede contener estadísticas en forma de tablas y gráficos y puede adaptarse a la mayoría de los requisitos. La solución de informes en DHIS2 se basa en JasperReports y, por lo general, los informes se diseñan con el diseñador de informes iReport. Aunque el diseño del informe es fijo, los datos pueden cargarse dinámicamente en el informe en función de cualquier unidad organizativa dentro de la jerarquía y con una variedad de períodos de tiempo.

### Informes de set de datos { #data-set-reports }

Los informes de set de datos muestran el diseño de los formularios de entrada de datos como un informe con datos agregados (a diferencia de los datos capturados de bajo nivel). Este informe es de fácil acceso para todo tipo de usuarios y brinda un acceso rápido a los datos agregados. A menudo existe un requisito heredado para la visualización de los formularios de entrada de datos como informes que esta herramienta proporciona de manera eficiente. El informe del set de datos soporta todos los tipos de formularios de entrada de datos, incluidos los formularios de sección y los personalizados.

###  Informe de completitud de datos { #data-completeness-report }

El informe de completitud de datos produce estadísticas para el grado de completitud de los formularios de entrada de datos. Los datos estadísticos se pueden analizar por set de datos individuales o por una lista de unidades organizativas con un padre común en la jerarquía. Proporciona un valor porcentual para la completitud total y para la completitud de las presentaciones oportunas. Se pueden usar varias definiciones de completitud como base para las estadísticas: Primero, basado en el número de set de datos marcados manualmente como completos por el usuario que ingresa los datos. En segundo lugar, en función de si todos los elementos de datos definidos como obligatorios se están completando para un set de datos. Tercero, basado en el porcentaje del número de valores llenados sobre el número total de valores en un set de datos.

### Informes estáticos { #static-reports }

Los informes estáticos proporcionan dos métodos para vincular los recursos existentes en la interfaz de usuario. Primero, brinda la posibilidad de vincular un recurso en Internet a través de una URL. En segundo lugar, brinda la posibilidad de cargar archivos al sistema y vincularlos a esos archivos. El tipo de archivos a subir puede ser cualquier tipo de documento, imagen o video. Ejemplos útiles de documentos para vincular son encuestas de salud, documentos de políticas y planes anuales. Las URL pueden apuntar a sitios web relevantes, como la página de inicio del Ministerio de Salud o a fuentes de información relacionadas con la salud. Además, puede utilizarse como interfaz para herramientas analíticas web de terceros apuntando a recursos específicos. Un ejemplo es apuntar una URL a un informe proporcionado por la plataforma de informes BIRT.

### Informe de distribución de unidades organizativas{ #organisation-unit-distribution-reports }

El informe de distribución de unidades organizativas proporciona estadísticas sobre los establecimientos (unidades organizativas) en la jerarquía basada en su clasificación. La clasificación se basa en grupos de unidades organizativas y conjuntos de grupos. Por ejemplo, los establecimientos pueden clasificarse por tipo asignándolas a los grupos pertinentes de un conjunto de tipos de unidades organizativas. El informe de distribución produce el número de establecimientos para cada clase y se puede generar para todas las unidades organizativas y para todos los conjuntos de grupos del sistema.

### Tablas de informes { #report-tables }

Las tablas de informes son informes basados ​​en datos agregados en formato tabular. Una tabla de informes se puede utilizar como informe independiente o como fuente de datos para un diseño de informe estándar más sofisticado. El formato tabular se puede tabular de forma cruzada con cualquier número de dimensiones que aparecen como columnas. Puede contener datos agregados de indicadores y elementos de datos, así como datos completos para conjuntos de datos. Puede contener períodos relativos que permiten reutilizar el informe a lo largo del tiempo. Puede contener parámetros seleccionables por el usuario para unidades organizativas y períodos a fin de permitir que el informe sea reutilizado por todas las unidades organizativas en la jerarquía. La tabla de informes puede limitarse a los resultados principales y ordenarse de forma ascendente o descendente. Una vez generados los datos de la tabla del informe se pueden descargar como PDF, libro de Excel, archivo CSV e informe Jasper.

### Gráficas { #charts }

El componente de gráfico ofrece una amplia variedad de gráficos, incluidos los gráficos de barras, de líneas y de pastel. Los gráficos pueden contener indicadores, elementos de datos, períodos y unidades organizativas tanto en el eje x como en el eje y, así como una línea objetivo horizontal fija. Los gráficos se pueden ver directamente o como parte del tablero, como se explicará más adelante.

### tablas dinámicas web { #web-pivot-tables }

Las tablas dinámicas web proporcionan un acceso rápido a los datos estadísticos en formato de tabla y ofrecen la posibilidad de "pivotar" cualquier número de dimensiones como indicadores, elementos de datos, unidades organizativas y periodos para mostrarlos en columnas y filas con el fin de crear vistas personalizadas. Cada celda de una tabla puede visualizarse como un gráfico de barras.

### SIG { #gis }

El módulo SIG brinda la capacidad de visualizar datos agregados en mapas. El módulo SIG puede proporcionar una cartografía temática de polígonos como provincias y distritos y de puntos como establecimientos en capas separadas. Las capas mencionadas se pueden mostrar juntas y combinar con superposiciones personalizadas. Estas vistas de mapa se pueden navegar fácilmente hacia atrás en el historial, guardarse para acceder a ellas más adelante y almacenarse en el disco como archivo de imagen.  El módulo SIG proporciona envoltura de clases automática y fija para la cartografía temática, conjuntos de leyendas predefinidos y automáticos, la capacidad de mostrar etiquetas (nombres) para elementos geográficos y la capacidad de medir la distancia entre puntos en el mapa. El mapeo se puede ver para cualquier indicador o elemento de datos y para cualquier nivel en la jerarquía de la unidad organizativa. También hay una capa especial para mostrar los establecimientos en el mapa, donde cada establecimiento está representado por un símbolo según su tipo.

### My Datamart and Excel Pivot tables { #my-datamart-and-excel-pivot-tables }

The purpose of the My Datamart tool is to provide users with full access to aggregate data even on unreliable Internet connections. This tool consists of a light-weight client application which is installed on the computer of the users. It connects to an online central server running a DHIS2 instance, downloads aggregate data and stores it in a database on the local computer. This database can be used to connect third-party tools such as MS Excel Pivot tables, which is a powerful tool for data analysis and visualization. This solution implies that just short periods of Internet connectivity are required to synchronize the client database with the central online one, and that after this process is done the data will be available independent of connectivity. Please read the chapter dedicated to this tool for in-depth information.

# Localization of DHIS 2 { #localization-of-dhis-2 }

## DHIS 2 localization concepts { #localization-intro }

Localization involves the adaptation of an application to a specific location. When implementing DHIS 2 in a given country, adequate resources should be allocated to translate and localize the application if required. Translation of the user interface elements, messages, layout, date and time formats, currency and other aspects must be considered. In addition to translation of the user interface itself, metadata content which is contained in the database must also be considered to be translated.

Interface translations are compiled into the system itself, such that new translations can only be accessed by taking a newer version of DHIS 2. Database translations, on the other hand, are specific to your implementation and can be added to your existing DHIS 2 instance.

These two aspects are managed independently and the processes and tools are outlined below.

## User Interface localization { #user-interface-localization }

### Visión general { #overview }

DHIS 2 supports internationalization (i18n) of the user interface through the use of Java property strings and PO files. Java property files are used when messages originate from the back-end Java server, while PO files are used for front-end apps written in JavaScript. The DHIS 2 Android apps use a specific XML format.

> **Note**
>
> The translator need not worry about the different resource file formats; the translation platform hides the details, and only displays the strings that require translation.  
> For example, the figure below shows the source and target strings when translating a resource to French.
>
> ![](resources/images/translation_ui.jpg)

There should always be an English string for all messages in DHIS 2. When the user selects a given language, and a translation is present in that language, then the translation will be shown. However, if the string in the desired language is missing then fallback rules will be applied. In cases when two given translations, such as Portuguese and Brazilian Portuguese share common messages, it is not required to perform a full translation in the variant language. Only messages which are different should be translated.  
Fallback rules are then applied in the following manner (assuming the user has chooses Brazilian Portuguese as their language:

1.  Display the message in Brazilian Portuguese if it exists.

2.  If it does not exist in the variant language, then use the Portuguese message, if it exists.

3.  If there is no message in either the base language or the variant language, choose the ultimate fallback language, English.

> **Important**
>
> There are a number of source strings such as "dd MMM yyyy 'to '" which are used for date/time formatting in various parts of DHIS 2. Part of the value should not be translated because it is actually a special formatting field used by either Java or JavaScript to interpolate or format a string. In this example the part of the value which **can** be translated would be "to", for instance to "a" in Spanish. The special string which should **not** be translated is "dd MMM yyyy". If these date format template strings are translated, it may result in errors in the application!

> **Important**
>
> Some special variables (e.g. {0} ) use curly brackets. This denotes a variable which will be replaced by a number or other value by the application. You must place this variable notation in the correct position and be sure not to modify it.

### Translation Platform { #translation-server }

DHIS2 is now using [transifex](www.transifex.com) as our main platform for managing translations. You can access the DHIS2 resources at [translate.dhis2.org](https://translate.dhis2.org), or directly at https://www.transifex.com/hisp-uio/public.

### How do I contribute to translations? { #how-do-i-contribute-to-translations }

#### Register as a translator { #register-as-a-translator }

The first step is to get access to the project. There are two ways to do this:

1. Navigate to the platform and create an account with transifex, then - request access to our organisation "HISP UiO" as a member of the "DHIS 2 Core Apps" translation team.  
    Transifex have some useful instructions here: [Getting Started as a Translator](https://docs.transifex.com/getting-started-1/translators)

1. Email the DHIS 2 team at translate@dhis2.org to request access.  
   Please provide: - the name, email address and translation language of the user(s) you would like us to give access to, and - a little bit of information about why you are interested in contributing to the DHIS 2 translations

#### Edit translations { #edit-translations }

Once you have access as a translator, you can start translating through the transifex Web Editor.

Transifex have a useful guide here: [Translating Online with the Web Editor](https://docs.transifex.com/translation/translating-with-the-web-editor)

As far as possible, the projects represent DHIS 2 apps one-to-one. For example, the **APP: Data Visualizer** project contains the translation strings for the Data Visualizer app.

Our transifex projects for DHIS2 User Interface all start with one of the following:

- **APP:** indicates that the project contains strings for a specific app
- **APP-COMPONENT:** indicates that the project is a component library used by the apps
- **ANDROID:** indicates that the project is an Andriod app

In addition, **APP: Server-Side Resources** contains some strings that are used by several apps; namely:

- "Data Entry"
- "Maintenance"
- "Pivot Tables"
- "Reports"

> **Tip**
>
> To ensure that there are full translations for a particular app, e.g. "Tracker Capture", you need to make sure translations are complete in:
>
> - The app project: **APP: Tracker Capture**
> - Any projects starting with **APP-COMPONENTS**
> - **APP: Server-Side Resources**, if required. For Tracker Capture this is **not required**.

Within the projects we have resources, which represent localization files in the source code. In order to support multiple DHIS2 versions, with the same localization files, the _version_ is associated with each instance of the file. So, for **APP: Data Visualizer** the list of resources looks like this in the Web Editor:

![](resources/images/implementation_guide/transifex_data_vis.jpg)

i.e. there is only one source resource for the app (`en.pot`), but we have added the versions from 2.31 (v31) up to the latest development (master). The version is shown in the "Category" field, and is also visible as a prefix to the resource name, e.g. `v31--en-pot`.

> **Note**
>
> In general, we request translators focus on the "**master**" resource; it usually contains all strings from previous versions, and when translations are added the platform will fill in matching translations on the previous versions too.

### When will new translations be available in the system? { #when-will-new-translations-be-available-in-the-system }

We have a nightly service that pulls new translations from the transifex platform and opens a pull request on the source code.

The service loops over all projects and supported languages and does the following:

1. Pulls localization files from transifex (**where translations are more than 20% complete**)
2. Raises a pull request on the source code if changes are found for the language

The pull requests are reviewed and merged into the code base as part of the normal development process.

> **Info**
>
> The translations adde to transifex will, in general, be in the next available stable release for all supported DHIS 2 versions
>
> _If you need to ensure that your translations are in the next stable release, contact us (translate@dhis2.org) expalining your needs, and we'll let you know what we can do._

> **Tip**
>
> The translations you add in transifex should be visible in all development demo versions on our play server (https://play.dhis2.org) within a few days, in most cases.

### How do I add a new language? { #how-do-i-add-a-new-language }

Please contact us via email translate@dhis2.org, or on the [Community of Practice](https://community.dhis2.org/c/translation) and we'll add that language to the projects on transifex.

Once resources for that language are more than 20% translated, they will start to be pulled into the system. They will then become visible in the development demo versions, and be available in future releases.

> **Note**
>
> DHIS 2 manages metadata (database) locales independently from the UI. _See the following section._

## Metadata/Database translations { #metadata-database-translations }

In addition to translation of the user interface, DHIS 2 also supports the localization of the metadata content in the database. It is possible to translate individual objects through the **Maintenance app**, but in order to better support a standard translation workflow, a specialized app has been developed for this purpose.

New metadata locales can be added in **Maintenance app > Locales**.

### DHIS 2 Translations app { #translations-app }

The DHIS 2 **Translation app** can be used to translate all metadata (data elements, categories, organization units, etc) into any locale which is present in the database.

To get started, simply choose the **Translations app** from the top level menu.

![](resources/images/translations_app.png)

1.  Choose the type of object you wish to translate from the **Object** drop-down menu, such as "Data elements".

2.  Be sure you have set the **Target Locale** to the correct language.

3.  Choose the specific object you wish to translate, and translate each of the properties (Name, Short name, Description, etc). These properties vary from object to object.

4.  Press "Save" when you are done translating the specific object to save your changes.

> **Note**
>
> You can search for a specific term using the search feature in the upper right hand corner of the app.
