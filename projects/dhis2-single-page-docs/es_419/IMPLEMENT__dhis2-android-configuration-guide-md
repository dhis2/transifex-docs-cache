---
revision_date: "2021-09-17"
template: single.html
---

# Acerca de esta guía { #about*this_guide* }

<!--DHIS2-SECTION-ID:about_this_guide_-->

La documentación de DHIS2 es un esfuerzo colectivo y ha sido desarrollada por el equipo de desarrollo y los usuarios. Si bien se ha procurado por la integración de guías completas, puede haber ciertas funcionalidades que se han omitido o que aún no se han documentado. Esta sección explica algunas de las convenciones que se utilizan en todo el documento.

DHIS 2 es una aplicación basada en navegador. En muchos casos, las capturas de pantalla han sido incluidas para una mayor claridad. Accesos directos a varias funcionalidades se muestran como **Elemento de datos** \> **Grupo de elemento de datos**. El "\>" símbolo indica que debe hacer click en **Elemento de datos** y luego click en **Grupo de elemento de datos** en la interfaz de usuario.

Se han utilizado diferentes estilos de texto para resaltar partes importantes del texto o tipos particulares de texto, como es el código fuente. Cada una de las convenciones utilizadas en el documento se explican a continuación.

> ** Nota **
>
> Una nota contiene información adicional que debe considerarse o una referencia hacia más información que pueda resultar útil.

> ** Consejo **
>
> Un consejo puede ser muy útil en diversas situaciones, por ejemplo en cómo realizar una tarea particular de manera más eficiente.

> ** Importante **
>
> La información importante no debe ignorarse y, por lo general, indica algo requerido por la aplicación.

> ** Precaución **
>
> La información contenida en estas secciones debe ser cuidadosamente considerada, ya que si no se tiene en cuenta, podría dar lugar a resultados inesperados en análisis, rendimiento o funcionalidad.

> ** Advertencia **
>
> La información contenida en estas secciones, si no se tiene en cuenta, podría resultar en pérdida permanente de datos o afectar la usabilidad general del sistema.

> ** Completo **
>
> La información contenida en estos apartados, indicará que estos son aspectos que se han implementado en su totalidad.

> ** Incompleto **
>
> La información contenida en estos apartados, indicará que estos son aspectos que no están implementados y serán ignorados.

> ** No_aplicable **
>
> La información contenida en estos apartados, indicará que estos son aspectos no aplicables.

> ** Trabajo_en_progreso **
>
> La información contenida en estas secciones, indicará que estos son problemas o características que no se implementaron completamente o con comportamiento inesperado ya reportado.

    Los listados de programas generalmente contienen algún tipo de código de computadora.
    Se mostrarán con un fondo sombreado y una fuente diferente.

`Los comandos se mostrarán en negrita y representan un comando que tendría que ejecutarse en el sistema operativo o la base de datos.`

Los enlaces a sitios web externos o referencias cruzadas se mostrarán en texto azul y subrayado como [esto.](http://www.dhis2.org).

<!--
Las referencias bibliográficas se mostrarán entre corchetes como este
Almacén2007. Se puede encontrar una referencia completa en la bibliografía contenida
al final de este documento.
-->

# Introducción { #capture_app_introduction }

Esta guía está diseñada para ayudarle a configurar DHIS 2 para su uso con la aplicación Android Capture.

No es un tutorial ni un manual de formación; Está diseñado para complementar la documentación y materiales de formación principales de DHIS 2 con material de referencia específico para la aplicación de Android.

El documento está dividido en secciones, que tienen como objetivo describir todas las características que se han implementado en la aplicación, las que aún no se han implementado y las que no serán soportadas. Cuando corresponda, se proporcionará una explicación de los problemas con el uso de una función en particular en la aplicación de Android. También se presentarán recomendaciones o consejos para una mejor comprensión y uso de la aplicación.

Además, el documento tiene secciones para nuevas características en el inicio de sesión, configuraciones visuales, gestión de la sincronización y una lista de errores importantes conocidos.

# Recommendations for a DHIS 2 mobile deployment { #capture_app_recommendations }

If you plan to deploy the DHIS2 Android App in the field, we strongly recommend you to read the [Mobile Implementation Guidelines](https://docs.dhis2.org/master/en/dhis2_android_implementation_guideline/about-this-guide.html) published by UiO. It includes chapters on technology requirements, security and configuration aspects, and testing and roll out recommendations. Below you will find some key aspects briefly introduced, we recommend reading the extended document.

## Mobile device specifications { #capture_app_recommendations_mobile_specs }

The Android App is compatible and supported for DHIS 2 versions 2.30 to 2.36. And has no breaking changes with 2.29.

It requires a device that is running Android v4.4 (not recommended but supported) or higher. The minimum recommended for new devices: Android 7 or higher.

In [the specific section of the Mobile Implementation Guidelines](https://docs.dhis2.org/master/en/dhis2_android_implementation_guideline/mobile-device-specifications.html) you will find recommendations for new mobile device acquisitions for a Dhis2 Android deployment.

## Testing and Piloting { #capture_app_recommendations_testing }

If you plan to deploy the DHIS 2 Android App in the field, you should first do a full round of testing of the app in you own configuration.

The app has been extensively tested with the demo servers, and during Beta testing it was tested against some real configurations as well. We know, however, that every DHIS 2 configuration is special in many senses, and might cause inconsistencies that we have not being able to identify.

It is strongly advised to carry out a comprehensive testing of the app in your own server before piloting it.

## How to migrate to Android Capture App { #capture_app_recommendations_migration }

If you are ready for deploying the new Android App in the field and your users are already using Event Capture or Tracker Capture, you should follow these steps:

1.  Sync data of the current app you are using

    > **Warning**
    >
    > Deleting the app without syncing can cause information loss.

2.  Download and install the DHIS 2 Android App
3.  Login using your credentials and all data will be synced.

# Contribuir a la aplicación { #capture_app_contribute }

## Cómo informar un error { #capture_app_contribute_report }

En primer lugar, verifique la [Lista de errores ya reportados en JIRA](https://jira.dhis2.org/issues/?filter=10872)

La lista siempre se actualiza a medida que agrega nuevos errores y trabajamos en ellos. Necesita una cuenta DHIS 2 Jira activa y gratuita.

Al informar de un error, especifique junto con su descripción:

- Versión de DHIS 2 y revisión de compilación
- Versión de la aplicación Android DHIS 2
- Versión del sistema operativo Android
- Dispositivo (cuando sea posible)
- Registro de errores (cuando sea posible)

## Cómo sugerir iconos para la biblioteca{ #capture_app_contribute_icons }

DHIS 2 y la nueva aplicación Android DHIS 2  le permiten seleccionar iconos para programas,set de datos y las opciones de un set de opciones. DHIS 2 2.30 incorpora 125 iconos. Planeamos expandir la colección de iconos en cada versión futura de DHIS 2- para eso necesitamos su ayuda: estamos buscando ideas para nuevos iconos - envíe el suyo usando [sta forma](https://forms.gle/FkUmwfZGYAScd2326).

## Cómo agregar traducciones{ #capture_app_contribute_translations }

Los pasos para contribuir a la traducción de la aplicación son:

1. Crear una cuenta en [Transifex](https://www.transifex.com/signin/?next=/hisp-uio/)
2. Unirse a una organización existente
3. Busque HISP UiO y seleccione la organización, no los proyectos
4. Seleccione ANDROID: Capturar proyecto
5. Únase al equipo para el idioma seleccionado

Háganos saber si no funciona bien o si necesita agregar un nuevo idioma enviando un mensaje en la comunidad al usuario dhis2-android.

# Visual configurations { #capture_app_visual }

## Meta data sync error { #capture_app_visual_sync_error }

In case of errors during the sync process, a message is displayed in the settings menu ('Sync data' or 'Sync configuration' section). Also, a red sync icon is displayed next to the program in the Home screen. The sync error log gives details about the error and is prepared to be shared with admins.

![](resources/images/capture-app-image43.jpg){ width=25%} ![](resources/images/capture-app-image11.png){ width=25%}

You can also open the sync errors log from **Settings**:

![](resources/images/capture-app-image15.jpg){ width=25%}

## Personalize your Icon { #capture_app_visual_icon }

You can set your icon in the wallpaper using the DHIS 2 App Widget. The icon will be the flag configured in your server.

![](resources/images/capture-app-image32.jpg){ width=25%}

> **Note**
>
> How to add a widget:
>
> - Long press in your wallpaper
> - Select Widgets
> - Look for the DHIS 2 Widget
> - Select
>
> It will add a shortcut to your app.

## Personalise the colour of the App { #capture_app_visual_colour }

You can set the generic theme of the app by configuring the them in our server:

![](resources/images/capture-app-image28.png){width=80% }

> **Note**
>
> How to set the server theme and flag:
>
> Go to **System Settings > Appearance > Style**
>
> - Select your style
>   - Green,
>   - India (Orange),
>   - Light Blue,
>   - Myanmar (red),
>   - Vietnam
> - Select your flag
>
> ![](resources/images/capture-app-image23.png){ width=25%}

## Icon library for metadata { #capture_app_visual_icon_lib }

There are currently 134 icons available that you can choose from. You can search by name in the icon picker widget. Icons are available in positive, negative and outlined shapes. We will be adding many more icons in future releases.

Icons can be associated to programs, stages, data elements and the options of an option set. This is configurable through the Maintenance App.

> **Note**
>
> This feature is available from DHIS 2 2.30 onwards

![](resources/images/capture-app-image13.png){ .center width=80% }

In the Android App icons render in the home screen to illustrate all the programs available to a user, or while adding an stage. For data elements and options, the icons render for single event programs, when a section contains a single DE, showing the option set as a matrix or sequence of images.

![](resources/images/capture-app-image19.png){ width=25%} ![](resources/images/capture-app-image26.png){ width=25%}

> **Note**
>
> Icons will initially only render in the new Android app. The new web-based Capture App will incorporate them in the near future.

We plan to expand the collection of icons on each future version of DHIS2- for that we need your help: we are seeking ideas for new icons - please submit yours using [this form](https://www.google.com/url?q=https://drive.google.com/open?id%3D1LmfYJQAu3KyDfkY3X6ne7qSsuTa9jXZhoQHzkDxeCdg&sa=D&ust=1557433016147000).

## Colour palette for metadata { #capture_app_visual_colour_palette }

Tracker and Event capture now have the ability to render colours for programs, stages, data elements and options in option sets. A colour picker is integrated in the Maintenance App, which shows as a palette, except for options which allows the selection of any colour.

![](resources/images/capture-app-image20.png){ .center width=80% }

In the Android App, the color will be rendered as background color for programs and stages combined with an icon (if selected). For options it renders as the background colour during data entry form for single event programs. When the user selects a program with an assigned colour, that colour becomes the background theme for all screens in the domain of the program.

![](resources/images/capture-app-image19.png){ width=25%} ![](resources/images/capture-app-image2.jpg){ width=25%}

> **Note**
>
> Colours will first be available in the new Android app, followed in future releases by the new web-based Capture App.

## Rendering Types for Program Sections { #capture_app_visual_rendering_type }

![](resources/images/capture-app-image16.png){width=80% }

**Program Section**: when used in combination with icons, a Program Section with a single data element and associated Option Set can render the options in sequential or matrix layout (see screenshots). If the icon is not found, the app displays the DHIS logo.

![](resources/images/capture-app-image26.png){ width=25%} ![](resources/images/capture-app-image36.png){ width=25%}

> **Note**
>
> Render type for sections will first be available in the Android app, followed in future releases by the new web-based Capture App UI.

## Calendar { #capture_app_visual_calendar }

Now it is possible to use two different calendars. The one on the left is the first to appear but you can change it by clicking on the calendar icon on the lower left corner.

This is available when:

1. Making a new enrollment.
2. Creating a new event (Programs with and without registration).
3. Using period filters in data sets and programs with and without registration.

![](resources/images/capture-app-image60.png){ width=25%} ![](resources/images/capture-app-image61.png){ width=25%}

> **Note**
>
> For Android versions 4.4, 5.1 and small devices, the Accept option is not visible in the second calendar view.

## Render types { #capture_app_visual_render }

The available rendering options have been expanded to include horizontal and vertical radio buttons, checkboxes and toggles. The allowed options depend on the value type.

- Yes Only: can be rendered as radio button or checkbox.

![](resources/images/capture-app-image111.jpg){ width=25%}

- Yes/No: can be rendered as horizontal/vertical radio buttons or horizontal/vertical checkboxes or toggle.

![](resources/images/capture-app-image112.jpg){ width=25%}

- Text: When is linked to an option set can be rendered as horizontal/vertical radio buttons or horizontal/vertical checkboxes. The option set must be configured with value type "Text", any other value type will be displayed as a drop-down list.

![](resources/images/capture-app-image110.jpg){ width=25%}

> **Note**
>
> The default rendering option will automatically display a search box whenever there are more than 15 elements in the option set to ease the selection.
>
> ![](resources/images/capture-app-options_no_search.png){ width=25% } ![](resources/images/capture-app-options_search.png){ width=60% }

### QR and Barcodes { #capture_app_visual_render_qr }

Data elements or attributes type text can be also configured as QR or barcodes. When a Data Element or Attribute is rendered as QR/Barcode, the app will open the device camera to read the code image. When the QR/Barcode is a TEI attribute configured as searchable, the user will be allowed to scan the code in order to search and identify the Tracked Entity Instance. This will also work for option sets.

Barcodes also allow the user to manually enter the value.

![](resources/images/capture-app-image118.png){ width=20%} ![](resources/images/capture-app-image119.png){ width=20%} ![](resources/images/capture-app-image120.png){ width=20%} ![](resources/images/capture-app-image121.png){ width=20%}

# Configuración { #capture_app_settings }

![Nueva configuración](resources/images/capture-app-image17.jpg){ width=25%} ![Nueva configuración](resources/images/capture-app-image85.jpg){ width=25%}

<!-- PALD: No creo que la siguiente imagen se agregue al manual ![](resources/images/capture-app-image29.png){ width=35%} -->

**Proceso de sincronización de datos**: el usuario puede elegir de una lista desplegable si los datos ingresados ​​en la aplicación se suben al servidor manualmente o se programan cada 15 minutos, 1 hora o 1 día. De forma predeterminada, la aplicación se sincronizará cada 24 horas. Este tipo de sincronización incluye eventos nuevos y actualizados, así como TEI´s.

**Proceso de sincronización de configuración (sincronización de metadatos)**: el usuario puede elegir de una lista desplegable si los datos ingresados ​​en la aplicación se suben al servidor manualmente o se programan cada día o semana. De forma predeterminada, la aplicación se sincronizará cada 24 horas. Esta sincronización actualizará los cambios en los programas o configuraciones en la web.

**Parámetros de sincronización**: Estos parámetros permiten al usuario especificar el número máximo de TEI's y eventos que se pueden almacenar en el dispositivo local. El usuario también puede especificar si se aplican límites por unidad organizativa o en total. Los valores se pueden establecer por defecto haciendo click en "Restablecer por defecto".

> ** Nota **
>
> Los datos de sincronización, la configuración de sincronización y los parámetros de sincronización se pueden sobrescribir usando la aplicación web de configuración de Android.

**Valores reservados**: especificará el número de Id's reservados disponibles en su dispositivo y le permitirá rellenarlos.

**Abrir registro de errores de sincronización**: El registro de errores de sincronización brinda detalles sobre el error y está preparado para ser compartido con los administradores.

**Eliminar datos**: esta acción eliminará los datos locales sin tener que cerrar la sesión.

**Restablecer aplicación**: esta acción cerrará la sesión del usuario y eliminará todos los datos y metadatos. Es similar a reiniciar la aplicación.

**Configuración de SMS**: Esta sección permite verificar o editar los parámetros relacionados con el gateway de SMS.

# Generic features { #capture_app_generic }

## Login { #capture_app_generic_login }

There are two ways to access the application:

1. Manual: The user must type the corresponding URL of the server to be used and enter the username and password.

   > **Note**
   >
   > Take note that login is only possible with servers from version 2.29.

2. QR: The user can use a QR code instead of typing the URL. Username and password must be entered manually.

   > **Note**
   >
   > After the first login, the app will suggest URL and username of all successful connections.
   >
   > You are able to make an _offline_ login only if using the same user as the last online session.

![](resources/images/capture-app-image62.PNG){ width=25%} ![](resources/images/capture-app-image63.jpg){ width=25%}

> **Warning**
>
> In DHIS2 versions up to 2.30 if a user attemps an on-line login and their account has been disabled as explained in the [DHIS 2 Manual - Disable User](https://docs.dhis2.org/master/en/user/html/dhis2_user_manual_en_full.html#disable_user) all the data will be wiped from the phone. Make sure that before disabling a user all the data has been synced or that you are using this feature to remotely wipe sensitive data in case of a device getting lost.
>
> Due to a change in the login API this feature is not available in 2.31 and above versions.

## Account Recovery { #capture_app_generic_recovery }

The users will be able to restore their own password if they have the setting enabled: Enabled User Account Recovery.

![](resources/images/capture-app-image64.PNG){ width=25%}

## Blocking session (PIN) { #capture_app_generic_PIN }

User is able to lock the session using a 4 digit PIN. This allows to move to other apps in your phone without deleting the local data. If the user forgets the PIN number, log in by entering the credentials is also available.

![](resources/images/capture-app-image65.PNG){width=25%} ![](resources/images/capture-app-image63.jpg){width=25%}

## Fingerprint { #capture_app_generic_fingerprint }

User is able to use the fingerprint scanner if the feature is activated in the device.

- When the fingerprint scanner is enable and not the PIN, every time the app closes, goes to background or the device is blocked, the session will be locked. Once the app is open again, the user needs to tap the fingerprint icon to activate the scanner.
- If the PIN and the fingerprint are set, when the session is locked and the user open the app again, the PIN will be asked.

![](resources/images/capture-app-image104.jpg){width=25%} ![](resources/images/capture-app-image105.jpg){width=25%}

## Instructions/information buttons { #capture_app_generic_instructions }

A contextual guide is available in Event details and TEI dashboard screen.

![](resources/images/capture-app-image42.jpg){width=25%} ![](resources/images/capture-app-image66.png){width=25%}

> **Tip**
>
> User is able to re-open<!-- PALD: unnecessary: (trigger)--> the instructions by clicking on the three dots at the top right corner of the screen.

## Filter { #capture_app_generic_filter }

<!-- PALD alternative: "The Filter allows you to narrow down the data available from the ..." -->

The app has new and improved filters for all listing screens (home, event listing, tei search and dataSets).

Filter by period, org. Unit, sync state, event status, category option combination and "assigned to me".

![](resources/images/capture-app-image19.png){ width=25%} ![](resources/images/capture-app-image97.png){ width=25%} ![](resources/images/capture-app-image123.png){ width=25%} ![](resources/images/capture-app-image134.png){ width=25%}

Filters will adapt to the different programs and data sets.

1. Program without registration: Date, Org. Unit, Sync State, Event Status and, Category Combination.
2. Program with registration: Event Date, Date of enrollment, Org. Unit, Sync, Enrollment Status, Event Status and Assigned to me. The filter icon will show only if a list of events is available (Display front page list feature or search)
3. Data Sets: Period, Org. Unit, and Sync State.

### Assigned to me { #capture_app_generic_filter_assigned }

It is possible to filter events based on its assignment to the current user. The “Assigned to me” filter has been added to the single event program list, the TEI list and the TEI Dashboard and the map views. It will only be displayed when the active program is configured to assign events to users.

### Event Date/Date/Period { #capture_app_generic_filter_date }

Filter the Events, TEIs(based on their events) and data sets, the following periods of time are availables:

- Today
- This week
- This month
- Yesterday
- Last week
- Last month
- Tomorrow
- Next week
- Next month
- From-to
- Other (Opens a date picker)
- Anytime

### Org. Unit { #capture_app_generic_filter_orgunit }

Allows the user to type the search or select an org unit from the tree.

### Sync { #capture_app_generic_filter_sync }

Filer by:

- Synced (events, TEIs, Data Sets)
- Not Synced
- Sync Error
- SMS Synced

### Event Status { #capture_app_generic_filter_event }

Filter the events by:

- Open
- Schedule
- Overdue
- Completed
- Skipped

Multiple status selection is permited. Once you open a TEI, the filter will be kept in the dashboard and show only the events with the selected status.

Events shown are up to 5 years old.

### Date of Enrollment { #capture_app_generic_filter_date_enroll }

The 'Date of Enrollment' will apply to the Enrollment date of the TEI in the program. If there is more than one enrollment date, it should sort the results by the most recent one. The label of this filter will display when available.

### Enrollment Status { #capture_app_generic_filter_enroll_status }

The filter 'Enrollment status' offers three options: Active, Completed, Cancelled. Only one option can be selected at time. If you filter by "completed" and the TEI has more than one enrollment, the app will open the "active" enrollment. To see the completed one, select the three dot menu at the top right corner of the dashboard and select "program enrollments".

### Filtering added in TEI Dashboard: { #capture_app_generic_filter_tei }

Filters have been added to the TEI dashboard. It is possible to filter the events of a Tracked Entity Instance enrollment per period, organisation unit, sync status, event status, and user assignment.

![](resources/images/capture-app-image114.png){ width=25%}

## Sorting { #capture_app_generic_sorting }

Sorting has been integrated in the filter menu.

The sorting button will be on the filter bars with the following behavior:

- Only one sorting applies at a time. If the user clicks a different one, the previous one is disabled.
- The icon for applied sorting shows it is active, the others are inactive.
- Repeated clicks keep changing the order to the reverse.

![](resources/images/capture-app-image135.png){ width=25%}

### Dates (Period, Date, Event Date or Enrollment Date) { #capture_app_generic_sorting_dates }

- Event Date preceds due date, only use due date when there is no event date.
- Order from most recent to less recent. Future events (due date) goes first.

### Org units { #capture_app_generic_sorting_orgunits }

- List will be sorted in alphabetical order by org unit name.

### Enrollment Status { #capture_app_generic_sorting_enrollment }

- List will be sorted in alphabetical order by status name.

![](resources/images/capture-app-image123.png){ width=25%}

## Sync Information { #capture_app_generic_sync_info }

Allows the user to check sync information for a specific program. Now the synced records will not show any icon. Only unsynced, error or SMS icons will be displayed.

![](resources/images/capture-app-image67.png){ width=20%} ![](resources/images/capture-app-image69.png){ width=20%}

### Granular Sync { #capture_app_generic_sync_granular }

Allows to sync individual records (Program, Event, TEI, DataSet, DataValues) with the server.

![](resources/images/capture-app-image89.png){ width=25%} ![](resources/images/capture-app-image161.png){ width=25%}

### SMS Sync { #capture_app_generic_sync_sms }

When there is no internet conexion, it allows to send a record though several SMS messages. The record is marked as “SMS synced”.

![](resources/images/capture-app-image91.png){ width=25%}

> **Tip**
>
> Edit parameters related to SMS gateway in the SMS Settings (Settings Menu)

![](resources/images/capture-app-image90.png){ width=25%}

> **Note**
>
> Note that in order to user the SMS sync capabilities the SMS services needs to be enabled in the server side as described in the (official documentation)[https://docs.dhis2.org/master/en/dhis2_user_manual_en/mobile.html#sms-service]. You can also find more information on how to use different gateways in the (Android Implementation Guidelines)[https://docs.dhis2.org/master/en/dhis2_android_implementation_guideline/about-this-guide.html].

## Org unit { #capture_app_generic_orgunit }

![](resources/images/capture-app-image30.png){ width=25%}

The whole organisation unit tree is displayed. Organisation units not available for data entry will be colored in grey. User must check the box to select the org unit wanted.

> **Caution**
>
> Mobile users are not expected to access the org. unit hierarchy of a whole country. Maximum number of org units is difficult to set, as the App does not set the limit, but the resources on the device (memory, processor). We could say below 250 org units should be safe, but still believe that is a very big number for a mobile use case.

## Data Sets { #capture_app_generic_datasets }

The user can now enter aggregate data for an organisation Unit, a period and a set of data elements and send it to the server.

![](resources/images/capture-app-image87.png){ width=25%} ![](resources/images/capture-app-image93.png){ width=25%} ![](resources/images/capture-app-image92.png){ width=25%}

## Differentiating Data Sets, Tracker and Event programs { #capture_app_generic_differentiating }

![](resources/images/capture-app-image87.png){ width=25%}

> **Tip**
>
> An easy way to differentiate them is by looking at the word at the bottom left corner. The word 'Event' will always be in event programs. In tracker will appear the name of the tracked entity type (person, patient, building, etc.). For data sets, the word 'DataSets' will be shown next to the number of records.

## Sharing Data { #capture_app_generic_shargin }

![](resources/images/capture-app-image72.png){ width=25%} ![](resources/images/capture-app-image73.png){ width=25%}

## Capture Coordinates { #capture_app_generic_capture_coord }

### TEI coordinates { #capture_app_generic_capture_coord_tei }

Capture the TEI coordinates in the registration form. Enable this feature in the TET feature type.

![](resources/images/capture-app-image94.png){ width=25%}

### Polygons { #capture_app_generic_capture_coord_polygons }

The app now supports the geoJSON format and the user is able to capture polygons.

![](resources/images/capture-app-image95.png){ width=25%}

## Images { #capture_app_generic_images }

ValueType image has been implemented app side. This allows to pick an image for a data element or attribute and send it to the server. For TEIs, the first data element/attribute with this value type and marked as displayed in list will be used as the TEI profile image.

![](resources/images/capture-app-image99.png){ width=25%} ![](resources/images/capture-app-image98.png){ width=25%} ![](resources/images/capture-app-image100.png){ width=25%}

Open the TEI profile image by clicking on it.

![](resources/images/capture-app-image138.png){ width=25%}

## Display events and TEIs in maps { #capture_app_generic_display_events }

When a program stage or tracked entity type have a feature type (and for programs with registration the option displayFrontPageList is enabled) the listings can be switched to display the information in a map. Make the switch by clicking on the map icon in the navigation panel.

![](resources/images/capture-app-image101.png){ width=25%} ![](resources/images/capture-app-image102.png){ width=25%}

If the TEI has a profile image, the map will display it. ![](resources/images/capture-app-image103.png){ width=25%}

# Data Sets { #capture_app_datsets }

## Data Sets in Android { #capture_app_datsets_android }

### Navigation Bar (NEW 2.4) { #navigation-bar-new-24 }

Use the new navigation bar to switch between the data entry form and the overview screen.

![](resources/images/capture-app-image139.png){ width=25%}

### Overview Screen { #overview-screen }

The new overview tab contains the following details:

- Data set name
- Last Update
- Open/Close Status
- Período
- Org Unit
- Category option combo

![](resources/images/capture-app-image122.png){ width=25%}

#### Saving a data set { #saving-a-data-set }

Validation rules and completion of data sets are integrated in the save button actions:

- When a data set is configured to complete only if validation passess. If the validation is successful, a dialog asking to mark as complete will show up. The app will allow completion only if all mandatory fields have value.

![](resources/images/capture-app-image131.png){ width=25%}

- if it is not successful, then an error dialog should show and the dataset will not be marked as complete. The description and instructions of the validation rule will be displayed to help the user identify the error.

![](resources/images/capture-app-image128.png){ width=25%}

- On a dataset that does not have setup "Complete allowed only if validation passes". When clicking on the save button; if the dataset has validation rules associated to it, then the app will ask the user to run the validation rules.

![](resources/images/capture-app-image130.png){ width=25%}

- If the validation is not successful, an error dialog should show but with the possibility to complete the data set anyway. The description and instructions of the validation rule will be displayed to help the user identify the error.

![](resources/images/capture-app-image129.png){ width=25%}

- If the dataset does not have validation rules, the dataset will be marked as complete if all mandatory fields have value.

### Increase Row Headers { #increase-row-headers }

The length of the first column in datasets is now calculated to show the full text for the Data Elements names. Users can also adjust the width to adapt it better to their screen size.

![](resources/images/capture-app-image113.png){ width=25%}

### Indicators (NEW 2.4) { #indicators-new-24 }

Indicators are now available in default and section forms and are displayed at the bottom of the data entry form.

![](resources/images/capture-app-image140.png){ width=25%}

## Supported features overview { #capture_app_datsets_supported_features }

The following is a comprehensive list of all features available for Data Sets in DHIS2 and notes on whether or not these have been implemented in the Android Capture app.

In the notes, ‘admin’ refers to someone who develops and configures a DHIS2 system, and ‘user’ refers to someone who uses apps to capture data, update it, and review reports.

| Leyenda | Descripción |
| :-: | :-- |
| ![](resources/icons/icon-complete.png) | Feature implemented |
| ![](resources/icons/icon-incomplete.png) | Feature not implemented&nbsp;(will be ignored) |
| ![](resources/icons/icon-na.png) | No aplicable |
| ![](resources/icons/icon-wip.png) | Work in progress. Feature not completely implemented yet or with unexpected behaviour already reported. |

| Feature | Description of feature | Estado | Notas sobre implementación |
| --- | --- | :-: | --- |
| Period type | Determines the period covered by data-entry. | ![](resources/icons/icon-complete.png) |  |
| Expiry days | Sets the deadline (days after period) after which DHIS2 locks all data entry for the period (0 means no locks at all). Periods can still be opened, but cells will be greyed out. | ![](resources/icons/icon-complete.png) |  |
| Open future periods for data entry | This setting can be used to unlock the current period or all periods up to a certain point in the future. | ![](resources/icons/icon-complete.png) |  |
| Data input periods | Allows you to set a specific range of dates for a period's data-entry, and prevents data capture for periods outside of this date range. | ![](resources/icons/icon-complete.png) |  |
| Days after period to qualify for timely submission | Sets the deadline (days after period) after which DHIS2 treats data entry as 'late'. | ![](resources/icons/icon-complete.png) |  |
| [Attribute] category combination | Allows an admin to attach a Category (set of Options) to the Data Set, generating a separate data entry screen for each Option (This is called an Attribute Category Combination in DHIS2). | ![](resources/icons/icon-complete.png) |  |
| [Attribute] Category Combination option restrictions | If Attribute Category Combinations (see above) are used, then this features gives admins the ability to restrict which specific options are available in the drop-down. Each option can be restricted to a particular range of dates and/or organisation units, and that option will not be shown if data is being captured outside of these dates or org units. | ![](resources/icons/icon-complete.png) |  |
| Complete notification recipients | Sends a DHIS2 message to the selected User Group when the Data Set is marked 'complete'. | ![](resources/icons/icon-incomplete.png) |  |
| Send notification to completing user | Sends a DHIS2 message to the data-entry user when the Data Set is marked 'complete'. | ![](resources/icons/icon-incomplete.png) |  |
| All fields for data elements required | Where one or more Categories are used to disaggregate a data element, this setting forces the user to either complete all disaggregations, or to leave them all empty. | ![](resources/icons/icon-complete.png) |  |
| Complete only if validation passes | Only allows the Data Set to be marked complete if no Validation Rules are triggered. | ![](resources/icons/icon-complete.png) |  |
| Skip offline | Requires the user to add a 'comment' if a value is left blank (or Data Set cannot be 'completed'). Only allows Data set to be selected for data entry while connected to the internet (although once selected, data entry can continue offline). | ![](resources/icons/icon-incomplete.png) |  |
| Data element decoration | Shows the description of the Data Element when the mouse hovers over the Data Element Name. | ![](resources/icons/icon-complete.png) |  |
| Section forms - render sections as tabs | Displays each section in the form as a separate tab, instead of all together on the same page. | ![](resources/icons/icon-incomplete.png) |  |
| Section forms - render vertically |  | ![](resources/icons/icon-incomplete.png) |  |
| Data Element - CatCombos | Enables an individual Data Element to be automatically disaggregated into one or more categories (eg both male/female and child/adult), with separate fields/values collected for each of these disaggregations. | ![](resources/icons/icon-complete.png) |  |
| Inline indicators / section form totals | Enables the default CatCombo for each data element to be overridden with a different CatCombo for this Data Set only. | ![](resources/icons/icon-complete.png) |  |
| Section forms - render sections as tabs | Adding indicators to Data Sets makes them available for use in section forms and custom forms; row and/or column totals can also be added to these forms. (Both are displayed on the screen alongside data capture cells, and update automatically as values are captured.) | ![](resources/icons/icon-incomplete.png) |  |
| Organisation unit assignment | Ensures the Data Set is only available for those organisation units to which it has been assigned. | ![](resources/icons/icon-complete.png) |  |
| Compulsory data elements | This allows the marking of specific Data Elements/CatCombos as ‘compulsory’, which means users must enter a value (they cannot be left blank). | ![](resources/icons/icon-complete.png) |  |
| Forms - default forms | DHIS2 automatically renders the form as table(s), with a new table started every time the Category Combinations change (= different column headings). | ![](resources/icons/icon-complete.png) |  |
| Forms - section forms | Form sections and section titles can be specified, giving you more control over the grouping and layout of the form (but it is still rendered automatically). This section form automatically overrides the default form if implemented. | ![](resources/icons/icon-complete.png) |  |
| Forms - custom forms | A custom HTML form can be designed, giving total control over layout, and enabling JavaScript code to be included within the form. This custom form automatically overrides the default and section forms if implemented. | ![](resources/icons/icon-incomplete.png) |  |
| Section forms - disable fields (grey) | With section forms, this enables you to individually 'grey out' fields (a whole data element, or specific CatCombo Options) so that users cannot enter data into it. | ![](resources/icons/icon-complete.png) |  |
| Multi-organisation unit forms | When this server setting is enabled, form layouts are changed to show multiple org units as rows, and all data elements/CatCombos as columns (ie very flat and wide form per org unit). | ![](resources/icons/icon-incomplete.png) |  |
| Data value pop-up: mark value for follow-up | Enables the user to mark this specific data value for follow-up (marked values can be reviewed in the Data Quality web app). | ![](resources/icons/icon-incomplete.png) |  |
| Data value pop-up: add comment to value | Enables the user to add a comment to this specific data value. | ![](resources/icons/icon-incomplete.png) |  |
| Data value pop-up: display data element history | Shows the history over time of this specific data element (i.e. previous 12 months' values). | ![](resources/icons/icon-incomplete.png) |  |
| Data value pop-up: display audit trail | Shows a history of previous edits to this specific data value. | ![](resources/icons/icon-incomplete.png) |  |
| Data value pop-up: min/max ranges (also accessible via Data Administration app) | This enables users to set minimum and maximum expected values for a data element, enabling DHIS2 to highlight values outside this range during data entry (but it does not prevent saving or 'completing'). You can set min/max ranges automatically/in-bulk (via the Data Administration app) or manually/individually (via the Data Entry app). | ![](resources/icons/icon-incomplete.png) |  |
| Print form / print blank form | Enables printing of a data-entry form, to permit data capture on paper, and data-entry later. | ![](resources/icons/icon-incomplete.png) |  |
| Save data | Data entered into the screen is not captured until 'saved' - until then, it is only held in memory, and is lost if power is switched off etc. | ![](resources/icons/icon-complete.png) |  |
| Complete data set | This enables user to mark data-entry for a period/org unit/etc as 'complete'. Note that this is just for data-entry tracking and timeliness purposes, and does not lock the data set or prevent further edits. | ![](resources/icons/icon-complete.png) |  |
| Data elements: validation rules | Enables the creation of rules (at the data element level) to enforce data quality, based on comparing different values/collections of values. (Eg number of patients seen in the month must be less than the number of visits for the month.) | ![](resources/icons/icon-complete.png) |  |
| Data sharing levels/Can capture data | Enables the user to add new values, edit values and delete values in the dataset. | ![](resources/icons/icon-complete.png) |  |
| Data sharing levels/Can view data | Enables the user to see values within the dataset. | ![](resources/icons/icon-complete.png) |  |
| Data sharing levels/No access | The user won’t be able to see the dataset. | ![](resources/icons/icon-complete.png) |  |
| Data approval workflow | If an admin selects a pre-configured Data Approval Workflow, this will be used to enforce an ‘approval’ or ‘acceptance and approval’ cascade, enabling users to sign-off and lock data. | ![](resources/icons/icon-complete.png) | The process of the approval has to be done in web. Once a data set is approved, the data will not longer be editable in the app. |
| Missing values requires comment on complete | Any missing values will require a comment to justify their absence. | - |  |

# Programs { #capture_app_programs }

## Programs in Android { #capture_app_programs_android }

### New Navigation Bar (NEW 2.4) { #new-navigation-bar-new-24 }

Use the new navigation bar to move from one screen to another.

#### Events { #events }

1. Details
2. Entrada de datos
3. Analíticas
4. Notes

![](resources/images/capture-app-image141.jpg){ width=25%}

#### TEI Dashboard { #tei-dashboard }

1. Details
2. Analíticas
3. Relationships
4. Notes

![](resources/images/capture-app-image142.jpg){ width=25%}

#### Event listing for event and tracker programs { #event-listing-for-event-and-tracker-programs }

1. List view
2. Vista de Mapa

![](resources/images/capture-app-image143.jpg){ width=25%} ![](resources/images/capture-app-image144.jpg){ width=25%}

### Complete/Re-open event { #capture_app_programs_complete_reopen }

User must enter the event and then click the complete icon in the bottom right corner.

![](resources/images/capture-app-image37.jpg){ width=25%} ![](resources/images/capture-app-image74.png){ width=25%}

Two options will be presented:

1. Finish and Complete
2. Finish

![](resources/images/capture-app-image75.png){ width=25%}

> **Note**
>
> To verify if an event is completed look at the icon, it must be a green checked box.

> **Note**
>
> The app needs to take into consideration if the user has the correct authority (‘Uncomplete events’) to reopen a completed event.

### Field completion percentage { #capture_app_programs_field_percentage }

The percentage of data completed in each event is shown in the top right corner of an event when it is opened after first registration.

![](resources/images/capture-app-image80.png){ width=25%}

> **Note**

### Sections Navigation { #capture_app_programs_sections_nav }

The display for sections has been redesigned for a more simple user experience. In addition, the sections in enrollment form are now supported and are aligned with the design of the event sections.

![](resources/images/capture-app-image115.png){ width=25%} ![](resources/images/capture-app-image116.png){ width=25%}

### Error messages { #capture_app_programs_errors }

The app will now list the name of the mandatory fields missing when the user tries to complete an event or enrollment. The sections containing the missing fields will be highlighted to help the user find the missing fields.

![](resources/images/capture-app-image117.png){ width=25%}

The errors and warnings are also shown as an indicator next to the section name.

![](resources/images/capture-app-image145.png){ width=25%}

### Event Notes { #capture_app_programs_event_notes }

It is possible to add notes to events in single event programs and program stage events. Notes are available in a new tab at the data entry form.

![](resources/images/capture-app-image106.png){ width=25%} ![](resources/images/capture-app-image107.jpg){ width=25%}

### Maps { #capture_app_programs_maps }

#### Map Layers { #capture_app_programs_map_layers }

The possible layers to display in maps are:

- Show events (For programs without registration)
- Satellite view
- TEI coordinates (By default in programs with registration)
- Enrollment Coordinates (Only for programs with registration)
- Program Stage coordinates (Only for programs with registration)
- Relationships (Only for programs with registration)
- Heatmap (Only for programs with registration)
- Tracked Entity Attributes (Coordinates Value Type - Only for programs with registration)
- Data Elements (Coordinates Value Type)

The user can select one or more layers to be displayed.

The maps will display coordinates and polygons.

![](resources/images/capture-app-image125.png){ width=25%} ![](resources/images/capture-app-image146.png){ width=25%} ![](resources/images/capture-app-image136.png){ width=25%}

#### Map Carousel { #capture_app_programs_map_carousel }

On the map view of the program, a carousel of cards is displayed, one for each enrolled TEI (Tracker programs) or Event(Event programs).

- TEI cards on the carousel follow the same design as the TEI list view.

- When scrolling horizontally the carousel, the map zooms into the selected coordinates. If coordinates field is empty a message is shown instead.

![](resources/images/capture-app-image126.jpg){ width=25%} ![](resources/images/capture-app-image133.png){ width=25%}

Each card displays Tracked Entity Attributes (for Tracker Programs) and Data Elements (for Event programs) configured as 'Display in list'.

![](resources/images/capture-app-image147.png){ width=25%}

#### Map Relationships { #capture_app_programs_map_relationships }

In tracker, the user can see relationships on a map by tapping the map icon on the relationships tab.

- An arrow is shown on the direction of the relationship.
- For bidirectional relationships, the arrow points both sides.
- Each relationship type displays a different color.
- If one or both TEIs have a polygon as coordinate, the line goes from (and to) the nearest point in the polygon of both TEIs.

![](resources/images/capture-app-image132.png){ width=25%}

#### Map Current Location (NEW 2.4) { #map-current-location-new-24 }

If the user grants location permissions to the App, the map will show the current location represented as a blue color dot.

![](resources/images/capture-app-image148.png){ width=25%}

#### Map Navigation to Location (NEW 2.4) { #map-navigation-to-location-new-24 }

If the TEI or event has coordinates a navigation icon will be displayed at the top right of the card. Click to open the location in a maps App.

![](resources/images/capture-app-image149.jpg){ width=25%} ![](resources/images/capture-app-image150.jpg){ width=25%} ![](resources/images/capture-app-image151.jpg){ width=25%}

### Working Lists (NEW 2.4) { #working-lists-new-24 }

Working lists are now compatible with the Android app. Once a list is selected, the filters will be blocked and not allowed to change until the user resets the search.

Working lists are available in Event and Tracker Programs.

![](resources/images/capture-app-image152.jpg){ width=25%} ![](resources/images/capture-app-image153.jpg){ width=25%}

### Program Indicators (NEW 2.4) { #program-indicators-new-24 }

The new analytics tab now supports displaying text and key/value pair in feedback or indicator section.

![](resources/images/capture-app-image154.jpg){ width=25%}

### Legends (NEW 2.4) { #legends-new-24 }

Legends are now available in Android App. It will be shown next to value with the respective color and label.

![](resources/images/capture-app-image155.jpg){ width=25%}

## Program with registration in Android { #capture_app_programs_with_reg }

### TEI Card Design { #capture_app_programs_tei_design }

The new TEI Card design includes:

- Last update date
- Other enrollments in programs with displayFrontPageList
- At least **3 main attributes**.
  - If there are more, there will be an arrow to display the full list (only attributes with displayInList option)
- Enrollment status label if **completed** or **cancelled**
- Overdue icon if an overdue event exists with the most recent overdue event date
- Card image (one of the following options):
  - Profile picture when available or
  - First letter of the first attribute or
  - Tracked Entity Type icon
  - A hyphen will display if non of the options are available

![](resources/images/capture-app-image124.png){ width=25%}

### Complete/Deactivate Enrollment { #capture_app_programs_complete_deactivate_enrollment }

To complete or deactivate an enrollment, click on three dot menu in the right upper corner and select "Complete" or "Deactivate".

![](resources/images/capture-app-image76.jpg){ width=25%}

### Reset Search Fields { #capture_app_programs_reset_search }

All tracker programs will take the user to the search screen. The search fields are used to look up for a specific entity, and the circled arrow to reset the search. All fields will be blank for the user to do a new search.

At first, the user is obligated to do a search. if there are no coincidences, the search button will change to an ‘Add’ button for the user to create a new enrollment.

![](resources/images/capture-app-image78.PNG){ width=25%} ![](resources/images/capture-app-image79.PNG){ width=25%}

### Search screen for all Tracked Entity Type { #capture_app_programs_search_screen }

User is able to search across all program of one tracked entity type (TET). In the Search screen there is a drop down which shows all the programs available for the active TET (active TET is defined by the selection of the program in the home screen). That drop down should also have an option with TET name. (for example: person)

When the user selects that option, the search fields available will only be the TET attributes (no program specific attributes). Search restrictions do not apply, because they belong to the programs.

![](resources/images/capture-app-image44.png){ width=25%} ![](resources/images/capture-app-image22.png){ width=25%}

The search will return the found TEI's in the local database and also those in the Search OU of the user (when user is online). For those found online, the user will have to select them and the whole record will be downloaded.

> **Note**
>
> When configuring search org. units, make sure that your capture org. units are contained in your search org. units, to do that capture org. units have to be selected as well as search org. units.

### TEI Dashboard across programs { #capture_app_programs_tei_dashboard }

User can see the TEI dashboard without any program by selecting the TEI in the list if the search was without program.

The dashboards will show the list of active enrollments.

![](resources/images/capture-app-image22.png){ width=25%} ![](resources/images/capture-app-image38.png){ width=25%}

### TEI enrollment history and new enrollment { #capture_app_programs_tei_history }

User is able to see the complete historical record of the TEI. Clicking on the top right corner menu, select "Program Enrollments" and a list of Active enrollments will be displayed, followed by a list of past enrollments (completed or cancelled), followed by the programs in which the TEI could be enrolled. User can also return to the 'TEI Dashboard without any program' by selecting 'All enrollments'.

Users should be able to navigate to the different enrollments from the list.

![](resources/images/capture-app-image40.jpg){ width=25%} ![](resources/images/capture-app-image7.png){ width=25%}

### Delete TEI's & Enrollments { #capture_app_programs_delete_tei }

To delete a TEI or an enrollment, select In the TEI dashboard, the three dots menu.

Local TEI or Enrollment will be deleted from the database. Records that has been previously synced with the server will be marked for deletion if the user has the authority:

- F_ENROLLMENT_CASCADE_DELETE
- F_TEI_CASCADE_DELETE

They will show in the TEI search list, but will not be accessible.

> **Note**
>
> When users enter a TEI and while it is not synced to the server they will be able to delete the TEI and the enrollment even if they have not been asigned these authorities. This is by design and to allow users rolling back in case of having entered wrong data (TEI and/or enrollment) and thus preventing it reaching the server and requiring another user with higher privileges to fix the issue.

![](resources/images/capture-app-image86.jpg){ width=25%}

### Group view of Program stages in TEI Dashboard { #capture_app_programs_group_view }

The TEI Dashboard offers now the possibility to change the list of events from the chronological view to a stage grouping view. The stage grouping view will group and collapse the events per program stage. Each program stage group can be expanded by the user and the events will be displayed chronologically.

![](resources/images/capture-app-image108.png){ width=25%} ![](resources/images/capture-app-image109.jpg){ width=25%}

### Inherit Values { #capture_app_programs_inherit_values }

When creating a new TEI for a relationship, inherit any program attribute marked with the inherit check in web.

This means that any existing attributes in the first TEI should have pass to the new TEI and be shown in the registration form.

### Breaking the glass { #capture_app_programs_breaking_the_glass }

The ‘breaking the glass’ feature is not yet supported in DHIS2 Android Capture App. If the program is configured as ‘Protected’, the default behavior for Android will be the same as if the program is configured as ‘closed.’ This means that an Android user will not be able to read or edit enrollments of a TEI outside of their capture org units. TEIs registered in a Search OU will be returned by the TE Type search but if the program is closed or protected the user will not be allowed to see or create a new enrollment. If Android users must be able to access TEI outside of their data capture org unit, the program should be configured with access level ‘Open.’

![](resources/images/capture-app-image137.jpg){ width=25%}

### Analytic charts (NEW 2.4) { #analytic-charts-new-24 }

It is possible to display the evolution in data elements as charts, values or tables. These data elements must be a numeric value type and configured in a repeatable stage.

1. Single value: It will display the newest value in the program.

![](resources/images/capture-app-image156.jpg){ width=25%}

2. Charts: It is possible to display the values as a line chart o as a bar chart.

![](resources/images/capture-app-image157.jpg){ width=25%} ![](resources/images/capture-app-image158.jpg){ width=25%}

The Nutrition Growth charts are shown according to the WHO standards. This option will render a background image and apply the axis (0 to 5 monthly)according to the WHO model.

![](resources/images/capture-app-image159.jpg){ width=25%}

3. Tables: It will display the data elements or indicators in the rows and the periods in the columns.

![](resources/images/capture-app-image160.jpg){ width=25%}

## Supported features Overview { #capture_app_programs_supported_features }

The following is a comprehensive list of all features available for Programs with and without registration in DHIS2, and notes on whether or not these have been implemented in the Android Capture app.

In the notes, ‘admin’ refers to someone who develops and configures a DHIS2 system, and ‘user’ refers to someone who uses apps to capture data, update it, and review reports.

| Leyenda | Descripción |
| :-: | :-- |
| ![](resources/icons/icon-complete.png) | Feature implemented |
| ![](resources/icons/icon-incomplete.png) | Feature not implemented&nbsp;(will be ignored) |
| ![](resources/icons/icon-na.png) | No aplicable |
| ![](resources/icons/icon-wip.png) | Work in progress. Feature not completely implemented yet or with unexpected behaviour already reported. |

### Program { #capture_app_programs_supported_features_program }

| Feature | Description of feature | programa con registro | Programa sin registro | Notas sobre implementación |
| --- | --- | :-: | :-: | --- | --- |
| Data entry method for option sets | Enables an admin to choose how options will be displayed on-screen across the entire program (ie either as drop-down lists or as radio buttons) | ![](resources/icons/icon-incomplete.png) | ![](resources/icons/icon-incomplete.png) | This will be replaced by the new rendering options. |
| Combination of categories<br />(Attribute CatCombo) | Allows an admin to attach a Category (set of Options) to the Program, requiring users to categorize each enrolment. (This is called an Attribute Category Combination in DHIS 2.) | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-complete.png) |  |
| Data approval workflow | If an admin selects a pre-configured Data Approval Workflow, this will be used to enforce an &lsquo;approval&rsquo; or &lsquo;acceptance and approval&rsquo; cascade, enabling users to sign-off and lock data. | ![](resources/icons/icon-incomplete.png) | ![](resources/icons/icon-incomplete.png) |  |
| Display front page list | If this option is ticked, the landing page displays a list of active enrolments once an Org Unit and Program have been chosen. (Attributes shown are those ticked as &lsquo;display in list&rsquo;.) | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-na.png) |  |
| First stage appears on registration page | When this option is chosen, then during Program enrolment, the screen for the first Program Stage is also shown (enrolment and the first event are captured together on one screen). | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-na.png) | In Android, this is implemented by opening automatically the event after enrollment is completed, instead of adding the form to the same screen. |
| Completed events expiry days | Enables admins to lock data-entry a certain number of days after an event has been completed. | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-complete.png) |  |
| Expiry period type + expiry days | Enables admins to set a period (eg weekly, monthly), and to lock data-entry a certain number of days after the end of the period. | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-complete.png) |  |
| Allow future enrolment dates | If ticked, this enables a user to enter future Enrolment dates during enrolment in a Program; otherwise users are restricted to today or past dates. | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-na.png) |  |
| Allow future incident dates | If ticked, this enables a user to enter future Incident dates during enrolment in a Program; otherwise users are restricted to today or past dates. | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-na.png) |  |
| Only enrol once (per tracked entity instance lifetime) | If ticked, prevents a TEI (eg person) from being enrolled in this Program more than once. | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-na.png) |  |
| Show incident date | If ticked, both Enrolment and Incident dates are shown to the user for data capture; otherwise, only the Enrolment date is shown/captured. | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-na.png) |  |
| Description of incident date | Allows an admin to customize the label that is used for the incident date. | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-na.png) |  |
| Description of enrolment date | Allows an admin to customize the label that is used for the enrollment date. | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-na.png) |  |
| Capture coordinates (enrolment) | Enables users to capture geographical coordinates during enrolment in the program. | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-na.png) |  |
| Capture Polygon (enrolment) | Enables users to capture locations (enclosed areas) during enrolment in the program. | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-na.png) |  |
| TEI Coordinates | Enables users to capture geographical coordinates for the TEI during the enrolment in the program. | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-na.png) |  |
| Relationships: create and update | Enables users to create and update relationships. | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-na.png) |  |
| Relationships - shortcut link to add a relative | This enables admins to add a link for one specific relationship to the Dashboard, enabling users to directly create a linked TEI (eg "child" patient). | ![](resources/icons/icon-incomplete.png) | ![](resources/icons/icon-na.png) |  |
| Attributes: display in list | This setting determines whether an Attribute can be viewed in lists such as search results, and whether it can be seen in the shortlist of Attributes shown under "Profile" in the Dashboard. | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-na.png) | The first three attributes will be shown |  |
| Attributes: mandatory | This enables an admin to mark an Attribute as "mandatory";, meaning the enrolment can&rsquo;t be saved until a value is captured. | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-na.png) |  |
| Attributes: date in future | For date Attributes, this enables an admin to either prevent or allow future dates to be captured. | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-na.png) |  |
| Registration form - default | The default data entry form simply lists all attributes defined for the TEI. | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-na.png) |  |
| Registration form - custom | This enables an admin to define a custom layout (using HTML) for the registration form. | - | ![](resources/icons/icon-na.png) | Custom layouts are not supported in the Android App |  |
| Program notifications | You can set up automated notifications for when program enrolments or completions occur, or at a set interval before/after incident or enrolment dates. These can be sent as internal DHIS 2 messages, emails or SMSs. | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-complete.png) | This functionality is executed on the server side, once data is received. Will not work when the app is working offline. |  |
| Activate/deactivate enrolment | Deactivating a TEI dashboard will cause the TEI to become &ldquo;read-only&rdquo;. This means you cannot enter data, enrol the TEI or edit the TEI profile. | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-na.png) |  |
| Complete allowed only if validation passes | Select check box to enforce that an event created by this program is only completed when all validation rules have passed. | ![](resources/icons/icon-incomplete.png) | ![](resources/icons/icon-incomplete.png) |  |
| Org unit opening/closing dates | Enables an admin to set opening and closing dates for an Org Unit, which blocks users from adding or editing events outside of these dates. | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-complete.png) |  |
| Data sharing levels/Can capture data | Enables the user to add new event, edit data and delete events in the program. | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-complete.png) |  |
| Data sharing levels/Can view data | Enables the user to see list of events within the program. | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-complete.png) |  |
| Data sharing levels/No access | The user will not be able to see the program | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-complete.png) |  |

### Program stage { #capture_app_programs_supported_features_program_stage }

| Feature | Description of feature | programa con registro | Programa sin registro | Notas sobre implementación |
| --- | --- | :-: | :-: | --- |
| Event form - default | The default data entry form simply lists all attributes belonging to a program registration | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-complete.png) |  |
| Event form - section forms | Sections forms allow you to split existing forms into segments | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-complete.png) |  |
| Event form - custom | Define a custom event form as a HTML page. | ![](resources/icons/icon-incomplete.png) | ![](resources/icons/icon-incomplete.png) | Custom layouts are not supported in the Android App. |
| Program stage notifications | You can set up automated notifications for when the program stage is completed, or at a set interval before/after scheduled event dates. These can be sent as internal DHIS 2 messages, emails or SMS messages. | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-na.png) | This functionality is executed on the server side, once data is received. Will not work when the app is working offline. |
| Repeatable | If Repeatable Is ticked, this stage can be repeated during one program enrollment. If t is not, then the stage can only happen once during a program enrollment. | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-na.png) |  |
| Repeatable | If Repeatable Is ticked, this stage can be repeated during one program enrollment. If t is not, then the stage can only happen once during a program enrollment. | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-na.png) |  |
| Repeatable + Standard interval days | The system will suggest the due date as the calculation of the last event + standard interval dates. | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-na.png) |  |
| Period type | Enables an admin to configure a set of periods (e.g. weeks or months) for each event in the program stage, instead of just a date. When creating events, users are then asked to choose a period (instead of a date) for each new event they create within that program stage. | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-na.png) |  |
| Auto-generate event | If ticked, a "booking" is generated for this Program Stage upon enrolment, based on the "Scheduled days from start". | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-na.png) |  |
| Generate events based on enrolment date (not incident date) | Check on it for auto-generating due dates of events from program-stages of this program based on the enrollment date. If it is not checked, the due dates are generated based on incident date. | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-na.png) |  |
| Open data entry form after enrolment + report date to use | If selected, once an enrolment is complete, an event&rsquo;s data entry form should open directly afterwards. | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-na.png) |  |
| Ask user to complete program when stage is complete | If selected, upon completing the program stage the user should be asked to complete the program. (This setting is ignored if "Ask user to create new event" is also ticked.) | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-na.png) |  |
| Ask user to create new event when stage is complete | If selected, when the Program Stage is completed the user is prompted to book. | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-na.png) |  |
| Hide due date | Only shows the actual date for events, hiding the due date. | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-na.png) |  |
| Capture coordinates (event)/Feature Type-Point | Enables the user to capture geographical coordinates when each event is created ![](resources/icons/icon-incomplete.png) particularly useful in devices that have GPS (eg Android), as instead of having to type in coordinates, the user can automatically populate them with the press of a button. | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-complete.png) |  |
| Capture Polygon (event)/Feature Type-Polygon | Enables users to capture locations (enclosed areas) when each event is created. A Polygon must contain at least 4 points. | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-complete.png) |  |
| Description of report date | Allows an admin to customize the label that is used for the event&rsquo;s date. | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-complete.png) |  |
| Data elements-compulsory | This enables an admin to mark a data element as "compulsory", meaning an event can not be saved until a value is captured. | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-complete.png) |  |
| Data elements-allow provided elsewhere | On the form, this places a tick-box next to the selected data element, and enables previous data to be pulled into the data element. | ![](resources/icons/icon-incomplete.png) | ![](resources/icons/icon-na.png) |  |
| Data elements-display in reports | Displays the value of this data element into the single event without registration data entry function. | ![](resources/icons/icon-incomplete.png) | ![](resources/icons/icon-complete.png) |  |
| Data elements-date in future | For date Data Elements, this enables an admin to either prevent or allow future dates to be captured. | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-complete.png) |  |
| Data elements-render options as radio | Enables an admin to choose how options will be displayed on-screen for each Data Element (i.e. either as drop-down list or as radio buttons). | ![](resources/icons/icon-incomplete.png) | ![](resources/icons/icon-incomplete.png) |  |
| Block entry form after completed | Prevents all edits to events after they have been completed. | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-complete.png) |  |
| Event comments | Enables the user to add overall comments to an event. These comments are cumulative (new comments are added below existing comments). | ![](resources/icons/icon-incomplete.png) | ![](resources/icons/icon-na.png) |  |

### Program with registration: Tracked entity dashboard { #capture_app_programs_supported_features_program_with_reg }

| Feature | Description of feature | Estado | Notas sobre implementación |
| --- | --- | :-: | --- | --- |
| Mensajería | Enables users to send ad-hoc free-text messages to TEIs (e.g. patients) via SMS or email. | ![](resources/icons/icon-incomplete.png) |  |
| Mark for follow-up (button with exclamation triangle) | Enables a user to mark a TEI (e.g. patient) as requiring follow-up. | ![](resources/icons/icon-complete.png) |  |
| Display TEI audit history | Enables a user to see a history of all edits to Attributes for this TEI (e.g. patient). | - |  |
| Inline Program Indicators | If a program indicator "display in form" box is ticked, the indicator appears on the Tracker Capture dashboard, and is updated live as data capture occurs. | ![](resources/icons/icon-complete.png) |  |  |
| Delete events | Enables the user to delete an event. | ![](resources/icons/icon-complete.png) |  |
| Schedule events | In the event generation dialogue, the user should also see the option to schedule an event. The process is like creating an event, but the user will be sent back to the TEI dashboard after the event is scheduled. | ![](resources/icons/icon-complete.png) |  |
| Referral of patients | In the event generation dialogue, the user should also see the option to refer a patient. The process is like creating/scheduling an event, but the user can change the org unit and has to specify if is a one-time or permanent referral. One time will just create the event in the specified OU. | ![](resources/icons/icon-complete.png) |  |
| Reset search fields | User is able to clean up the search fields by pressing on the rounded arrow icon on the top right corner of the search screen. | ![](resources/icons/icon-complete.png) |  |
| Search screen for all TE Type | User is able to search across all program of one tracked entity type (TET). In the Search screen there is a drop down which shows all the programs available for the active TET (active TET is defined by the selection of the program in the home screen). That drop down should also have an option with TET name. (Person in our server). When the user selects that option, the search fields available will only be the TET attributes (no program specific attributes). All search restrictions do not apply, because they belong to the programs. | ![](resources/icons/icon-complete.png) |  |
| TEI Dashboard without program | User can see the TEI dashboard without any program by selecting the TEI in the list if the search was without program. The dashboards will show the TET attributes in the details card followed by a list of active enrollments. | ![](resources/icons/icon-complete.png) |  |
| TEI enrollment history and new enrollment | User is able to see the complete historical record of the TEI. By clicking on the top right corner icon they will see a list of Active enrolments, followed by a list of past enrolments (completed or cancelled), followed by the programs in which the TEI could be enrolled. Users should be able to navigate to the different enrolments from the list. | ![](resources/icons/icon-complete.png) |  |
| Access level-Breaking the glass | If the program is configured with access level protected, and the user searches and finds tracked entity instances that is owned by organisation unit that the user does not have data capture authority for, the user is presented with the option of breaking the glass. The user will gove a reason for breaking the glass, then gain temporary ownership of the tracked entity instance. | ![](resources/icons/icon-incomplete.png) |  |

### Program without registration: Single event program { #capture_app_programs_supported_features_program_without_reg }

| Feature | Description of feature | Estado | Notas sobre implementación |
| --- | --- | :-: | --- | --- |
| Events listing (grid) | A listing of existing events that is displayed once a program is selected. | ![](resources/icons/icon-complete.png) |  |
| Sort and filter events in grid | Allows the user to sort listed events, or to filter events based on keywords or specific ranges of dates/numbers. | ![](resources/icons/icon-complete.png) | Events are sorted chronologically. The user can filter by period and organisation unit. |  |
| Editar eventos en la cuadrícula | Allows the user to directly edit the data elements shown in the events listing/grid. | ![](resources/icons/icon-incomplete.png) |  |
| View event audit history | Enables the user to see a history of all changes to the event&rsquo;s data elements. | ![](resources/icons/icon-incomplete.png) |  |
| Show/hide columns (in event list/grid) | Enables the user to modify the data elements shown in the event listing/grid (applies to that user only). | ![](resources/icons/icon-incomplete.png) |  |
| Field completion percentage | The percentage of data completed in each event is shown in the top right corner of an event when it is opened after first registration. The percentages should be adapted to the effects of the program rules in the forms. | ![](resources/icons/icon-complete.png) | The percentage of completion does not take into account the not-supported value types in the forms. |  |
| Delete events | Enables the user to delete an event. | ![](resources/icons/icon-complete.png) |  |

# Program rules supported in Android Capture App { #capture_app_pr }

La siguiente es una lista completa de todos los componentes de reglas de programa (tipos de variables y acciones) disponibles en DHIS 2, y notas sobre si se han implementado o no en la aplicación Capture para Android.

Cualquier problema relacionado con el uso de una función en particular con Android se resalta con un signo de exclamación \!.

| Leyenda | Descripción |
| :-: | :-- |
| ![](resources/icons/icon-complete.png) | Tipo de valor implementado |
| ![](resources/icons/icon-incomplete.png) | Tipo de valor no implementado, pero se ignorará con seguridad (si no es obligatorio) |
| ![](resources/icons/icon-na.png) | No aplicable |
| ![](resources/icons/icon-wip.png) | Trabajo en progreso. Característica aún no implementada completamente o con un comportamiento inesperado ya reportado |

## Program rule Variable source types supported { #capture_app_pr_prv }

| Tipo de variable | Descripción del tipo de variable | programa con registro | Programa sin registro | Notas sobre implementación |
| --- | --- | :-: | :-: | --- |
| Elemento de datos del evento más reciente para una etapa del programa | This source type works the same way as "Data element from the newest event in the current program", except that it only evaluates values from a specific program stage. | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-na.png) |  |
| Data element from the newest event in the current program (with registration) | This source type is populated with the newest data value collected for the specified data element within the enrollment. | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-na.png) |  |
| Data element from the newest event in the current program (without registration) | This program rule variable will be populated with the newest data value found within the 10 newest events in the same organization unit. | ![](resources/icons/icon-na.png) | ![](resources/icons/icon-complete.png) |  |
| Data element in current event (with registration) | Variable takes the data element&rsquo;s value from the current event. | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-na.png) |  |
| Data element in current event (without registration) | Contains the data value from the same event that the user currently has open. | ![](resources/icons/icon-na.png) | ![](resources/icons/icon-complete.png) |  |
| Data element from previous event (with registration) | Program rule variables with this source type will contain the newest value from all previous events for the specified data element. The event currently open is not evaluated. | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-na.png) |  |
| Data element from previous event (without registration) | This program rule variable will be populated with the newest data value found within the 10 events preceding the current event date (i.e. not including the current event). | ![](resources/icons/icon-na.png) | ![](resources/icons/icon-complete.png) |  |
| Tracked entity attribute | Populates the program rule variable with a specified tracked entity attribute for the current TEI (e.g. current patient). | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-na.png) |  |
| Valor calculado | Valor calculado. | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-complete.png) |  |

## Program rule Actions supported (Data element in current event) { #capture_app_pr_pra }

| Acción | Descripción de la acción | programa con registro | Programa sin registro | Notas sobre implementación |
| --- | --- | :-: | :-: | --- |
| Ocultar campo | Oculta un elemento de datos individual si la regla es verdadera. | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-complete.png) | ! If you change the value after the field is hidden, it will revert the action depending on the value type rule engine default value. We recommend its use combined with the hasvalue function. |
| Ocultar sección | Oculta una sección completa y sus elementos de datos si la regla es verdadera. | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-complete.png) |  |
| Ocultar opción | Hide a single option for an option set in a given data element/tracked entity attribute. When combined with **show option group** the **hide option** takes precedence | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-complete.png) |  |
| Ocultar grupo de opciones | Hide all options in a given option group and data element/tracked entity attribute. When combined with **show option group** the **hide option** takes precedence | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-complete.png) |  |
| Show option group | Used to show only options from a given option group in a given data element/tracked entity attribute. To show an option group implicitly hides all options that is not part of the group(s) that is shown. | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-complete.png) |  |
| Assign Value | Assigns a value to a specified data element or attribute if the rule is true. | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-complete.png) | To assing text, it must be in single quotes. For example: '2+2' will show the text 2+2 and 2+2, without the single quotes will show 4. |
| Mostrar advertencia | Shows pop-up warning to the user if rule is true; does not prevent the user from continuing. | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-complete.png) |  |
| Warning on Complete | Shows a pop-up warning to the user if, at the point "complete" is clicked, a rule is true; this does not prevent the user from continuing. | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-complete.png) |  |
| Mostrar error | Shows a pop-up error message to the user as soon as a rule is true, and prevents user from continuing until rule is no longer true. | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-complete.png) | The value is not saved, but the text is not cleared so that the user can fix it easily. |
| Error on Complete | Shows a pop-up warning to the user if, when "complete"; is clicked, a rule is true, and prevents user from continuing until rule is no longer true. | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-complete.png) |  |
| Make Field Mandatory | Sets a data element as "mandatory"; if rule is true. | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-complete.png) |  |
| Display Text (Event Programs) | Used to display information that is not an error or a warning, for example feedback. | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-complete.png) | Independently from the source variable type, text will be displayed in the form as the last element of the last section. Text will be displayed as the messages in the indicators tab. |
| Display Text (Tracker Programs) | Used to display information that is not an error or a warning, for example feedback. | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-complete.png) | **1. Program rule configured as "Trigger rule only for program stage".** Text will be displayed ONLY in the form as the last element of the last section. Text will be displayed as the messages in the indicators tab. </br>-> If the program rule uses any variable type which is not from the current stage, the rule will not be able to evaluate and the message will not be shown.</br>**2. Program rule NOT configured as "Trigger rule only for program stage".** Text will be displayed ONLY in the indicators tab and NOT in the form.</br>--> If the program rule uses any variable of type Current event, the rule will not be able to evaluate and the message will not be shown. |
| Display Key Value/Pair (Event Programs) | Used to display information drawn from a data element. | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-complete.png) | **Variable Type:** </br>_ Data element from the newest event in the current program</br>_ Data element from previous event</br>_ Data element in current event</br>_ Built-in variable</br>Key/Value Pair will be displayed in the form ONLY in the specified section. |
| Display Key Value/Pair (Tracker Programs) | Used to display information drawn from a data element. | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-complete.png) | **1. Variable Type:**</br>_ Data element in current event</br>Key/Value Pair will be displayed in the form ONLY in the specified section.</br>**2. Variable Type:**</br>_ Data element from the newest event in the current program</br>_ Data element from previous event</br>_ Data element from the newest event for a program stage</br>_ Tracked entity attribute</br>_ Built-in variable</br>Key/Value Pair will be displayed ONLY in the indicators tab and NOT in the form. |
| Hide Program Stage | Hides a whole program stage from the user if the rule is true. | ![](resources/icons/icon-na.png) | ![](resources/icons/icon-na.png) | Action rule only supported for **Data element from the newest event in the current program type and tracked entity ** attribute variables. |
| Enviar mensaje | Send Message triggers a notification based on provided message template.This action will be taken whenever there is a change in data value. However this behaviour can be controlled by providing event-enrollment status in program rule expression | ![](resources/icons/icon-na.png) | ![](resources/icons/icon-na.png) | This feature is executed on the server side. |
| Schedule Message | Schedule Message will schedule notification at date provided by Expression in the data field. | ![](resources/icons/icon-na.png) | ![](resources/icons/icon-na.png) | This feature is executed on the server side. |

## Program rule Actions supported (Other variables) { #capture_app_pr_pra_other }

| Acción | Description of Action | Data Element from the Newest Event in the Current Program (with registration) | Data Element from the Newest Event in the Current Program (without registration) | Data Element from Previous Event (with registration) | Data Element from Previous Event (without registration) | Data Element from the Newest Event for a Program Stage (with registration) | Tracked Entity Atribute (with registration) | Notas sobre implementación |
| --- | --- | :-: | :-: | :-: | :-: | :-: | :-: | --- |
| Ocultar campo | Oculta un elemento de datos individual si la regla es verdadera. | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-complete.png) |  |
| Ocultar sección | Oculta una sección completa y sus elementos de datos si la regla es verdadera. | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-complete.png) |  |
| Ocultar opción | Hide a single option for an option set in a given data element/tracked entity attribute. When combined with **show option group** the **hide option** takes precedence. | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-complete.png) |  |
| Ocultar grupo de opciones | Hide all options in a given option group and data element/tracked entity attribute.When combined with show option group the hide option takes precedence. | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-complete.png) |  |
| Assign Value | Assigns a value to a specified data element or attribute if the rule is true. | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-complete.png) | To assing text, it must be in single quotes. For example: '2+2' will show the text 2+2 and 2+2, without the single quotes will show 4. |
| Mostrar advertencia | Shows pop-up warning to the user if rule is true; does not prevent the user from continuing. | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-complete.png) |  |
| Warning on Complete | Shows a pop-up warning to the user if, at the point "complete" is clicked, a rule is true; this does not prevent the user from continuing. | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-na.png) |  |
| Mostrar error | Shows a pop-up error message to the user as soon as a rule is true, and prevents user from continuing until rule is no longer true. | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-complete.png) | The rule will let the user to finish the enrollment but will prevent from completing the events until rule is no longer true. The value is not saved, but the text is not cleared so that the user can fix it easily. |
| Error on Complete | Shows a pop-up warning to the user if, at the point "complete" is clicked, a rule is true; this does not prevent the user from continuing. | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-na.png) |  |
| Make Field Mandatory | Sets a data element as "mandatory" if rule is true. | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-complete.png) |  |
| Display Text (Event Programs) | Used to display information that is not an error or a warning, for example feedback. | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-complete.png) | Independently from the source variable type, text will be displayed in the form as the last element of the last section. Text will be displayed as the messages in the indicators tab. |
| Display Text (Tracker Programs) | Used to display information that is not an error or a warning, for example feedback. | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-complete.png) | **1. Program rule configured as "Trigger rule only for program stage".** Text will be displayed ONLY in the form as the last element of the last section. Text will be displayed as the messages in the indicators tab. </br>-> If the program rule uses any variable type which is not from the current stage, the rule will not be able to evaluate and the message will not be shown.</br>**2. Program rule NOT configured as "Trigger rule only for program stage".** Text will be displayed ONLY in the indicators tab and NOT in the form.</br>--> If the program rule uses any variable of type Current event, the rule will not be able to evaluate and the message will not be shown. |
| Display Key Value/Pair (Event Programs) | Used to display information drawn from a data element. | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-complete.png) | **Variable Type:** </br>_ Data element from the newest event in the current program</br>_ Data element from previous event</br>_ Data element in current event</br>_ Built-in variable</br>Key/Value Pair will be displayed in the form ONLY in the specified section. |
| Display Key Value/Pair (Traker Programs) | Used to display information drawn from a data element. | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-complete.png) | **1. Variable Type:**</br>_ Data element in current event</br>Key/Value Pair will be displayed in the form ONLY in the specified section.</br>**2. Variable Type:**</br>_ Data element from the newest event in the current program</br>_ Data element from previous event</br>_ Data element from the newest event for a program stage</br>_ Tracked entity attribute</br>_ Built-in variable</br>Key/Value Pair will be displayed ONLY in the indicators tab and NOT in the form. |
| Hide Program Stage | Hides a whole program stage from the user if the rule is true. | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-na.png) | ![](resources/icons/icon-na.png) | ![](resources/icons/icon-na.png) | ![](resources/icons/icon-na.png) | ![](resources/icons/icon-complete.png) | Action rule only supported for **Data element from the newest event in the current program variable ** type. If the event is auto-generated, the rule will not apply. |
| Enviar mensaje | Send Message triggers a notification based on provided message template.This action will be taken whenever there is a change in data value. However this behaviour can be controlled by providing event-enrollment status in program rule expression | ![](resources/icons/icon-na.png) | ![](resources/icons/icon-na.png) | ![](resources/icons/icon-na.png) | ![](resources/icons/icon-na.png) | ![](resources/icons/icon-na.png) | ![](resources/icons/icon-na.png) | This feature is executed on the server side. |
| Schedule Message | Schedule Message will schedule notification at date provided by Expression in the data field. | ![](resources/icons/icon-na.png) | ![](resources/icons/icon-na.png) | ![](resources/icons/icon-na.png) | ![](resources/icons/icon-na.png) | ![](resources/icons/icon-na.png) | ![](resources/icons/icon-na.png) | This feature is executed on the server side. |

## Functions to use in program rule expressions { #capture_app_pr_pre }

| Función | Description of function | Estado | Notas sobre implementación |
| --- | --- | :-: | --- |
| d2:ceil | Rounds the input argument up to the nearest whole number. | ![](resources/icons/icon-complete.png) |  |
| d2:floor | Rounds the input argument down to the nearest whole number. | ![](resources/icons/icon-complete.png) |  |
| d2:round | Rounds the input argument to the nearest whole number. | ![](resources/icons/icon-complete.png) |  |
| d2:modulus | Produces the modulus when dividing the first with the second argument. | ![](resources/icons/icon-complete.png) |  |
| d2:zing | Evaluates the argument of type number to zero if the value is negative, otherwise to the value itself. | ![](resources/icons/icon-complete.png) |  |
| d2:oizp | Evaluates the argument of type number to one if the value is zero or positive, otherwise to zero. | ![](resources/icons/icon-complete.png) |  |
| d2:concatenate | Produces a string concatenated string from the input parameters. Supports any number of parameters. | ![](resources/icons/icon-complete.png) | Use d2:concatenate function instead of using "+" as the expression evaluator in the app will be adding numbers if it can. |
| d2:daysBetween | Produces the number of days between the first and second argument. If the second argument date is before the first argument,  the return value will be the negative number of days between the two dates. The static date format is 'yyyy-MM-dd'. | ![](resources/icons/icon-complete.png) |  |
| d2:weeksBetween | Produces the number of full weeks between the first and second argument. If the second argument date is before the first argument,  the return value will be the negative number of weeks between the two dates. The static date format is 'yyyy-MM-dd'. | ![](resources/icons/icon-complete.png) |  |
| d2:monthsBetween | Produces the number of full months between the first and second argument. If the second argument date is before the first argument the return value will be the negative number of months between the two dates. The static date format is 'yyyy-MM-dd'. | ![](resources/icons/icon-complete.png) |  |
| d2:yearsBetween | Produces the number of years between the first and second argument. If the second argument date is before the first argument, the return value will be the negative number of years between the two dates. The static date format is 'yyyy-MM-dd'. | ![](resources/icons/icon-complete.png) |  |
| d2:addDays | Produces a date based on the first argument date, adding the second argument number of days. | ![](resources/icons/icon-complete.png) |  |
| d2:count | Counts the number of values that is entered for the source field in the argument. | ![](resources/icons/icon-complete.png) |  |
| d2:countIfValue | Counts the number of matching values that is entered for the source field in the first argument. Only occurrences that matches the second argument is counted. | ![](resources/icons/icon-complete.png) |  |
| d2:countIfZeroPos | Counts the number of values that is zero or positive entered for the source field in the argument. The source field parameter is the name of one of the defined source fields in the program. | ![](resources/icons/icon-complete.png) |  |
| d2:hasValue | Returns the number of numeric zero and positive values among the given object arguments. Can be provided with any number of arguments. | ![](resources/icons/icon-complete.png) |  |
| d2:validatePattern | Evaluates to true if the input text is an exact match with the supplied regular expression pattern. The regular expression needs to be escaped. | ![](resources/icons/icon-complete.png) |  |
| d2:left | Evaluates to the left part of a text, num-chars from the first character. | ![](resources/icons/icon-complete.png) |  |
| d2:right | Evaluates to the right part of a text, num-chars from the last character. | ![](resources/icons/icon-complete.png) |  |
| d2:substring | Evaluates to the part of a string specified by the start and end character number. | ![](resources/icons/icon-complete.png) |  |
| d2:split | Split the text by delimiter, and keep the nth element (0 is the first). | ![](resources/icons/icon-complete.png) |  |
| d2:length | Find the length of a string. | ![](resources/icons/icon-complete.png) |  |
| d2:zpvc | Returns the number of numeric zero and positive values among the given object arguments. Can be provided any number of arguments. | ![](resources/icons/icon-complete.png) |  |
| d2:inOrgUnitGroup\* | Evaluates whether the current organization unit is in the argument group. The argument can be defined with either ID or organization unit group code. | ![](resources/icons/icon-complete.png) |  |
| d2:hasUserRole\*\* | Returns true if the current user has this role otherwise false. | ![](resources/icons/icon-complete.png) |  |
| d2:zScoreWFA\*\*\* | Function calculates z-score based on data provided by WHO weight-for-age indicator. Its value varies between -3.5 to 3.5 depending upon the value of weight. | ![](resources/icons/icon-complete.png) |  |

> **Notes**
>
> \* Available in DHIS 2 v2.30
>
> \*\* Available in DHIS 2 v2.31 onwards
>
> \*\*\* Available in DHIS 2 v2.32

## Standard variables to use in program rule expressions { #capture_app_pr_standard_vars }

Available in DHIS2 v2.30

| Variable | Description of function | Estado | Notas sobre implementación |
| --- | --- | :-: | --- |
| V{current_date} | Contains the current date whenever the rule is executed. | ![](resources/icons/icon-complete.png) |  |
| V{event_date} | Contains the event date of the current event execution. Will not have a value at the moment the rule is executed as part of the registration form. | ![](resources/icons/icon-complete.png) |  |
| V{event_status} | Contains status of the current event or enrollment. | ![](resources/icons/icon-complete.png) |  |
| V{due_date} \* | This variable will contain the current date when the rule is executed. Note: This means that the rule might produce different results at different times, even if nothing else has changed. | ![](resources/icons/icon-complete.png) |  |
| V{event_count} | Contains the total number of events in the enrollment. | ![](resources/icons/icon-complete.png) |  |
| V{enrollment_date} \* | Contains the enrollment date of the current enrollment. Will not have a value for single event programs. | ![](resources/icons/icon-complete.png) |  |
| V{incident_date} \* | Contains the incident date of the current enrollment. Will not have a value for single event programs. | ![](resources/icons/icon-complete.png) |  |
| V{enrollment_id} \* | Universal identifier string(UID) of the current enrollment. Will not have a value for single event programs. | ![](resources/icons/icon-complete.png) |  |
| V{event_id} | Universal identifier string(UID) of the current event context. Will not have a value at the moment the rule is executed as part of the registration form. | ![](resources/icons/icon-complete.png) |  |
| V{orgunit_code} | Contains the code of the orgunit that is linked to the current enrollment. For single event programs the code from the current event Org Unit will be used instead. | ![](resources/icons/icon-complete.png) |  |
| V{environment} | Contains a code representing the current runtime environment for the rules. The possible values is "WebClient", "AndroidClient" and "Server". Can be used when a program rule is only supposed to run in one or more of the client types. | ![](resources/icons/icon-complete.png) |  |
| V{program_stage_id} | Contains the ID of the current program stage that triggered the rules. This can be used to run rules in specific program stages, or avoid execution in certain stages. When executing the rules in the context of a TEI registration form the variable will be empty. | ![](resources/icons/icon-complete.png) |  |
| V{program_stage_name} | Contains the name of the current program stage that triggered the rules. This can be used to run rules in specific program stages, or avoid execution in certain stages. When executing the rules in the context of a TEI registration form the variable will be empty. | ![](resources/icons/icon-complete.png) |  |

> **Notes**
>
> \* Only applies to tracker

## Differences between the Program Rules in the web and the Android version { #capture_app_pr_differences_web_android }

As the web and the Android application are currently using a different _program rule engine_ there might be programs rule that work in one system and not in the other. In general terms it can be said that the Android _program rule engine_ is more strict and so, some Program Rules that work in the web version of DHIS2 will fail in Android. This subsection describes the main differences and how to adapt the rules in order to have them working in both systems.

### Evaluation of type Boolean { #capture_app_pr_differences_web_android_bool }

DHIS2 web version considers the type boolean as 0 or 1 (which can be evaluated to true or false), however Android evaluates them only as true or false. While this makes possible the addition of booleans in web, it will fail in Android; in order to fix this an additional _program rule variable_ is needed to transform the boolean into an number that can be operated. Check the table below for examples and possible solutions.

For the examples below consider the following:

- yn_prv1: is a program rule variable that has been configured to get the value of a 'Yes/No' data element
- yn_prv2: is a program rule variable that has been configured to get the value of a 'Yes/No' data element
- prv_boolean_one: is a program rule variable that has been configured to get the value of a 'Yes/No' data element
- prv_boolean_two: is a program rule variable that has been configured to get the value of a 'Yes/No' data element
- prv_boolean_one_to_number: is a program rule variable with calculated value
- prv_boolean_two_to_number: is a program rule variable with calculated value
- sometimes true is used as program rule condition meaning the action is always performed
- The following acronyms are used:
  - DE (Data Elemetn)
  - PR (Program Rule)
  - PRE (Program Rule Expression)
  - PRC (Program Rule Condition)
  - PRV (Program Rule Variable)
  - PRA (Program Rule Action)

| Program Rule Condition(s) | Program Rule Action(s) | Versión web | Versión Android | Comentario |
| --- | --- | :-: | :-: | --- |
| d2:hasValue('yn_prv1') \|\| d2:hasValue('yn_prv2') | Assign fixed value to DE | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-complete.png) |  |
| #{yn_prv1} \|\| #{yn_prv2} | Assign fixed value to DE | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-complete.png) |  |
| d2:hasValue('yn_prv1') \|\| d2:hasValue('yn_prv2') | Assign value to DE: #{yn_prv1} + #{yn_prv2} + 1 | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-negative.png) | Crashes in Android whenver a boolean is marked as the expression would result in _true_+_false_+1 |
| PR1: #{prv_boolean_one} <br /><br />PR2: #{prv_boolean_two} <br /><br />PR3: #{prv_boolean_one} \|\| #{prv_boolean_two} | PRA1. Assign value "1" to PRV "#{prv_bool_one_to_number}" <br /><br />PRA2. Assign value: "1" to PRV "#{prv_bool_two_to_number}" <br /><br />PRA3. Assign value to DE: "#{prv_bool_one_to_number} + #{prv_bool_two_to_number} + 1" | ![](resources/icons/icon-negative.png) | ![](resources/icons/icon-negative.png) | There are 2 variables for boolean, one gets the value via a PRV definition “value form DE” and the other one via a PRA. If a boolean is not marked it is counted as string instead of a number |
| Four PR to assign 1 or 0 to the booleans and an additional for the addition. Priorities go from top to bottom <br /><br />PRC1: !d2:hasValue('prv_boolean_one')  \|\| !#{prv_boolean_one} <br /><br />PRC2: d2:hasValue('prv_boolean_one') && #{prv_boolean_one}<br /><br />PRC3: !d2:hasValue('prv_boolean_two')  \|\| !#{prv_boolean_two} <br /><br />PRC4: d2:hasValue('prv_boolean_two') && #{prv_boolean_two} <br /><br />PRC5: true | PRA1: Assign value: "0" to PRV "#{prv_bool_one_to_number}" <br /><br />PRA2: Assign value: "1" to PRV "#{prv_bool_one_to_number}" <br /><br />PRA3: Assign value: "0" to PRV "#{prv_bool_two_to_number}" <br /><br />PRA4: Assign value: "1" to PRV "#{prv_bool_two_to_number}" <br /><br />PRA5: Assign value: "#{prv_bool_one_to_number} + #{prv_bool_two_to_number} + 1" to DE <br /> | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-complete.png) | There are 2 variables for boolean, one gets the value via a PRV definition “value form DE” and the other one via a PRA. |

### Evaluation of numbers { #capture_app_pr_differences_web_android_numbers }

DHIS2 web version evaluate numbers in a more flexible way casting values from integer to floats if required for a division, however, Android take numbers as such (without a casting) which my end up giving unexpected results. Check the table below for examples and possible solutions.

| Program Rule Condition(s) | Program Rule Action(s) | Versión web | Versión Android | Comentario |
| --- | --- | :-: | :-: | --- |
| verdadero | Assign value to DE: d2:daysBetween('2020-05-13', '2020-05-17') / 3 | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-negative.png) | The user would expect the division to be calculated as 4/3 with a result of 1.3333. However, Android does not cast 4 to a float (4.0 as the web version does) so the result in Android is a pure 1 as the result of the integer division 4/3 |
| verdadero | Assign value to DE: d2:daysBetween('2020-05-13', '2020-05-17') / 3.0 | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-complete.png) | Division results in 1.33333 in both web and Android |

## Changes in Program Rules (as from version 2.2 of the app ) { #capture_app_pr_changes }

In the version 2.2 of the application (released on August, 2020) a new rule-engine was included. This rule-engine requires some optional and some mandatory changes to be performed on the program rules expressions in order to make it work in the new application. A list of those changes, how to detect them and how to fix them is included in the following subsections.

### Evaluation of 'd2:hasValue' { #capture_app_pr_changes_hasvalue }

#### Descripción { #description }

This is an optional change. _d2:hasValue_ now works with both single quotes or full variable expression. The following expressions is valid: `(d2:hasValue('variable_name') and d2:hasValue(#{variable_name}))`

#### How to identify via API? { #how-to-identify-via-api }

Get programRules where either the condition or the program rule action uses the d2:hasValue function.

`https://example.org/api/programRules?fields=program[name],name,programRuleActions[data],condition&filter=programRuleActions.data:like:hasValue&filter=condition:like:hasValue&rootJunction=OR`

```xml
<programRule name="PR01 - Check variable with hasValue(#{variable})">
<condition>d2:hasValue(#{Age in years})</condition>
<program name="JB_Testing_2.2"/>
<programRuleActions>
<programRuleAction/>
</programRuleActions>
</programRule>
<programRule name="PR01 - Check variable with hasValue('variable')">
<condition>d2:hasValue('Age in years')</condition>
<program name="JB_Testing_2.2"/>
<programRuleActions>
<programRuleAction/>
</programRuleActions>
</programRule>
```

#### How to fix it? { #how-to-fix-it }

The example above shows how different ways of using the hasValue function will have the same effect as from version 2.2. There are no mandatory changes but have in mind that while writing new program rules being consistent might help avoiding problems.

### Evaluation of a variable { #capture_app_pr_changes_eval_var }

#### Descripción { #description }

This is a mandatory change. _!#{variable_name}_ can only be used boolean type variables (BOOLEAN and TRUE_ONLY).

#### How to identify via API? { #how-to-identify-via-api }

Get programRulesVariables with dataElements of the type NOT BOOLEAN or TRUE_ONLY

`https://example.org/api/programRuleVariables?fields=name&filter=dataElement.valueType:!in:[TRUE_ONLY,BOOLEAN]&paging=False`

Get all programRule.conditions `https://example.org/api/programRules?fields=displayName,condition&paging=False`

Check manually (or programmatically via a script) if in the list of programRule.conditions (obtained via the second API call) any of the program rules variables (obtained via the first API call) is being used.

For example, from the first list we get:

```xml
<programRuleVariable name="AdditionalMedication"/>
<programRuleVariable name="age"/>
<programRuleVariable name="Age in years"/>
<programRuleVariable name="AgeYears"/>
<programRuleVariable name="allergies"/>
<programRuleVariable name="apgarcomment"/>
```

And we can compare with the second list:

```xml
<programRule>
<condition>!#{Pregant}</condition>
<displayName>PR03- !#{variable_name} - BOOLEAN</displayName>
</programRule>
<programRule>
<condition>!#{Age in years}</condition>
<displayName>PR03- !#{variable_name} - NOT BOOLEAN</displayName>
</programRule>
<programRule>
<condition>#{PregnancyStatus} != 'YES'</condition>
<displayName>Pregnancy status : false</displayName>
</programRule>
```

This shows that a NON BOOLEAN variable is being used wrongly.

#### How to fix it? { #how-to-fix-it }

Make sure that you are evaluating BOOLEAN or TRUE_ONLY variables in your conditions. In case the program rule variable is not of that type update your program rule condition with d2:hasValue(#{variable_name}) or d2:hasValue(‘variable_name’)

In the example above the condition should change from:

`<condition>!#{Age in years}</condition>`  
To:  
`<condition>d2:hasValue(‘Age in years’)</condition>`

### Evaluation of texts { #capture_app_pr_changes_eval_text }

#### Descripción { #description }

This is a mdantory change. In program rule actions of the type ASSIGN, DISPLAY TEXT, DISPLAY KEY/VALUE PAIR, SHOW WARNING, SHOW ERROR, WARNING ON COMPLETE or ERROR ON COMPLETE if the Expression to evaluate and assign/display is a text, it must be enclosed with single quotes.

#### How to identify via API? { #how-to-identify-via-api }

Get the Program Rules which actions are of type text, with something on the field `data` and verify their data content to find strings without quotes.

`https://example.org/api/programRules?fields=program[name],name,programRuleActions[programRuleActionType,content,data]&filter=programRuleActions.programRuleActionType:in:[ASSIGN,DISPLAYTEXT,DISPLAYKEYVALUEPAIR,SHOWWARNING,SHOWERROR,WARNINGONCOMPLETE,ERRORONCOMPLETE]&filter=programRuleActions.data:!null&paging=false`

For example we can detect here an error of a text field without quotes in the first Program Rule Action while the second one is correct.

```xml
<programRule name="PR04- !#{variable_name} - BOOLEAN - Assign text without quotes">
<program name="JB_Testing_2.2"/>
<programRuleActions>
<programRuleAction>
<programRuleActionType>SHOWWARNING</programRuleActionType>
<data>embarazada</data>
<content>PR04 text with quotes is: </content>
</programRuleAction>
</programRuleActions>
</programRule>
```

```xml
<programRule name="PR04- !#{variable_name} - BOOLEAN - Assign text with quotes">
<program name="JB_Testing_2.2"/>
<programRuleActions>
<programRuleAction>
<programRuleActionType>SHOWWARNING</programRuleActionType>
<data>'embarazada'</data>
<content>PR04 text with quotes is: </content>
</programRuleAction>
</programRuleActions>
</programRule>
```

#### How to fix it? { #how-to-fix-it }

Scan the generated list (via the suggested API calls) to find `data` components of the Program Rule Action where text is not quoted, then go to each of the identified Program Rules and update them.

### Concatenation of string and objects { #capture_app_pr_changes_concat }

#### Descripción { #description }

This is a mdantory change. In program rule actions of the type ASSIGN, DISPLAY TEXT, DISPLAY KEY/VALUE PAIR, SHOW WARNING, SHOW ERROR, WARNING ON COMPLETE or ERROR ON COMPLETE if the Expression to evaluate and assign/display is a text, it must be enclosed with single quotes (same as previous change); but, on top of that, if it requires to concatenate two strings or a combination of functions it is mandatory to use the _d2:concatenate_ function.

#### How to identify via API? { #how-to-identify-via-api }

Get the Program Rules which actions are of type text, with any content on the field `data` and verify their data content to check if in case of two or more strings (or other objects) are being joined the d2:concatenate function is used

Get the Program Rules which actions are of type text and verify their data content to find strings without quotes.

`http://localhost:8034/api/programRules?fields=program[name],name,programRuleActions[programRuleActionType,content,data]&filter=programRuleActions.programRuleActionType:in:[ASSIGN,DISPLAYTEXT,DISPLAYKEYVALUEPAIR,SHOWWARNING,SHOWERROR,WARNINGONCOMPLETE,ERRORONCOMPLETE]&filter=programRuleActions.data:!null&paging=false`

For example we can detect here an error of two strings in an action without the use of d2:concatenate.

```xml
<programRule name="PR08- Assign text and variable without concatenate">
<program name="JB_Testing_2.2"/>
<programRuleActions>
<programRuleAction>
<programRuleActionType>SHOWWARNING</programRuleActionType>
<data>'Age is 10 and modulus' 'another string'</data>
<content>PR05 text without concat is: </content>
</programRuleAction>
</programRuleActions>
</programRule>
```

#### How to fix it? { #how-to-fix-it }

Scan the generated list (via the suggested API calls) to find `data` components of the Program Rule Action where two or more objects are being concatenated and update them to use the _d2:concatenate_ function.

In the example above the `data` should change from:

`<data>'Age is 10 and modulus' 'another string'</data>`  
To:  
`<data>d2:concatenate('Age is 10 and modulus','another string')</data>`

# Indicadores de programa { #capture_app_program_ind }

The following is a comprehensive list of all Program indicator variables available in DHIS2, and notes on whether or not these have been implemented in the Android Capture app.

Any issues around using a particular feature with Android are highlighted with an exclamation mark.

| Leyenda | Descripción |
| :-: | :-- |
| ![](resources/icons/icon-complete.png) | Component implemented |
| ![](resources/icons/icon-incomplete.png) | Component not implemented (rule fails) |
| ![](resources/icons/icon-na.png) | No aplicable |
| ![](resources/icons/icon-wip.png) | Work in progress. Feature not completely implemented yet or with unexpected behaviour already reported. |

## Common functions to use in a program indicator expression or filter { #capture_app_program_ind_common_functions }

| Función | Descripción | Estado | Notas sobre implementación |
| --- | --- | :-: | --- |
| if | Evaluates the boolean expression and if true returns the true expression value, if false returns the false expression value. The arguments must follow the rules for any indicator expression. | ![](resources/icons/icon-complete.png) |  |
| isNull | Returns true if the element value is missing (null), otherwise false. | ![](resources/icons/icon-complete.png) |  |
| isNotNull | Returns true if the element value is not missing (not null), otherwise false. | ![](resources/icons/icon-complete.png) |  |
| firstNonNull | Returns the value of the first element that is not missing (not null). Can be provided any number of arguments. Any argument may also be a numeric or string literal, which will be returned if all the previous objects have missing values. | ![](resources/icons/icon-complete.png) |  |
| greatest | Returns the greatest (highest) value of the expressions given. Can be provided any number of arguments. | ![](resources/icons/icon-complete.png) |  |
| least | Returns the least (lowest) value of the expressions given. Can be provided any number of arguments. | ![](resources/icons/icon-complete.png) |  |

## (d2) Functions to use in a program indicator expression or filter { #capture_app_program_ind_d2_functions }

| Función | Descripción | Estado | Notas sobre implementación |
| --- | --- | :-: | --- |
| addDays | Produces a date based on the first argument date, adding the second argument number of days. | ![](resources/icons/icon-complete.png) |  |
| ceil | Rounds the input argument up to the nearest whole number. | ![](resources/icons/icon-complete.png) |  |
| condition | Evaluates the boolean expression and if true returns the true expression value, if false returns the false expression value. The conditional expression must be quoted. The true-expr and false-expr arguments must follow the rules of any program indicator expression (including functions). | ![](resources/icons/icon-complete.png) |  |
| Conteo | Counts the number of data values that has been collected for the given program stage and data element in the course of the enrollment. The argument data element is supplied with the #{programStage.dataElement} syntax. | ![](resources/icons/icon-complete.png) |  |
| countIfCondition | Counts the number of data values that matches the given condition criteria for the given program stage and data element in the course of the enrollment. The argument data element is supplied with the #{programStage.dataElement} syntax. The condition is supplied as a expression in single quotes. | ![](resources/icons/icon-complete.png) |  |
| countIfValue | Counts the number of data values that matches the given literal value for the given program stage and data element in the course of the enrollment. The argument data element is supplied with the #{programStage.dataElement} syntax. The value can be a hard coded text or number. | ![](resources/icons/icon-complete.png) |  |
| countIfZeroPos | Counts the number of values that is zero or positive entered for the source field in the argument. | ![](resources/icons/icon-complete.png) |  |
| daysBetween | Produces the number of days between two data elements/attributes of type date. | ![](resources/icons/icon-complete.png) |  |
| floor | Rounds the input argument down to the nearest whole number. | ![](resources/icons/icon-complete.png) |  |
| hasUserRole | Returns true if current user has this role otherwise false. | ![](resources/icons/icon-complete.png) |  |
| hasValue | Returns true if the data element/attribute has a value. | ![](resources/icons/icon-complete.png) |  |
| inOrgUnitGroup | Evaluates whether the current organisation unit is in the argument group. The argument can be defined with either ID or organisation unit group code. | ![](resources/icons/icon-complete.png) |  |
| left | Evaluates to the left part of a text, num-chars from the first character. | ![](resources/icons/icon-complete.png) |  |
| length | Find the length of a string. | ![](resources/icons/icon-complete.png) |  |
| minutesBetween | Produces the number of minutes between two data elements/attributes of type “date and time”. | ![](resources/icons/icon-complete.png) |  |
| modulus | Produces the modulus when dividing the first with the second argument. | ![](resources/icons/icon-complete.png) |  |
| monthsBetween | Produces the number of full months between the first and second argument. | ![](resources/icons/icon-complete.png) |  |
| oizp | Returns one if the expression is zero or positive, otherwise returns zero. | ![](resources/icons/icon-complete.png) |  |
| relationshipCount | Produces the number of relationships of the given type that is connected to the enrollment or event. When no type is given, all types are counted. | ![](resources/icons/icon-incomplete.png) |  |
| right | Evaluates to the right part of a text, num-chars from the last character. | ![](resources/icons/icon-complete.png) |  |
| round | Rounds the input argument to the nearest whole number. | ![](resources/icons/icon-complete.png) |  |
| split | RSplit the text by delimiter, and keep the nth element(0 is the first). | ![](resources/icons/icon-complete.png) |  |
| substring | Evaluates to the part of a string specified by the start and end character number. | ![](resources/icons/icon-complete.png) |  |
| validatePatten | Evaluates to true if the input text is an exact match with the supplied regular expression pattern. | ![](resources/icons/icon-complete.png) |  |
| weeksBetween | Produces the number of full weeks between two data elements/attributes of type date. | ![](resources/icons/icon-complete.png) |  |
| yearsBetween | Produces the number of years between the first and second argument. | ![](resources/icons/icon-complete.png) |  |
| zing | Returns zero if the expression is negative, otherwise returns the expression value. | ![](resources/icons/icon-complete.png) |  |
| zpvc | Returns the number of numeric zero and positive values among the given object arguments. | ![](resources/icons/icon-complete.png) |  |

## Variables to use in a program indicator expression or filter { #capture_app_program_ind_variables }

| Tipo de variable | Descripción del tipo de variable | Estado | Notas sobre implementación |
| --- | --- | :-: | --- | --- |
| Event Date<br/>event_date | The date of when the event took place. | ![](resources/icons/icon-complete.png) |  |
| Creation Date\*<br/>creation_date | The date of when an event or enrollment was created in the system. | ![](resources/icons/icon-complete.png) |  |
| Due Date<br/>due_date | The date of when an event is due. | ![](resources/icons/icon-complete.png) |  |
| Sync Date\*<br/>sync_date | The date of when the event or enrollment was last synchronized with the Android app. | ![](resources/icons/icon-incomplete.png) |  |
| Incident Date<br/>incident_date | The date of the incidence of the event. | ![](resources/icons/icon-complete.png) |  |
| Enrollment Date (not visible on UI)<br/>enrollment_date | The date of when the tracked entity instance was enrolled in the program. | ![](resources/icons/icon-complete.png) |  |
| Enrollment Status<br/>enrollment_status | Can be used to include or exclude enrollments in certain statuses. | ![](resources/icons/icon-complete.png) |  |
| Current Date<br/>current_date | The current date. | ![](resources/icons/icon-complete.png) |  |
| Completed Date | The date the event is completed. | ![](resources/icons/icon-complete.png) |  |
| Value Count<br/>value_count | The number of non-null values in the expression part of the event. | ![](resources/icons/icon-complete.png) |  |
| Zero or positive value count<br/>zero_pos_value_count | The number of numeric positive values in the expression part of the event. | ![](resources/icons/icon-complete.png) |  |
| Event Count<br/>event_count | The count of events (useful in combination with filters). | ![](resources/icons/icon-complete.png) |  |
| Enrollment Count<br/>enrollment_count | The count of enrollments (useful in combination with filters). | ![](resources/icons/icon-complete.png) | Indicators in the Android App are calculated in the domain of one TEI enrollment. Value always 1. |  |
| TEI Count<br/>tei_count | The count of tracked entity instances (useful in combination with filters). | ![](resources/icons/icon-na.png) | Indicators in the Android App are calculated in the domain of one TEI enrollment. Value always 1. |  |
| Program Stage Name<br/>program_stage_name | Can be used in filters for including only certain program stages in a filter for tracker programs. | ![](resources/icons/icon-incomplete.png) |  |
| Program Stage ID<br/>program_stage_id | Can be used in filters for including only certain program stages in a filter for tracker programs. | ![](resources/icons/icon-incomplete.png) |  |
| Reporting Period Start<br/>reporting_period_start | Can be used in filters or expressions for comparing any date to the first date in each reporting period. | ![](resources/icons/icon-na.png) | Indicators in the Android App are calculated in the domain of one TEI enrollment. |  |
| Reporting Period End<br/>reporting_period_end | Can be used in filters or expressions for comparing any date to the last inclusive date in each reporting period. | ![](resources/icons/icon-na.png) | Indicators in the Android App are calculated in the domain of one TEI enrollment. |  |
| Organisation Unit Count<br/>organisationunit_count | . | ![](resources/icons/icon-na.png) |  |  |

[Documentation Reference](https://docs.dhis2.org/master/en/user/html/configure_program_indicator.html%23program_indicator_functions_variables_operators&sa=D&ust=1557433016643000)

# Tipos de valor suportados { #capture_app_value_types }

La siguiente es una lista completa de todos los tipos de valores disponibles en DHIS 2 y notas sobre si estos se han implementado o no en la aplicación Capture para Android.

Cualquier problema relacionado con el uso de una función en particular con Android se resalta con un signo de exclamación \!.

|  |  |
| :-: | :-- |
| ![](resources/icons/icon-complete.png) | Tipo de valor implementado |
| ![](resources/icons/icon-incomplete.png) | Tipo de valor no implementado, pero se ignorará con seguridad (si no es obligatorio) |
| ![](resources/icons/icon-wip.png) | Trabajo en progreso. Característica aún no implementada completamente o con un comportamiento inesperado ya reportado |

| Tipo de valor | Descripción del tipo de valor | programa con registro | programa con registro | Programa sin registro | Set de datos | Notas sobre implementación |
| :-- | :-- | :-: | :-: | :-: | :-: | :-- |
|  |  | **Atributos** | **Elementos de datos** | **Elementos de datos** | **Elementos de datos** |
| Hora | Solo hora | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-complete.png) |  |
| Fecha y hora | Fecha más hora | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-complete.png) |  |
| Fecha | Solo fecha | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-complete.png) |  |
| Edad | Permite introducir una edad en años/meses/días o una fecha de nacimiento (ambas se almacenan como fecha de nacimiento) | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-complete.png) |  |
| Número de teléfono | Un número de teléfono válido | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-complete.png) |  |
| Correo electrónico | Una dirección de correo-e en formato válido | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-complete.png) |  |
| Sí/no | Booleano sí/no (o sin respuesta) | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-complete.png) |  |
| Sólo Sí | Sí o sin respuesta | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-complete.png) |
| Número | Cualquier número válido, incluidos los decimales | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-complete.png) |  |
| Entero | Cualquier número entero (números enteros, sin decimales) | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-complete.png) |  |
| Entero positivo | Solo números enteros positivos (sin cero ni valores negativos) | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-complete.png) |  |
| Entero positivo o cero | Solo cero o números enteros positivos (sin valores negativos) | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-complete.png) |  |
| Entero negativo | Solo números enteros negativos (sin cero ni valores positivos) | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-complete.png) |  |
| Porcentaje | Cualquier valor decimal entre 0 y 100 | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-complete.png) |  |
| Intervalo de unidad | Cualquier valor decimal entre 0 y 1 | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-complete.png) |  |
| Texto | Texto (longitud de texto de hasta 50,000 caracteres) | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-complete.png) |  |
| Texto largo | Texto (sin restricciones de longitud) | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-complete.png) |  |
| Letra | Una sola letra | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-complete.png) |  |
| Archivo | Permite la carga de archivos en varios formatos (requiere que se configure el almacenamiento adecuado) | ![](resources/icons/icon-wip.png) | ![](resources/icons/icon-wip.png) | ![](resources/icons/icon-wip.png) | ![](resources/icons/icon-incomplete.png) |  |
| Unidad Organizativa | Permite la selección de una unidad organizativa DHIS2 como valor elegido | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-incomplete.png) |  |
| Tracker asociado | Permite seleccionar de un Tracker existente una 'instancia de entidad tracked' (p. ej. una persona) como valor | ![](resources/icons/icon-incomplete.png) | ![](resources/icons/icon-incomplete.png) | ![](resources/icons/icon-incomplete.png) | ![](resources/icons/icon-incomplete.png) |  |
| Nombre de usuario | Permite seleccionar un nombre de usuario válido DHIS2 como valor | ![](resources/icons/icon-wip.png) | ![](resources/icons/icon-wip.png) | ![](resources/icons/icon-wip.png) | ![](resources/icons/icon-incomplete.png) |
| Coordenada | Permite la entrada manual de coordenadas geográficas (no permite la captura automática de coordenadas) | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-complete.png) |  |
| URL | Permite la entrada manual de una URL. | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-complete.png) |  |
| Imagen | Permite la carga de imágenes. | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-complete.png) | ![](resources/icons/icon-incomplete.png) |  |

# Android Settings Web App { #capture_app_andoid_settings_webapp }

## Overview { #capture_app_andoid_settings_webapp_overview }

This section focuses on the Android Settings Web App implementation.

The Android Settings Web App allows admins to configure synchronization parameters for the DHIS2 Android Capture App, encrypt the local database of the android devices, customize the appearance of Programs, Data sets, and Home screen, and add TEI Analytics items. The configuration parameters defined within this web app will overwrite the settings of all android devices using the DHIS2 Android Capture App.

Please note that in this version of the web app, only users with 'ALL' authority are able to define those parameters in the configuration. Other users having access to the web app can see the value of the parameters, but cannot edit them.

> **Warning**
>
> This version comes with improvements and disruptive features, so previous versions are no longer supported, the settings stored there will be removed.

## General settings { #capture_app_andoid_settings_webapp_general }

Includes configurations such as the Matomo URL and project ID, the number of reserved values to download per TEI, and encrypt the device database.

![](resources/images/capture-app-general-settings.png)

**Matomo configuration:** If you already have a Matomo instance, add the Matomo URL and the project ID.

**Mobile configuration:** This section allows admin users to edit the SMS gateway ad result sender phone number.

**Reserved values:** This will specify the number of values per TEI attribute reserved to download in the devices.

**Encrypt device database:**

> **Warning**
>
> This is a critical action and will affect the local database of all android devices synchronizing with the server (it won't affect the server DHIS2 database).
>
> By default, the android app database is not encrypted, but an admin can check the _Encrypt device database_ to encrypt the metadata and data stored in every device. Encrypting the database will have an impact on the database volume and performance of the android app. Note that at the moment of selecting or unselecting this option, no data is lost (even if it hasn't been previously synchronized with the server)

**Disable all settings:** By clicking this button, the user will remove all android configuration settings. No configuration will be applied to the Android Capture app (if this is the case, the sync parameters applied are the ones defined in the Android Capture app).

## Synchronization { #capture_app_andoid_settings_webapp_synchronization }

It offers additional parameters to control metadata/data synchronization.

### Global { #capture_app_andoid_settings_webapp_synchronization_global }

**Metadata sync:** Admin users can choose how often the metadata will sync. e.g. Sync metadata every 24 hours.

**Data sync:** Admin users can choose how often the data will sync. e.g. Syncing data every 6 hours.

![](resources/images/capture-app-sync-global.png)

### Program { #capture_app_andoid_settings_webapp_synchronization_program }

This section controls the program data synchronization parameters. It has a section to define global or default parameters to be used in the synchronization of all programs.

#### Global settings { #capture_app_andoid_settings_webapp_synchronization_program_global }

Global settings apply to all programs that an android user has access to.

![](resources/images/capture-app-program-global-settings.png)

**TEI to download:** Maximum number of TEIs to download from the server.

**TEI download period:** It downloads the TEIs that have been updated within a period. e.g. TEIs that have been updated within last month

**Event to download:** Maximum number of Events to download.

**Event download period:** It downloads Events which event date belongs to a specific period.

#### Specific settings { #capture_app_andoid_settings_webapp_synchronization_program_specific }

This section allows the admin users to specify the behaviour of a particular program/s when syncing the data. The specific configuration overwrites the general settings for the programs listed in this section. To add a setting for a specific program:

- Click on _Add a Program-specific setting_, a Dialog will appear.
- Bellow "Values per Program" title, click and find a list of programs.
- Clicking on a program will show the different parameters to configure. The number of parameters depends on the program type (with or without registration).

**Settings for Program Without Registration**

![](resources/images/capture-app-program-specific-dialog-without_registration.png)

**Settings for a Program With Registration**

![](resources/images/capture-app-program-specific-dialog-with_registration.png)

In the case that any specific settings has been saved, a table will show a summary with the specific configuration per program, and the options to edit or delete these settings.

![](resources/images/capture-app-program-specific-table.png)

> **Caution**
>
> Using specific settings per program might have unexpected results in the number of TEIs downloaded and the total amount might exceed the one defined in the Global Settings. This is due to how the appliation download the TEIs from the server. The Android client will first download a max number of TEIs from the server based on the Organistation Units where the user has access and based on the lastUpdate field. Afterwards it will download a max munumber of TEIs from the specific programs. Therefore, if the TEIs downloaded from the Global setting (500 in the example above) have been updated more recently than any of the TEIs from a specific program (500 for Malaria case diagnosis, treatment and investigation) the Android client will end up downloading 1000 TEI.
>
> This might look confusing at first, but once understood can be used to ensure a minium (and maximum) number of TEIs for a specific program will be downloaded which can be very useful in specific implementations.
>
> Imagine an implementation where it must be ensured that the Android user has all the TEIs of a specific program in a server where the same user has access to other Organisation Units where other TEIs might be enrolled in another program. The program is called Community Care and it has 17 TEIs which have been updated very long time ago. The administrator can ensure that the 17 TEIs will be donwloaded by setting anything in Global Settings (if needed to reduce bandwidth a very low value should be set) and a at least 17 for the specific program as show in the image below:
>
> ![](resources/images/capture-app-program-specific-example-web.png)
>
> When the initial synchronization is triggered the Android device will first download the last TEIs updated on the server (which according to our example do not belong to the specific program) and secondly up to 20 TEI from the specific program resulting in the following (notice all the TEIs for the program were downloaded):
>
> ![](resources/images/capture-app-program-specific-example-mobile1.png)
>
> And by going to the settings it can be appreciated how the total number of TEIs is the expected 37, 20 from the Global Setting, and 17 from the program specific.
>
> ![](resources/images/capture-app-program-specific-example-mobile2.png)

#### Reset all values { #capture_app_andoid_settings_webapp_synchronization_program_reset_all }

By clicking on _Reset all values_, the admin user will restore the default settings values of the program section. Please note that in this case it means no specific settings per program.

To save any configuration, the admin user needs to click on the _Save_ button (this button is disabled for the users who don't have the 'ALL' authority)

### Data set { #capture_app_andoid_settings_webapp_synchronization_data }

This section controls the aggregated data synchronization parameters.

#### Global settings { #capture_app_andoid_settings_webapp_synchronization_data_global }

The first part is for global settings that apply to all data sets an android user has access to.

![](resources/images/capture-app-dataset-global-settings.png)

**Number of Periods:** Maximum number of periods to download.

#### Specific Settings { #capture_app_andoid_settings_webapp_synchronization_data_specific }

To add a specific setting:

- Click on _Add a Data set specific setting_, a dialog with a list of data sets will appear.
- Click on a data set, and this field will be autocompleted with the default value based on the dataset period type.

![](resources/images/capture-app-dataset-specific-dialog.png)

![](resources/images/capture-app-dataset-specific-table.png)

### User Sync Test { #capture_app_andoid_settings_webapp_synchronization_user_sync_test }

This section checks the amount of data and metadata a user would sync to his/her device. You can run this test on any user that you have access to. This test shows up the number of organisation units, data sets, program rules, programs, etc., that an android user has access to (so the resources that the android app will download), and the metadata and data download size (approx estimation). Please note that a user doesn't need to have the 'ALL' authority to run this test.

![](resources/images/capture-app-user-sync-test.png)

> **Note:**
>
> The values that are highlighted in red are because the value is considered greater than the maximum recommended value.

## Appearance { #capture_app_andoid_settings_webapp_appearance }

These settings give control over the appearance of the data entry and list forms.

- Filter: it defines the filters that can be enabled in the different app menus.
- Completion spinner: it turns on/off the completion spinner that shows the progress in the data entry form.

These settings refer to visual components, so they must be consumed by the app.

### Home screen { #capture_app_andoid_settings_webapp_appearance_home_screen }

It allows the admin user to enable or disable the option to show the filters related to Date, Organisation Unit, Sync Status, and Assigned to me on the Home screen.

![](resources/images/capture-app-appearance-home.png)

### Program { #capture_app_andoid_settings_webapp_appearance_program }

It allows the admin user to specify which filters should be shown and enable or disable the option to show the completion percentage of the data entry form.

#### Global settings { #capture_app_andoid_settings_webapp_appearance_program_global }

Global settings apply to all programs that an android user has access to.

![](resources/images/capture-app-appearance-program-global.png)

#### Specific settings { #capture_app_andoid_settings_webapp_appearance_program_specific }

This section allows to admin user to customize the filter and percentage completion appearance option. To add a specific setting:

- Click on _Add a Program Settings_, and a dialog will appear.
- Click on the dropdown that will show a list of programs.
- Clicking on a program will show the different filters to configure. The category combo filter depends on the category combo name.

![](resources/images/capture-app-appearance-program-specific.png)

If any specific settings have been saved, a table will summarize the particular configuration per program, and the options to edit or delete these settings.

![](resources/images/capture-app-appearance-program-table.png)

### Data set { #capture_app_andoid_settings_webapp_appearance_data }

It allows admins to enable/disable filters for the data set section

#### Global settings { #capture_app_andoid_settings_webapp_appearance_data_global }

The first part is for global settings that apply to all data sets an android user has access to.

![](resources/images/capture-app-appearance-dataset-global.png)

#### Specific settings { #capture_app_andoid_settings_webapp_appearance_data_specific }

To add a specific setting:

- Click on _Add a Data set Settings_. A dialog box will pop up with a dropdown with a list of data sets.
- Click on a data set, and a list of options to enable or disable filters will be displayed.

![](resources/images/capture-app-appearance-dataset-specific.png)

![](resources/images/capture-app-appearance-dataset-table.png)

## Analytics { #capture_app_andoid_settings_webapp_analytics }

Analytics settings define the TEI analytics items (charts, tables) that will be displayed to the user. The scope of the analysis is the TEI, so the visualizations will be displayed in the TEI dashboard of the android app.

Any item defined in the settings app will overwrite the default behaviour of the android app, only showing the items defined in the settings app. The purpose of this section is to define visualizations to show evolution of dataelements and program indicators over time. Based on that, it will only take into cosideration dataelements that belongs to a repeatable program stage, or programindicators which formula contains at least one dataelement that belongs to a repeatable program stage.

To create a **TEI Analytics** item:

- Click on _Add TEI Analytics_. A dialog box will pop up with a small form.
- Choose a program and a repeatable program stage, and fill the form. The **Short name** is the only optional field.
- If an item visualization other than WHO Nutrition has been chosen, the next fields to select are the period type (monthly, weekly, daily), an element type (Program Indicator, Data Element), and an element that will be based on the element type previously selected. Remember that these elements are related to the program and repeatable program stage chosen at the beginning.

![](resources/images/capture-app-analytics-item.png)

To create a **WHO Nutrition Analytics** item:

- Select a program, a program stage, and WHO nutrition as visualization type.
- Choose a WHO visualization type that can be Height for Age (HFA), Weight for Age (WFA) or Weight for Height (WFH).
- Select the trackedentityattribute that represents the gender. You have then to specify the option for Male 'Male title' and the option for Female 'Female title'. Normally they will be option codes.
- Choose the dataelement/programindicator that will be displayed in the Horizontal (x) axis
- Choose the dataelement/programindicator that will be displayed in the Vertical (y) axis

![](resources/images/capture-app-analytics-who-item.png)

If any TEI Analytics item has been created, a table will show the item's title and program name, and action buttons to delete or edit that item.

![](resources/images/capture-app-analytics-table.png)

## Installation { #capture_app_andoid_settings_webapp_installation }

A user can easily install the Android Settings Web App by logging into the DHIS2 and going to **App Management**.

- Click on **App Store**
- Go to _Android Settings App_
- Click on _Install V2.0.0_

![](resources/images/capture-app-app-hub-install.png)

## Log in and first time setup { #capture_app_andoid_settings_webapp_login }

After a user installs and launches the Android Settings Web App for the first time, the web app will require setting and saving the default values of the configuration. This will apply default settings to all android devices connected to the instance.

![](resources/images/capture-app-first-time-setup.png)

> **Warning**
>
> Be aware that previous versions are deprecated, so you will start with a new default configuration.

![](resources/images/capture-app-first-setup-with-deprecation-message.png)

> **Warning**
>
> Only users will 'ALL' authority are able to _save or update_ the configuration, but any user will have view access once it's created.

![](resources/images/capture-app-first-setup-no-authorities.png)

## Enter and save configuration parameters { #capture_app_andoid_settings_webapp_enter_and_save }

### Datastore { #capture_app_andoid_settings_webapp_datastore }

Internally all settings are stored in [Datastore](https://docs.dhis2.org/master/en/developer/html/webapi_data_store.html) in JSON format.

Datastore structure:

| Item      | Descripción                                 | tipo de dato |
| --------- | ------------------------------------------- | --------- |
| Namespace | Namespace for organization of entries       | Cadena    |
| Key       | Key for identification of values            | Cadena    |
| Value     | Value holding the information for the entry | JSON      |

### Save configuration parameters { #capture_app_andoid_settings_webapp_save_config }

At the form footer of all settings sections, admin users can find a _Save_ button.

![](resources/images/capture-app-save_button.png)

Only when an admin user clicks on this button, all changes made on the current section are saved on the Datastore. These changes will apply to the Android Capture Apps when they synchronize their configuration.

**Unsaved changes:**

In case an admin user wants to go to another section when there are still some unsaved changes, an alert will be displayed before navigating away from the current section. In case the user accepts leaving the page, the unsaved changes will be lost.

![](resources/images/capture-app-unsaved-changes.png)

#### Reset all values to default { #capture_app_andoid_settings_webapp_reset_all }

An admin user can restore the settings at any time. There is a _Reset all values to default_ button at the form footer of all settings sections.

![](resources/images/capture-app-reset-default.png)

The default values will be only restored on Datastore and applied after clicking on _Save_.
