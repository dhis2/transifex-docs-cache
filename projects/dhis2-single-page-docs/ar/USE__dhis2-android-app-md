---
revision_date: '2023-11-21'
tags:
- Use
template: single.html
---

# About this guide { #about_this_guide_ } 

<!--DHIS2-SECTION-ID:about_this_guide_-->

The DHIS 2 documentation is a collective effort and has been developed by
the development team and users. While the guide strives to be complete,
there may be certain functionalities which have been omitted or which
have yet to be documented. This section explains some of the conventions
which are used throughout the document.

DHIS 2 is a browser-based application. In many cases, screenshots have
been included for enhanced clarity. Shortcuts to various functionalities
are displayed such as **Data element** \> **Data element group**. The
"\>" symbol indicates that you should click **Data element** and then
click **Data element group** in the user interface.

Different styles of text have been used to highlight important parts of
the text or particular types of text, such as source code. Each of the
conventions used in the document are explained below.

> **Note**
>
> A note contains additional information which should be considered or a
> reference to more information which may be helpful.

> **Tip**
>
> A tip can be a useful piece of advice, such as how to perform a
> particular task more efficiently.

> **Important**
>
> Important information should not be ignored, and usually indicates
> something which is required by the application.

> **Caution**
>
> Information contained in these sections should be carefully
> considered, and if not heeded, could result in unexpected results in
> analysis, performance, or functionality.

> **Warning**
>
> Information contained in these sections, if not heeded, could result
> in permanent data loss or affect the overall usability of the system.

> **Complete**
>
> Information contained in these sections, will indicate that these 
> are issues that have been fully implemented.

> **Incomplete**
>
> Information contained in these sections, will indicate that these 
> are issues that are not implemented and will be ignored.

> **Not_applicable**
>
> Information contained in these sections, will indicate that these 
> are issues not applicable.

> **Work_in_progress**
>
> Information contained in these sections, will indicate that these 
> are issues or freatures not completely implemented or with unexpected
> behaviour already reported.

    Program listings usually contain some type of computer code.
    They will be displayed with a shaded background and a different font.

`Commands will be displayed in bold text, and represent a command which
would need to be executed on the operating system or database.`

Links to external web sites or cross references will be displayed in
blue text, and underlined like [this.](http://www.dhis2.org).

<!--
Bibliographic references will displayed in square brackets like this
Store2007. A full reference can be found in the bibliography contained
at the end of this document.
-->



# Introduction { #capture_app_introduction }

This guide is designed to assist you in configuring DHIS 2 for use with the Android Capture App.

It is not a tutorial or training manual; it is designed to complement the core DHIS 2 documentation and training materials with specific reference material for the Android application.

The document is divided into sections, which are intended to describe all the features that have been implemented in the app, those that have not yet been implemented and those that will not be supported. Where applicable, an explanation of problems with the use of a particular feature in Android app will be provided. Recommendations or tips will also be presented for a better understanding and use of the app.

In addition, the document has sections for new features in the login, visual configurations, synchronization management and a list of known important errors.







# Recommendations for a DHIS 2 mobile deployment { #capture_app_recommendations }

If you plan to deploy the DHIS2 Android App in the field, we strongly recommend you to read the [Mobile Implementation Guidelines](https://docs.dhis2.org/master/en/dhis2_android_implementation_guideline/about-this-guide.html) published by UiO. It includes chapters on technology requirements, security and configuration aspects, and testing and roll out recommendations. Below you will find some key aspects briefly introduced, we recommend reading the extended document.

## Mobile device specifications { #capture_app_recommendations_mobile_specs }

The DHIS2 Android App is compatible and supported for DHIS 2 versions 2.35 to 2.37. And has no breaking changes with 2.30 to 2.34.

It requires a device that is running Android v4.4 (not recommended but supported until Apr 2022) or higher. The minimum recommended for new devices: Android 7 or higher.

In [the specific section of the Mobile Implementation Guidelines](https://docs.dhis2.org/master/en/dhis2_android_implementation_guideline/mobile-device-specifications.html) you will find recommendations for new mobile device acquisitions for a Dhis2 Android deployment.

## Testing and Piloting { #capture_app_recommendations_testing }

If you plan to deploy the DHIS 2 Android App in the field, you should first do a full round of testing of the app in you own configuration.

The app has been extensively tested with the demo servers, and during Beta testing it was tested against some real configurations as well. We know, however, that every DHIS 2 configuration is special in many senses, and might cause inconsistencies that we have not being able to identify.

It is strongly advised to carry out a comprehensive testing of the app in your own server before piloting it.



# Contribute to the App { #capture_app_contribute }

## How to report a bug { #capture_app_contribute_report }


First of all, please check the [List of already reported bugs in JIRA](https://dhis2.atlassian.net/issues/?filter=10252)

The list is always updated as you add new bugs and we work on them. You need an active, free DHIS 2 Jira account.

When reporting a bug please specify together with your description:

- DHIS 2 version and build revision
- DHIS 2 Android App version
- Android OS version
- Device (when possible)
- Error log (when possible)

## How to suggest Icons to the library { #capture_app_contribute_icons }


DHIS 2 and the new DHIS 2 Android App allows you to select icons for programs, datasets and the options of an optionset. DHIS 2 2.30 incorporates 125 icons. We plan to expand the collection of icons on each future version of DHIS 2- for that we need your help: we are seeking ideas for new icons - please submit yours using [this form](https://forms.gle/FkUmwfZGYAScd2326).

## How to add translations { #capture_app_contribute_translations }


The steps to contribute to the translation of the app are:

1. Create an account in [Transifex](https://www.transifex.com/signin/?next=/hisp-uio/)
2. Join Existing Organization
3. Search for HISP UiO and select the organization not the projects
4. Select ANDROID: Capture project
5. Join the team for the selected language

Please let us know if it doesn't work well or if you need to add a new language by sending a message in the community to the user dhis2-android.


# Visual configurations { #capture_app_visual }

##  Local Analytics { #local-analytics } 

The DHIS2 Android App can now render analytics that have been created in the Data Visualizer app in DHIS2. Analytics to be displayed require to be configured using the Android Settings WebApp where administrators will be able to decide the charts and tables to be displayed for end users.

To configure analytics open the Android Settings WebApp on your DHIS2 server and follow the steps below:

   1. Select Home, Program or Data set from the Analytics menu
   2. Click on the  "Add Visualization" button
   3. Search by typing the name of the visualization and select it by clicking on it
   4. Add an alternative title, otherwise, the app will display the name of the visualization

![](resources/images/capture-app-image162.png){ width=25%}
![](resources/images/capture-app-image164.png){ width=25%}

Analytics are created and configured using the web tools, however, the data aggregation happens offline using only data stored in the device.  

![](resources/images/capture-app-image165.png){ width=25%}
![](resources/images/capture-app-image166.png){ width=25%}
![](resources/images/capture-app-image167.png){ width=25%}

#### Analytics Types and Filters { #analytics-types-and-filters } 

The analytics supported in the Android App are:

   - Pivot Tables
   - Column Chart
   - Line Chart
   - Pie Chart
   - Radar chart
   - Single Value

For each visualization object, the user will be able to filter in the app by:

   * Relative Period: Daily, Weekly, Monthly, Yearly, This Quarter, Last Quarter, Last 4 Quarters and Quarter this year.
   * OrgUnit: Select "All" to display all the org units available to the user or "Selection" to specify one or multiple org units.

![](resources/images/capture-app-image180.png){ width=25%}
![](resources/images/capture-app-image168.png){ width=25%}
![](resources/images/capture-app-image169.png){ width=25%}

A reset button will be displayed if a filter is applied. Select Reset to display the default visualization.

![](resources/images/capture-app-image170.png){ width=25%}

Users can also change The anlytics type between chart, table or single value.

![](resources/images/capture-app-image166.png){ width=25%}
![](resources/images/capture-app-image171.png){ width=25%}

### Legends { #capture_app_visual_pivot_legends }

Legends are displayed in pivot tables by enabling the feature "Use legends for chart color" in the Data Visualizer App.

The Android app will color the cells using either the pre-defined legend per data item or a single legend for the entire pivot table, depending on the settings in Web.

The style for legends in tables has a new design which ensures good contrast and visibility independently from the selected colour for the legend.

![](resources/images/capture-app-image183.png){ width=25%}

### Groups { #groups } 

All these visualizations can be organised and displayed in groups. Groups are also configured using the Android Settings Webapp following the steps below:

   1. Open the Android Settings App
   2. Click to Add a new visualization in the Analytics Menu (Home, Program or Data set)
   3. Select a visualization
   4. Mark the "Use a group visualization" checkbox
   5. Create or select a created group
   6. Save the visualization

You can name your different groups, they will be displayed as a button in the top bar of the analytics screen.

![](resources/images/capture-app-image173.png){ width=25%}

### Limitations { #limitations } 

Android uses tables and charts created using the web Visualizer app, however only the configuration parameters of the object are used by the Android App: data elements, indicators, chart type, title, periods...; all the aggregations are calculated offline by the android application. The results will be based on the data stored in the device at that exact moment.

Since the aggregations and calculations displayed are calculated in the device, the implementation of analytics is limited compared to web. In summary the compatible and suported objects and features are:

   - Well formed analytic objects (series, categories, filters)
   - Use of relative periods (Fix periods are not supported)
   - User has view access
   - Limitations for Pivot Tables
      - Number of header lines: 1 or 2 (from 2.3)
      - Number of header columns: 2
   - Limitations for Charts
      - Number of Series: No limit (but remember you are rendering in a small screen)
      - Number of Categories (doesn’t apply for pie chart): No limit

There are many more restrictions which apply to Android Analytics regarding the many configuration options available in the Web Visualizer as well as the supported functions and calculations related to indicators and program indicators. [This table](https://docs.google.com/spreadsheets/d/1127cz7M0K4fux5CU0V54V2Z77NZWCr0BTrZ6jcCec4Q) summarises all supported features.

> **Note**
>
> The following aggreagation functions are supported now in local analytics: LAST, FIRST, AVERAGE_SUM_ORG_UNIT, LAST_AVERAGE_ORG_UNIT, LAST_IN_PERIOD, LAST_IN_PERIOD_AVERAGE_ORG_UNIT, FIRST_AVERAGE_ORG_UNIT
> 
> 

## Interface language { #interface-language } 

The language of the interface will corespond to the language set in the DHIS2 user configuration. If the language is not available in the app, it will pick the language of the device. 

If none of the language configurations are available, the app will default to English.

Translations set up in DHIS2 for metadata will also be shown according to the language in the user configuration.

![](resources/images/capture-app-image182.png){ width=25%}


## Personalize your Icon { #capture_app_visual_icon }

You can set your icon in the wallpaper using the DHIS 2 App Widget. The icon will be the flag configured in your server.

![](resources/images/capture-app-image32.jpg){ width=25%}

> **Note**
>
> How to add a widget:
>
> - Long press in your wallpaper
> - Select Widgets
> - Look for the DHIS 2 Widget
> - Select
>
> It will add a shortcut to your app.

## Personalise the colour of the App { #capture_app_visual_colour }

You can set the generic theme of the app by configuring the them in our server:

![](resources/images/capture-app-image28.png){width=80% }

> **Note**
>
> How to set the server theme and flag:
>
> Go to **System Settings > Appearance > Style**
>
> - Select your style
>   - Green,
>   - India (Orange),
>   - Light Blue,
>   - Myanmar (red),
>   - Vietnam
> - Select your flag
>
>![](resources/images/capture-app-image23.png){ width=25%}

## Icon library for metadata { #capture_app_visual_icon_lib }

There are currently 134 icons available that you can choose from. You can search by name in the icon picker widget. Icons are available in positive, negative and outlined shapes. We will be adding many more icons in future releases.

Icons can be associated to programs, stages, data elements and the options of an option set. This is  configurable through the Maintenance App.

> **Note**
>
> This feature is available from DHIS 2 2.30 onwards

![](resources/images/capture-app-image13.png){ .center width=80% }

In the DHIS2 Android App icons render in the home screen to illustrate all the programs available to a user, or while adding an stage. For data elements and options, the icons render for single event programs, when a section contains a single or more DEs, showing the option set as a matrix or sequence of images.

The icon based data entry can now be used in enrollment forms. When an enrollment section contains one or more Tracked Entity Attributes with option sets and icons assigned, the app is able to display them as a matrix or sequence based on the section rendering type. In previous sections of the App this feature was only available for Data elements.

![](resources/images/capture-app-image19.png){ width=25%}
![](resources/images/capture-app-image26.png){ width=25%}

> **Note**
>
> Icons will initially only render in the new Android app. The new web-based Capture App will incorporate them in the near future.

We plan to expand the collection of icons on each future version of DHIS2 for that we need your help: we are seeking ideas for new icons - please submit yours using [this form](https://www.google.com/url?q=https://drive.google.com/open?id%3D1LmfYJQAu3KyDfkY3X6ne7qSsuTa9jXZhoQHzkDxeCdg&sa=D&ust=1557433016147000).

## Colour palette for metadata { #capture_app_visual_colour_palette }


Tracker and Event capture now have the ability to render colours for programs, stages, data elements and options in option sets. A colour picker is integrated in the Maintenance App, which shows as a palette, except for options which allows the selection of any colour.

![](resources/images/capture-app-image20.png){ .center width=80% }

In the Android App, the color will be rendered as background color for programs and stages combined with an icon (if selected). For options it renders as the background colour during data entry form for single event programs. When the user selects a program with an assigned colour, that colour becomes the background theme for all screens in the domain of the program.

![](resources/images/capture-app-image19.png){ width=25%}
![](resources/images/capture-app-image2.jpg){ width=25%}

> **Note**
>
> Colours will first be available in the new Android app, followed in future releases by the new web-based Capture App.

## Rendering Types for Program Sections { #capture_app_visual_rendering_type }


![](resources/images/capture-app-image16.png){width=80% }

**Program Section**: when used in combination with icons, a Program Section with one or more data elements and associated Option Sets can render the options in sequential or matrix layout (see screenshots). If the icon is not found, the app displays the DHIS logo.

![](resources/images/capture-app-image26.png){ width=25%}
![](resources/images/capture-app-image36.png){ width=25%}

From 2.8, the app will render option set with any value type as matrix or sequential layout.

![](resources/images/capture-app-image226.png){ width=25%}
![](resources/images/capture-app-image227.png){ width=25%}

> **Note**
>
> Render type for sections will first be available in the Android app, followed in future releases by the new web-based Capture App UI.

## Calendar { #capture_app_visual_calendar }


Now it is possible to use two different calendars. The one on the left is the first to appear but you can change it by clicking on the calendar icon on the lower left corner.

This is available when:

1. Making a new enrollment.
2. Creating a new event (Programs with and without registration).
3. Using period filters in data sets and programs with and without registration.

![](resources/images/capture-app-image60.jpg){ width=25%}
![](resources/images/capture-app-image61.jpg){ width=25%}

> **Note**
> 
> For Android versions 4.4,  5.1 and small devices, the Accept option is not visible in the second calendar view.

## Render types { #capture_app_visual_render }

The available rendering options have been expanded to include horizontal and vertical radio buttons, checkboxes and toggles for any value type.

![](resources/images/capture-app-image111.png){ width=100%}
![](resources/images/capture-app-image224.png){ width=25%}
![](resources/images/capture-app-image225.png){ width=25%}

> **Note** 
>
> The default rendering option will automatically display a search box whenever there are more than 15 elements in the option set to ease the selection.
> 
> ![](resources/images/options_no_search.png){ width=25% } ![](resources/images/options_search.png){ width=60% }

Render types are available in event and registration forms

### QR and Barcodes { #capture_app_visual_render_qr }


Data elements or attributes type text can be also configured as QR or barcodes. When a Data Element or Attribute is rendered as QR/Barcode, the app will open the device camera to read the code image. When the QR/Barcode is a TEI attribute configured as searchable, the user will be allowed to scan the code in order to search and identify the Tracked Entity Instance. This will also work for option sets.

Barcodes also allow the user to manually enter the value.

![](resources/images/capture-app-image118.png){ width=20%}
![](resources/images/capture-app-image119.png){ width=20%}
![](resources/images/capture-app-image120.png){ width=20%}
![](resources/images/capture-app-image121.png){ width=20%}


#### Export/Share { #exportshare } 

Users are now able to display a bar or QR code in an image so that it can be shared for printing, take a screenshot or show it on the screen for scanning.

Non-editable fields can still share the bar or QR code, but will prevent the user from capturing a new one.

![](resources/images/capture-app-image181.png){ width=20%}
![](resources/images/capture-app-image174.png){ width=20%}

#### GS1 Data Matrix codes { #capture_app_visual_gs1 }

If an attribute or data element rendering type is configured as QR code, the Android App will be able to read and process the string as GS1 Data Matrix codes.

Combined with the use of d2 functions in program rules, the different fields of a GS1 code can be saved into different data elements or attributes (d2:extractDataMatrixValue(key, dataMatrixText)).

![](resources/images/capture-app-image184.png){ width=20%}
![](resources/images/capture-app-image200.png){ width=20%}

### Signature { #capture_app_visual_signature }

This feature allows users to collect handwritten signatures from the device. The signatures will be saved as an image data element in the app.

This configuration must be done in web ( available from 2.40 version) by selecting the "canvas" rendering type on an image value type.

![](resources/images/capture-app-image231.png){ width=20%}
![](resources/images/capture-app-image232.png){ width=20%}

## User Experience { #capture_app_visual_user_experience }

### Tappable areas in icons and buttons { #capture_app_visual_tappable_areas }

Some buttons or tappable labels of the Android App had small sensitive areas for the user to tap. The whole user interface was reviewed and the tappable areas has been increased. For example the "+" button to create a new stage or the "˅" icon to open TEI details or expand a section.

![](resources/images/capture-app-image208.png){ width=20%}

### Loading Banners { #capture_app_visual_loading_banners}

The Android App provides visual animations to users when they perform actions that take longer than usual to complete, such loading maps or searching, so that they know that the system is processing their request.

![](resources/images/capture-app-image228.png){ width=20%}

### Offline Buttons { #capture_app_visual_offline_buttons}

This feature enhances the functionality of the app when it is used offline, ensuring that menus are disabled when the online actions are not available.

### Long Texts Management { #capture_app_visual_longtext_management}

The Android App enables users to view long text in fields that are limited in size, such as a stage names or datasets headers.


# Settings { #capture_app_settings }

![Settings window](resources/images/capture-app-image17.png){  width=25%}

Sync data
:   User is able to choose from a drop-down list if the data entered in the app is uploaded to the server manually or scheduled every 15 min, 1 hour or 1 Day. By default the app will sync every 24h. This kind of Syncing includes new and updated events and TEI’s.

Sync configuration (also known as sync metadata)
:   User is able to choose from a drop-down list  if the data entered in the app is uploaded to the server manually or scheduled every day or week. By default the app will sync every 24h.  This sync will update changes in programs or configurations in web.

Sync parameters
:   These parameters allow the user to specify the maximum number of TEI’s and events that can be stored in the local device. The user can also specify if limits apply per organisation unit or in total. Values can be set to default by clicking on “Reset to default”.

> **Note** 
>
> Sync data, Sync configuration and Sync parameters can be overwritten using the Android Settings Web App as described [in the specific section][#capture_app_andoid_settings_webapp_synchronization]
>
>

Reserved values
:   This will specify the number of reserved Id's available in your device and will allow you to refill them.

Open sync errors log
:   The sync error log gives details about the error and is prepared to be shared with admins.

Delete local data
:   This action will delete local data without having to log out.

> **Warning** 
>
> Using this functionality might lead to data loss if changes have not been previously synced to the server.
>
>

Reset app data & configuration
:   This action will log out the user and delete all data and metadata, this means user and server information is also deleted. It is similar to resetting the App.

> **Warning** 
>
> Using this functionality might lead to data loss if changes have not been previously synced to the server.
>
>

SMS Settings
:   This sections allows to check or edit the parameters related to the sms gateway.

Software Update (New 2.8)
:   This feature enables implementation administrators to manage and control the version of the Android app from the DHIS2 user web interface, making it easier to manage app updates and ensure compatibility with the DHIS2 system. Managers will be able to upload the desired version and users will get a prompt message to update when they are not in the last updated version. The management of versions is made through a new Web App.

![](resources/images/capture-app-image229.png){ width=25%}


# Generic features { #capture_app_generic }

## Login { #capture_app_generic_login }

There are two ways to access the application:

1. Manual: The user must type the corresponding URL of the server to be used and enter the username and password.

    > **Note**
    >
    > Take note that login is only possible with servers from version 2.29.

2. QR: The user can use a QR code instead of typing the URL but username and password must be entered manually.

![](resources/images/capture-app-image63.png){ width=25%}

> **Note**
>
> 1. After a succesful login the DHIS2 Android App will keep these values cached (URL and username) and will suggest them for future connections without having to type them.
>

After a succesful login the user should be able to perform an *offline* login only (only avaialble for the last combination of URL/Username). Offline usage gives the possiblity of using the application withou any type of connectivity. All data will still be stored and user can perform a synchornization once the connection is restablished or avaialble.


> **Warning**
> 
> In DHIS2 versions up to 2.30 if a user attemps an on-line login and their account has been disabled as explained in the [DHIS 2 Manual - Disable User](https://docs.dhis2.org/master/en/user/html/dhis2_user_manual_en_full.html#disable_user) all the data will be wiped from the phone. Make sure that before disabling a user all the data has been synced or that you are using this feature to remotely wipe sensitive data in case of a device getting lost.
>
> Due to a change in the login API this feature is not available in 2.31, 2.32, 2.33, 2.34, 2.35 and 2.36.

## Offline Multi-user { #capture_app_generic_multiuser}

The Android app have removed the limitation on the number of offline accounts that users can create, allowing them to work with as many offline accounts as needed.

The users will need to have access to the internet for the first login of each account and will be able to switch accounts after without requiring access to the Internet.

![](resources/images/capture-app-image185.png){ width=25%}
![](resources/images/capture-app-image186.png){ width=25%}

The users will be able to manage the user accounts and delete accounts if needed.

![](resources/images/capture-app-image187.png){ width=25%}
![](resources/images/capture-app-image188.png){ width=25%}
![](resources/images/capture-app-image189.png){ width=25%}
![](resources/images/capture-app-image190.png){ width=25%}

## Account Recovery { #capture_app_generic_recovery }

The users will be able to restore their own password if they have the setting enabled: Enabled User Account Recovery.

![](resources/images/capture-app-image64.png){ width=25%}

## Blocking session (PIN) { #capture_app_generic_PIN }

User is able to lock the session using a 4 digit PIN. This allows to move to other apps in your phone without deleting the local data.
If the user forgets the PIN number, log in by entering the credentials is also available.

![](resources/images/capture-app-image65.png){width=25%}

## Fingerprint { #capture_app_generic_fingerprint }

User is able to use the fingerprint scanner if the feature is activated in the device.

* When the fingerprint scanner is enable and not the PIN, every time the app closes, goes to background or the device is blocked, the session will be locked. Once the app is open again, the user needs to tap the fingerprint icon to activate the scanner.
* If the PIN and the fingerprint are set, when the session is locked and the user open the app again, the PIN will be asked.

![](resources/images/capture-app-image104.jpg){width=25%}
![](resources/images/capture-app-image105.jpg){width=25%}

## Instructions/information buttons { #capture_app_generic_instructions }

A contextual guide is available in TEI dashboard screen.

![](resources/images/capture-app-image66.png){width=25%}

> **Tip**
>
>  User is able to re-open<!-- PALD: unnecessary: (trigger)--> the instructions by clicking on the three dots at the top right corner of the screen.

## Filter { #capture_app_generic_filter }

A filter can be applied in all listing screens (home, event listing, tei search and dataSets) which narrows down the data displayed. The filters available are: period, org. unit, sync state, event status, category option combination and "assigned to me".

![](resources/images/capture-app-image19.png){ width=25%}
![](resources/images/capture-app-image123.png){ width=50%}
![](resources/images/capture-app-image134.png){ width=25%}

Filters will adapt to the different programs and data sets.

1. Program without registration: Date, Org. Unit, Sync State, Event Status and, Category Combination.
2. Program with registration: Event Date, Date of enrollment, Org. Unit, Sync, Enrollment Status, Event Status and Assigned to me. The filter icon will show only if a list of events is available (Display front page list feature or search)
3. Data Sets: Period, Org. Unit, and Sync State.

### Assigned to me { #capture_app_generic_filter_assigned }

It is possible to filter events based on its assignment to the current user. The “Assigned to me” filter has been added to the single event program list, the TEI list and the TEI Dashboard and the map views. It will only be displayed when the active program is configured to assign events to users.

### Event Date/Date/Period { #capture_app_generic_filter_date }

Filter the Events, TEIs(based on their events) and data sets, the following periods of time are availables:
- Today
- This week
- This month
- Yesterday
- Last week
- Last month
- Tomorrow
- Next week
- Next month
- From-to
- Other (Opens a date picker)
- Anytime

### Org. Unit { #capture_app_generic_filter_orgunit }

Allows the user to type the search or select an organisation unit from the tree. The filter will not be visible if the user has only one Organisation Unit configured.

### Sync { #capture_app_generic_filter_sync }

Filer by:
- Synced (events, TEIs, Data Sets)
- Not Synced
- Sync Error
- SMS Synced

### Event Status { #capture_app_generic_filter_event }

Filter the events by:
- Open
- Schedule
- Overdue
- Completed
- Skipped

Multiple status selection is permited. Once you open a TEI, the filter will be kept in the dashboard and show only the events with the selected status.

Events shown are up to 5 years old.

### Date of Enrollment { #capture_app_generic_filter_date_enroll }

The 'Date of Enrollment' will apply to the Enrollment date of the TEI in the program. If there is more than one enrollment date, it should sort the results by the most recent one. The label of this filter will display when available.

### Enrollment Status { #capture_app_generic_filter_enroll_status }

The filter 'Enrollment status' offers three options: Active, Completed, Cancelled. Only one option can be selected at time. If you filter by "completed" and the TEI has more than one enrollment, the app will open the "active"  enrollment. To see the completed one, select the three dot menu at the top right corner of the dashboard and select "program enrollments".

### Follow-Up { #follow-up } 

The 'Follow Up' filter allowes the user to filter out the TEIs that have been marked as 'Follow-up'. TEIs can be marked to be followed up in the TEI Dashbaord.

### Filtering added in TEI Dashboard: { #capture_app_generic_filter_tei }

Filters have been added to the TEI dashboard. It is possible to filter the events of a Tracked Entity Instance enrollment per period, organisation unit, sync status, event status, and user assignment.

![](resources/images/capture-app-image114.png){ width=25%}

## Sorting { #capture_app_generic_sorting }

Sorting has been integrated in the filter menu.

The sorting button will be on the filter bars with the following behavior:
- Only one sorting applies at a time. If the user clicks a different one, the previous one is disabled.
- The icon for applied sorting shows it is active, the others are inactive.  
- Repeated clicks keep changing the order to the reverse.

![](resources/images/capture-app-image135.png){ width=25%}

### Dates (Period, Date, Event Date or Enrollment Date) { #capture_app_generic_sorting_dates }

- Event Date preceds due date, only use due date when there is no event date.
- Order from most recent to less recent. Future events (due date) goes first.

### Org. Unit { #capture_app_generic_sorting_orgunits }

- List will be sorted in alphabetical order by org unit name.

### Enrollment Status { #capture_app_generic_sorting_enrollment }
- List will be sorted in alphabetical order by status name.

![](resources/images/capture-app-image123.png){ width=100%}

## Sync Information { #capture_app_generic_sync_info }

### Login Sync {#capture_app_generic_login_sync}

During the metadata download, the app will remain in the splash screen and will open the home screen once the metadata is in the device.

In the home screen, the app will inform with a loading spinner on each program when the data is downloading. After the sync process finishes, the app will display one of the two possible icons:

* A green checkmark if the program downloads data successfully and without errors (the icon will disappear after three seconds)  or,
* A gray arrow if there is an error during the sync process and the total or partial data isn't donwloaded

The user will be able to see how many programs are downloading data, or completed, making the waiting process more transparent and informative about its progress.

![](resources/images/capture-app-image207.png){ width=20%}

**NOTE:** All programs and data sets will be blocked until the sync process is fully finished.

### Subsequent logins {#capture_app_generic_subsequent_login}

The application will launch a sync process for data and metadata only for the first time the user logs in. In order to facilitate the work in the most difficult cases, the sync process have been removed for the subsequent logins. This means that when the user opens the app, it will open without performing a full sync even if the user logs out of the account.

If the user deletes the account, then the next login will launch the sync process.

Also, users have the option to sync with the server through the Refresh button any time they wish.

### Sync Status {#capture_app_generic_sync_status}

Next to each program or data set an icon will be displayed which allows the user to check sync information. Synced records will not show display any icon. Unsynced (grey arrows), error (red arrows), warning (orange) or SMS (blue and including the SMS word inside) icons are be displayed according to the status.

![](resources/images/capture-app-image67.png){ width=20%}
![](resources/images/capture-app-image69.png){ width=20%}
![](resources/images/capture-app-sync-status.png){ width=20%}

### Granular Sync { #capture_app_generic_sync_granular }

Users can click on the grey arrows (which means record(s) stored online in the device) to perform a sync. These options are available at top level (programs/dataset) or individually (TEI, events, datavalues).

![](resources/images/capture-app-image89.png){ width=25%}
![](resources/images/capture-app-image161.png){ width=25%}


### SMS Sync { #capture_app_generic_sync_sms }

When there is no Internet conection (either via WiFi or Mobile Data) but there is still mobile conectivity, users can synchronize via SMS if the gateway has been previously established in the app and properly configured at server level. 

If the app has been downloaded from Google Play users will have to send manually the SMS from their default SMS app (their default SMS application will open with the message composed). Users should send the message without modifying it and then switch back to the DHIS2 app to confirm that the message was sent.

![](resources/images/capture-app-sms-sync.png){ width=25%}
![](resources/images/capture-app-sms-sync-default-app.png){ width=25%}
![](resources/images/capture-app-sms-sync-confirm.png){ width=25%}

However, if the app has been downloaded from Github (or the training version is being used) the App will just ask for a confirmation to send one or several messages (SMS) and will send them in the background (without opening the default SMS application).

![](resources/images/capture-app-sms-sync-training.png){ width=25%}
![](resources/images/capture-app-sms-sync-confirm-training.png){ width=25%}
![](resources/images/capture-app-sms-synced-training.png){ width=25%}

> **Tip**
>
>  Edit parameters related to SMS gateway in the SMS Settings (Settings Menu) or set this globally via the [#capture_app_android_settings_webapp_general](Android Settings Web App)

![](resources/images/capture-app-image90.png){ width=25%}

> **Note**
>
>  Note that in order to user the SMS sync capabilities the SMS services needs to be enabled in the server side as described in the [https://docs.dhis2.org/master/en/dhis2_user_manual_en/mobile.html#sms-service](oficial documentation). You can also find more information on how to use different gateways in the [https://docs.dhis2.org/master/en/dhis2_android_implementation_guideline/about-this-guide.html](Android Implementation Guidelines)

### Meta data sync error { #capture_app_visual_sync_error }

In case of errors during the sync process, a message is displayed in the settings menu ('Sync data' or 'Sync configuration' section). Also, a red sync icon is displayed next to the program in the Home screen. The sync error log gives details about the error and is prepared to be shared with admins.

![](resources/images/capture-app-image43.jpg){ width=25%}
![](resources/images/capture-app-image11.png){ width=25%}

You can also open the sync errors log from **Settings**:

![](resources/images/capture-app-image15.jpg){ width=25%}

## Refresh data { #capture_app_generic_refresh_data }

Users can now retrieve the latest data from the server before entering new data. A refresh button is now located to trigger a granular synchronization in the following screens:

* Home
* Search
* TEI dashboard
* Event program listing
* Event details
* Data set listing
* Data set details

![](resources/images/capture-app-image19.png){ width=25%}
![](resources/images/capture-app-image191.png){ width=25%}
![](resources/images/capture-app-image192.png){ width=25%}
![](resources/images/capture-app-image193.png){ width=25%}

## Org unit { #capture_app_generic_orgunit }

![](resources/images/capture-app-image30.png){ width=25%}

The whole organisation unit tree is displayed. Organisation units not available for data entry will be colored in grey.
User must check the box to select the org unit wanted. After an organisation unit is selected, the parents will be marked in bold to show hint of the organisation unit selection when opening the hierarchy.

![](resources/images/capture-app-image194.png){ width=25%}

> **Caution**
>
>  Mobile users are not expected to access the org. unit hierarchy of a whole country. Maximum number of org units is difficult to set, as the App does not set the limit, but the resources on the device (memory, processor). We could say below 250 org units should be safe, but still believe that is a very big number for a mobile use case.


## Data Sets { #capture_app_generic_datasets }

The user can now enter aggregate data for an organisation Unit, a period and a set of data elements and send it to the server.

![](resources/images/capture-app-image87.png){ width=25%}
![](resources/images/capture-app-image93.png){ width=25%}
![](resources/images/capture-app-image92.png){ width=25%}


## Home (Improved 2.9) {#capture_app_home}

The home screen of the DHIS2 Android App shows the list of programs and data sets available for the user. The first thing the user does when collecting data in this case is to select the program or data set to work with.


![](resources/images/capture-app-image87.png){ width=25%}

> **Tip**
>
>  An easy way to differentiate them is by looking at the word at the bottom left corner. The word 'Event' will always be in event programs. In tracker will appear the name of the tracked entity type (person, patient, building, etc.). For data sets, the word 'DataSets' will be shown next to the number of records.

For those implementations where the users have access to only one program or dataset, the App will skip the home and will open directly the program or datasaset screen with the event, TEI or dataset list to reduce the number of clicks and streamline the process of data entry.

![](resources/images/capture-app-image245.png){ width=25%}
![](resources/images/capture-app-image247.png){ width=25%}

## Sharing Data { #capture_app_generic_shargin }

Users can share TEI via QR codes. This allows transferring/sharing information between devices without the need of transferring via the server (useful when connecitivity might be missing). To do this users should open any TEI and click on the *SHARE* button.

![](resources/images/capture-app-image72.png){ width=25%}
![](resources/images/capture-app-image73.png){ width=25%}


## Capture Coordinates { #capture_app_generic_capture_coord }

### TEI coordinates { #capture_app_generic_capture_coord_tei }

Capture the TEI coordinates in the registration form.  Enable this feature in the TET feature type.

![](resources/images/capture-app-image94.png){ width=25%}

### Polygons { #capture_app_generic_capture_coord_polygons }

The app now supports the geoJSON format and the user is able to capture polygons.

![](resources/images/capture-app-image95.png){ width=25%}


## Images { #capture_app_generic_images }

ValueType image can be used in Android to capture data and also, depending on the program configuration to be displayed in the TEI dashboard. When this value type the first data element/attribute marked as displayed in the program configuration it will be used as the TEI profile image.

![](resources/images/capture-app-image99.png){ width=25%}
![](resources/images/capture-app-image98.png){ width=25%}
![](resources/images/capture-app-image100.png){ width=25%}

Open the TEI profile image by clicking on it.

![](resources/images/capture-app-image138.png){ width=25%}


## Display events and TEIs in maps { #capture_app_generic_display_events }

When a program stage or tracked entity type have a feature type (and for programs with registration the option displayFrontPageList is enabled) the listings can be switched to display the information in a map. Make the switch by clicking on the map icon in the navigation panel.


![](resources/images/capture-app-image101.png){ width=25%}
![](resources/images/capture-app-image102.png){ width=25%}

If the TEI has a profile image, the map will display it.

![](resources/images/capture-app-image103.png){ width=25%}

## Personalized Calendar View { #capture_app_personalized_calendar }

In the DHIS2 Android Capture App users can switch date selection from spinner to calendar view. In this version, the app will remember the last visualization selected by the user and use it the next time the user needs to select a date.

![](resources/images/capture-app-image177.png){ width=25%}

## Reason for non-editable data { #capture_app_reason_non_editable }

Data can be blocked for many reasons in DHIS2, because of access restrictions or expiration among others. When an Event, TEI or Data Set are not editable the user will be able to find the reason on the "Details" section.

The following list contains all possible reasons:

* Event completion
* Enrollment completion
* Expired event
* Closed organization unit
* Organization unit out of capture scope
* No access to capture data in the program or data set
* No access to a category option in the program or data set

![](resources/images/capture-app-image178.png){ width=25%}
![](resources/images/capture-app-image179.png){ width=25%}

## Configuration troubleshooting { #capture_app_configuration_troubleshooting }

This feature is for administrators. The Android App incorporates an option in the settings screen for verifying some aspects of the DHIS2 configuration.

![](resources/images/capture-app-image188.png){ width=25%}
![](resources/images/capture-app-image195.png){ width=25%}

* **Language:** the user will be able to change the language of the application user interface to identify labels, buttons or prompts with errors or without translation.

![](resources/images/capture-app-image196.png){ width=25%}
![](resources/images/capture-app-image197.png){ width=25%}

* **Program rule validation:** this validator will check the program rules in the device and display configuration inconsistencies.

![](resources/images/capture-app-image198.png){ width=25%}
![](resources/images/capture-app-image199.png){ width=25%}

## Error Navigation { #capture_app_error_navigation }

The Android App has improved the navigation of sync errors on the user interface. The app will display the sync errors in a simple and clean manner allowing the user to navigate from the home screen to the exact field that is causing the error inside the event or data set.

![](resources/images/capture-app-image217.png){ width=25%}

User must tap on any of the errors listed and the app will move to the correspondent screen. Once the error is located and fixed, the user can synced by tapping on the "Refresh" button.

![](resources/images/capture-app-image218.png){ width=25%}
![](resources/images/capture-app-image219.png){ width=25%}
![](resources/images/capture-app-image220.png){ width=25%}

## LMIS Module { #capture_app_lmis_module }

The new module for real stock monitoring use case enables users to manage and monitor their stock levels in real-time. Integrating a module implies that the app will open a completely new and different user interface and experience to respond to a different data entry flow. To use this modules the program will need to be configured using the new web app for program use case configuration.

![](resources/images/capture-app-image221.png){ width=25%}
![](resources/images/capture-app-image222.png){ width=25%}
![](resources/images/capture-app-image223.png){ width=25%}


# Data sets { #capture_app_datsets }

### Data Entry {#capture_app_data_sets_data_entry}

While entering data the new text input dialog opens an input field above the keyboard which shows the Data Element name, and category options of the field being selected, ensuring the user does not lose context when navigating the tables.

![](resources/images/capture-app-image213.png){ width=25%}

![](resources/images/capture-app-image214.png){ width=25%}


### Navigation Bar { #capture_app_data_sets_navigation_bar }

Use the navigation bar located at the bottom of the data set to switch between the data entry form and the overview screen.

![](resources/images/capture-app-image139.png){ width=25%}

### Overview Screen { #capture_app_data_sets_overview_screen }

The new overview tab contains the following details:

- Data set name
- Last Update
- Open/Close Status
- الفترة
- Org Unit
- Category option combo
- Refresh button (To trigger a granular synchronization)

![](resources/images/capture-app-image122.png){ width=25%}

### Saving a data set { #capture_app_data_sets_saving }

Validation rules and completion of data sets are integrated in the save button actions:

- When a Data set is configured to *complete only if validation passess*. If the validation is successful, a dialog asking to mark as complete will show up. The App will allow completion only if all mandatory fields have value.

![](resources/images/capture-app-image131.png){ width=25%}

- if it is not successful, then an error dialog should show and the dataset will not be marked as complete. The description and instructions of the validation rule will be displayed to help the user identify the error.

![](resources/images/capture-app-image128.png){ width=25%}

- On a dataset that does not have setup "Complete allowed only if validation passes". When clicking on the save button; if the data set has validation rules associated to it, then the app will ask the user to run the validation rules.

![](resources/images/capture-app-image130.png){ width=25%}

- If the validation is not successful, an error dialog should show but with the possibility to complete the data set anyway. The description and instructions of the validation rule will be displayed to help the user identify the error.

![](resources/images/capture-app-image129.png){ width=25%}

- If the data set does not have validation rules, the data set will be marked as complete if all mandatory fields have value.

### Increase Row and column Headers { #capture_app_data_sets_row }

Users are now allowed to resize the row headers and columns in datasets, making it easier to view and work with larger tables.

To resize any column, tap on its header and then drag and drop until the desired size. A maximum and minimum size limit is given for the columns that can be resized to ensure a good layout.

If the column have multiple headers, the resizing will be available only for the child header (lowest level). Users can also resize all collumns at once by clicking on the top left of the table.

![](resources/images/capture-app-image215.png){ width=25%}

![](resources/images/capture-app-image216.png){ width=25%}

### Indicators { #capture_app_data_sets_indicators }

Indicators are now available in default and section forms and are displayed at the bottom of the data entry form.

![](resources/images/capture-app-image140.png){ width=25%}

### Cards design (improved 2.9) { #capture_app_datsets_cards_design }

The new design of cards offers a cleaner and more intuitive layout replacing the use of coloured icons by explicit text when relevan.

#### Main changes { #capture_app_datsets_cards_design_main_changes }

**Sync button:** It now appears as a button at the bottom of the card and it is only displayed if there are unsynced data or an error or warning after a sync.

**Completion status:** After the data set is completed, the app will add a label in each card to specify the completion status.

![](resources/images/capture-app-image237.png){ width=25%}

## Supported features overview { #capture_app_datsets_supported_features }


The following is a comprehensive list of all features available for Data Sets in DHIS2 and notes on whether or not these have been implemented in the Android Capture app.

In the notes, ‘admin’ refers to someone who develops and configures a DHIS2 system, and ‘user’ refers to someone who uses apps to capture data, update it, and review reports.

|Legend|Description|
|:--:|:------|
|![](/en/resources/images/admin/icon-complete.png)|Feature implemented|
|![](/en/resources/images/admin/icon-incomplete.png)|Feature not implemented&nbsp;(will be ignored)|
|![](/en/resources/images/admin/icon-na.png)|Not applicable|
|![](/en/resources/images/admin/icon-wip.png)|Work in progress. Feature not completely implemented yet or with unexpected behaviour already reported.|


|Feature|Description of feature|Status|Notes on implementation|
|-|---|:-:|---|
|Period type|Determines the period covered by data-entry.|![](/en/resources/images/admin/icon-complete.png) | |
|Expiry days|Sets the deadline (days after period) after which DHIS2 locks all data entry for the period (0 means no locks at all).  Periods can still be opened, but cells will be greyed out.| ![](/en/resources/images/admin/icon-complete.png) | |
|Open future periods for data entry|This setting can be used to unlock the current period or all periods up to a certain point in the future.|![](/en/resources/images/admin/icon-complete.png) | |
|Data input periods|Allows you to set a specific range of dates for a period's data-entry, and prevents data capture for periods outside of this date range.|![](/en/resources/images/admin/icon-complete.png) | |
|Days after period to qualify for timely submission|Sets the deadline (days after period) after which DHIS2 treats data entry as 'late'.| ![](/en/resources/images/admin/icon-complete.png)| |
|[Attribute] category combination|Allows an admin to attach a Category (set of Options) to the Data Set, generating a separate data entry screen for each Option (This is called an Attribute Category Combination in DHIS2).| ![](/en/resources/images/admin/icon-complete.png)| |
|[Attribute] Category Combination option restrictions|If Attribute Category Combinations (see above) are used, then this features gives admins the ability to restrict which specific options are available in the drop-down.  Each option can be restricted to a particular range of dates and/or organisation units, and that option will not be shown if data is being captured outside of these dates or org units.| ![](/en/resources/images/admin/icon-complete.png)||
|Complete notification recipients|Sends a DHIS2 message to the selected User Group when the Data Set is marked 'complete'.|![](/en/resources/images/admin/icon-incomplete.png)| |
|Send notification to completing user|Sends a DHIS2 message to the data-entry user when the Data Set is marked 'complete'.|![](/en/resources/images/admin/icon-incomplete.png)| |
|All fields for data elements required|Where one or more Categories are used to disaggregate a data element, this setting forces the user to either complete all disaggregations, or to leave them all empty.|![](/en/resources/images/admin/icon-complete.png) | |
|Complete only if validation passes|Only allows the Data Set to be marked complete if no Validation Rules are triggered.|![](/en/resources/images/admin/icon-complete.png)| |
|Skip offline|Requires the user to add a 'comment' if a value is left blank (or Data Set cannot be 'completed'). Only allows Data set to be selected for data entry while connected to the internet (although once selected, data entry can continue offline).|![](/en/resources/images/admin/icon-incomplete.png)| |
|Data element decoration|Shows the description of the Data Element when the mouse hovers over the Data Element Name.|![](/en/resources/images/admin/icon-complete.png) | |
|Section forms - render sections as tabs|Displays each section in the form as a separate tab, instead of all together on the same page.|![](/en/resources/images/admin/icon-incomplete.png)| |
|Section forms - render vertically||![](/en/resources/images/admin/icon-incomplete.png)| |
|Data Element - CatCombos|Enables an individual Data Element to be automatically disaggregated into one or more categories (eg both male/female and child/adult), with separate fields/values collected for each of these disaggregations.|![](/en/resources/images/admin/icon-complete.png)| |
|Inline indicators / section form totals|Enables the default CatCombo for each data element to be overridden with a different CatCombo for this Data Set only.|![](/en/resources/images/admin/icon-complete.png)| |
|Section forms - render sections as tabs|Adding indicators to Data Sets makes them available for use in section forms and custom forms; row and/or column totals can also be added to these forms.  (Both are displayed on the screen alongside data capture cells, and update automatically as values are captured.)|![](/en/resources/images/admin/icon-incomplete.png)| |
|Organisation unit assignment|Ensures the Data Set is only available for those organisation units to which it has been assigned.|![](/en/resources/images/admin/icon-complete.png) | |
|Compulsory data elements|This allows the marking of specific Data Elements/CatCombos as ‘compulsory’, which means users must enter a value (they cannot be left blank).| ![](/en/resources/images/admin/icon-complete.png)| |
|Forms - default forms|DHIS2 automatically renders the form as table(s), with a new table started every time the Category Combinations change (= different column headings).|![](/en/resources/images/admin/icon-complete.png) | |
|Forms - section forms|Form sections and section titles can be specified, giving you more control over the grouping and layout of the form (but it is still rendered automatically).  This section form automatically overrides the default form if implemented.|![](/en/resources/images/admin/icon-complete.png) | |
|Forms - custom forms|A custom HTML form can be designed, giving total control over layout, and enabling JavaScript code to be included within the form.  This custom form automatically overrides the default and section forms if implemented.|![](/en/resources/images/admin/icon-incomplete.png)| |
|Section forms - disable fields (grey)|With section forms, this enables you to individually 'grey out' fields (a whole data element, or specific CatCombo Options) so that users cannot enter data into it.|![](/en/resources/images/admin/icon-complete.png) | |
|Multi-organisation unit forms|When this server setting is enabled, form layouts are changed to show multiple org units as rows, and all data elements/CatCombos as columns (ie very flat and wide form per org unit).|![](/en/resources/images/admin/icon-incomplete.png)| |
|Data value pop-up: mark value for follow-up|Enables the user to mark this specific data value for follow-up (marked values can be reviewed in the Data Quality web app).|![](/en/resources/images/admin/icon-incomplete.png)| |
|Data value pop-up: add comment to value|Enables the user to add a comment to this specific data value.|![](/en/resources/images/admin/icon-incomplete.png)| |
|Data value pop-up: display data element history|Shows the history over time of this specific data element (i.e. previous 12 months' values).|![](/en/resources/images/admin/icon-incomplete.png)| |
|Data value pop-up: display audit trail|Shows a history of previous edits to this specific data value.|![](/en/resources/images/admin/icon-incomplete.png)| |
|Data value pop-up: min/max ranges (also accessible via Data Administration app)|This enables users to set minimum and maximum expected values for a data element, enabling DHIS2 to highlight values outside this range during data entry (but it does not prevent saving or 'completing').  You can set min/max ranges automatically/in-bulk (via the Data Administration app) or manually/individually (via the Data Entry app).|![](/en/resources/images/admin/icon-incomplete.png)| |
|Print form / print blank form|Enables printing of a data-entry form, to permit data capture on paper, and data-entry later.|![](/en/resources/images/admin/icon-incomplete.png)| |
|Save data|Data entered into the screen is not captured until 'saved' - until then, it is only held in memory, and is lost if power is switched off etc.|![](/en/resources/images/admin/icon-complete.png)| |
|Complete data set|This enables user to mark data-entry for a period/org unit/etc as 'complete'.  Note that this is just for data-entry tracking and timeliness purposes, and does not lock the data set or prevent further edits.|![](/en/resources/images/admin/icon-complete.png)| |
|Data elements: validation rules|Enables the creation of rules (at the data element level) to enforce data quality, based on comparing different values/collections of values.  (Eg number of patients seen in the month must be less than the number of visits for the month.)|![](/en/resources/images/admin/icon-complete.png)| |
|Data sharing levels/Can capture data|Enables the user to add new values, edit values and delete values in the dataset.|![](/en/resources/images/admin/icon-complete.png) | |
|Data sharing levels/Can view data|Enables the user to see values within the dataset.|![](/en/resources/images/admin/icon-complete.png) | |
|Data sharing levels/No access|The user won’t be able to see the dataset.|![](/en/resources/images/admin/icon-complete.png) | |
|Data approval workflow|If an admin selects a pre-configured Data Approval Workflow, this will be used to enforce an ‘approval’ or ‘acceptance and approval’ cascade, enabling users to sign-off and lock data.|![](/en/resources/images/admin/icon-complete.png) | The process of the approval has to be done in web. Once a data set is approved, the data will not longer be editable in the app. |
|Missing values requires comment on complete|Any missing values will require a comment to justify their absence.|-||



# Programs { #capture_app_programs }

## Event and Tracker common features { #capture_app_common_features }

### Navigation Bar { #navigation-bar } 

Use the bottom navigation bar to move from one screen to another.

#### Event Dashboard { #event-dashboard } 

While entering information of the event, the bottom navigation bar allows the user to choose among:

1. Details
2. Data Entry
3. Analytics (when available)
4. Notes

![](resources/images/capture-app-image141.jpg){ width=25%}

#### TEI Dashboard { #tei-dashboard } 

While in the TEI dashboard the bottom navigation bar allows the user to choose among:

1. Details
2. Analytics (when available)
3. Relationships
4. Notes

![](resources/images/capture-app-image142.jpg){ width=25%}

#### Event listing for event and tracker programs { #event-listing-for-event-and-tracker-programs } 

The bottom navigation bar also allows switching the visualization mode if the event program or the tracker program have been defined with coordinates. More information about the map view can be found on the specific section below.

  1. List view
  2. Map view

![](resources/images/capture-app-image143.jpg){ width=25%}
![](resources/images/capture-app-image144.jpg){ width=25%}

### Data Entry Flow { #capture_app_common_features_Data_flow }

#### Complete/Re-open event { #capture_app_common_features_complete_reopen }

When adding an event to an event program or inside a tracker program the user should fill the information and scroll down to make the *save* icon appear at the bottom right corner.

![](resources/images/capture-app-image37.jpg){ width=25%}
![](resources/images/capture-app-image74.png){ width=25%}

After tapping on the 'save' button, if the form does not contain any errors, warnings or empty mandatory fields, the app will ask if the user wants to complete the form. Two options are given to the user:

1. 'Not now': The app saves the form and go back to the event listing screen (or TEI dashboard for tracker programs). The status of the event will remain open.
2. 'Complete': The app saves the form and go back to the event listing. The status of the event changes to completed.

![](resources/images/capture-app-image201.png){ width=25%}

> **Note**
>
> To verify if an event is completed look at the icon, it must be a green checked box.
>

> **Note**
>
> If the event is non-editable, the app will hide the 'save' button
>

To re-open an event, the app now displays a "Re-open form" button in the Details screen. This button will be available only if the user has the correct authority (‘Uncomplete events’) to reopen a completed event.

![](resources/images/capture-app-image202.png){ width=25%}

#### Discard changes { #capture_app_programs_common_features_discard_changes }

Tapping the back arrow in an enrollment or event form now provide two options:

1. 'Discard changes',  which allows the user to restored the fields to their previous values or,
2. 'Review' to remain in the form and update the fields.

If the user is in a new enrollment or event, the options allow the user to:

1. 'Discard changes': The enrollment or event is not created or,
2. 'Keep editing': Allowing the user to finish the enrollment or event.

![](resources/images/capture-app-image203.png){ width=25%}

#### Field completion percentage { #capture_app_programs_common_features_field_percentage }

The percentage of data completed in each event is shown in the top right corner of an event when it is opened after first registration.

![](resources/images/capture-app-image80.png){ width=25%}

> **Note**
>
> The display of the percentage can be set up to be displayed or not using the [#capture_app_android_settings_webapp_appearance_program](Android Settings WebApp)

#### Sections Navigation { #capture_app_programs_common_features_sections_nav }

The sections can be collapsed for a simpler user experience.  Sections in enrollment forms are also supported and are aligned with the design of the event sections.

![](resources/images/capture-app-image115.png){ width=25%}
![](resources/images/capture-app-image116.png){ width=25%}

#### Error messages { #capture_app_programs_common_features_errors }

The app will list the name of the mandatory fields missing when the user tries to complete an event or enrollment. The sections containing the missing fields will be highlighted to help the user find the missing fields.

![](resources/images/capture-app-image117.png){ width=25%}

After tapping on the 'save' button, the app will display two options:

1. 'Not now': Allowing the user to save the form with an 'open' status or,
2. 'Review': The app will remain in the form for the user to fill the empty mandatory fields.

The errors and warnings are also shown as an indicator next to the section name including the number of errors for each section. A list of the fields with the errors/warnings when the user tries to save the form will be displayed.

![](resources/images/capture-app-image145.png){ width=25%}

After tapping on the 'save' button, the app will display two options:

**Warnings**

1. 'Not now': Allowing the user to save the form with an 'open' status or,
2. 'Complete': The form is saved and its status changes to 'complete'

**Errorrs**

1. 'Not now': Allowing the user to save the form with an 'open' status or,
2. 'Review': The app will remain in the form for the user to review the fields with errors

If there is a combinantion of errors, warnings and missing mandatory fields, the app will display the 'Not now' and 'Review' options only.


### Event Notes { #capture_app_programs_common_features_event_notes }

It is possible to add notes to events in single event programs and program stage events. Notes are available in a new tab at the data entry form.

![](resources/images/capture-app-image106.png){ width=25%}
![](resources/images/capture-app-image107.jpg){ width=25%}

### Maps { #capture_app_programs_common_features_maps }

#### Map Layers { #map-layers } 

When displaying maps there are different layers that can be displayed by clicking on the specific button on the uppper right corner. The user can select one or more layers to be displayed. Both coordinate and polygons types will be displayed. The layers are depenandat on the type of program as explained below:

- Show events (For programs without registration)
- Satellite view
- TEI coordinates (By default in programs with registration)
- Enrollment Coordinates (Only for programs with registration)
- Program Stage coordinates (Only for programs with registration)
- Relationships (Only for programs with registration)
- Heatmap (Only for programs with registration)
- Tracked Entity Attributes (Coordinates Value Type - Only for programs with registration)
- Data Elements (Coordinates Value Type)

![](resources/images/capture-app-image125.png){ width=25%}
![](resources/images/capture-app-image136.png){ width=25%}

#### Map Carousel { #capture_app_programs_common_features_map_carousel }

On the map view of the program, a carousel of cards is displayed, one for each enrolled TEI (Tracker programs) or Event (Event programs).

* TEI cards on the carousel follow the same design as the TEI list view.
* When scrolling horizontally the carousel, the map zooms into the selected coordinates. If coordinates field is empty a message is shown instead.

![](resources/images/capture-app-image126.png){ width=25%} 
![](resources/images/capture-app-image133.png){ width=25%}

Each card displays Tracked Entity Attributes (for Tracker Programs) and Data Elements (for Event programs) configured as 'Display in list'.

![](resources/images/capture-app-image147.png){ width=25%}

#### Current Location displayed in maps { #current-location-displayed-in-maps } 

If the user has granted location permissions to the App, the map will show the current location represented as a blue color dot. The maps in the DHIS2 Android Capture App include the possibility to center the map on the user location.

![](resources/images/capture-app-image148.png){ width=25%}

#### Navigation to Specific Location { #navigation-to-specific-location } 

If the TEI or event has coordinates a navigation icon will be displayed at the top right of the card. Click to open the location in the default maps app configured in the device.

![](resources/images/capture-app-image149.png){ width=25%}
![](resources/images/capture-app-image150.png){ width=25%}
![](resources/images/capture-app-image151.jpg){ width=25%}

### Working Lists (Improved 2.9) { #capture_app_programs_common_features_working_lists }

Working lists are available in Event and Tracker Programs, once a list is selected the filters will be blocked and not allowed to change until the user resets the search.

The Android App supports the new tracker working lists, allowing users to filter by data elements. The working lists need to be configured in web using the web Capture App. The Android app will download the working lists that are configured and saved on the server side.

In 2.9, the working lists have been moved from the filters section to the main program screen. In earlier versions the user had to open the filters to be able to see and select a working list, from this version the working lists are always visible under the search bar facilitating its selection for filtering out Tracked Entity Instances

![](resources/images/capture-app-image251.png){ width=25%}

### Program Indicators { #program-indicators } 

The analytics tab supports displaying text and key/value pair in feedback or indicator section.

![](resources/images/capture-app-image154.png){ width=25%}

### Legends { #legends } 

Legends can be assigned to Data Elements and they will be displayed next to value with the respective color and label.

![](resources/images/capture-app-image155.png){ width=25%}

### Data Entry Form (Improved 2.9) { #capture_app_programs_common_features_data_entry_form }

#### Hint messages { #hint-messages } 

The input fields will display had a hint message saying "Insert value here" which will remain until a value is entered by the user.

![](resources/images/capture-app-image209.png){ width=25%}

#### Navigation button { #navigation-button } 

In forms with multiple sections, the App includes a "Next" button at the end of each section which calls the user to action. The funtion of the button is to close the current section and open the new one.

![](resources/images/capture-app-image210.png){ width=25%}

#### Program Stage section description (New 2.9) { #capture_app_programs_common_features_data_entry_form_program_stage_description }

To provide more context and information at the moment of data collection the description has now been brought to the user interface and will be displayed below the section name. The description will always be visible but if the text is too long (more than 3 lines) the app will add an ellipsis and a show more/less button to expand or collapse.

![](resources/images/capture-app-image243.png){ width=25%}
![](resources/images/capture-app-image244.png){ width=25%}

#### Enable/disable collapsible sections in forms (New 2.9) { #capture_app_programs_common_features_data_entry_form_collapsible_sections }

Stage sections in the Android App are displayed with collapsible menus that enable the user to open one section at a time. The purpose of this accordion-like implemementation is to help the user navigate very long forms, however some implementations would prefer to list the sections one after the other. 

This new version of the application enables the admin use to decide if the sections should appear in extended mode. This configuration is made through the [Android Settings Web App](https://docs.dhis2.org/en/use/android-app/settings-configuration.html#capture_app_android_settings_webapp_appearance_program_specific) and will display the sections one after the other with the name the secion acting as a separator. In extended mode, the "next" button at the end of each section is removed.

![](resources/images/capture-app-image241.png){ width=25%}

#### New inputs per value types (New 2.9) { #capture_app_programs_common_features_data_entry_form_new_inputs }

The inputs for all value types have been redesigned. Tappable areas and texts have been increased and selection modes are improved to offer cleaner and more intuitive user experience. By default the Android App will display the current forms. Admin users are able to opt-in to use the new forms through the [Android Settings WebApp]().

![](resources/images/capture-app-image238.png){ width=25%}
![](resources/images/capture-app-image239.png){ width=25%}
![](resources/images/capture-app-image240.png){ width=25%}

### Actionable Icons  { #capture_app_programs_common_features_actionable_icons }

This feature enables users to take action on phone numbers and email addresses directly from the app.  When tapping on the icons, the app will dial a phone number or open an email app copying the address from the event or enrollment data entry form.

![](resources/images/capture-app-image230.png){ width=25%}

## Event Programs specific features { #capture_app_programs_events }

### Event - TEI relationships { #event-tei-relationships } 

The app allows adding relationships from single events (in event programs) to TEIs. There is a new tab in the event screen, named relationships, that will be displayed only when this type of relationships are configured in the server for the specific program.

> **Note**
>
> The current version does not allow TEIs to event relationships, or using events that belong to an enrollment.

![](resources/images/capture-app-image175.png){ width=25%}

### Cards design (improved 2.9) { #capture_app_programs_common_features_cards_design }

The new design of cards offers a cleaner and more intuitive layout replacing the use of coloured icons by explicit text when relevant.

#### Main changes { #main-changes } 

**Sync button:** It now appears as a button at the bottom of the card and it is only displayed if there are unsynced data or an error or warning after a sync.

**Event status:** After an event program is completed, the app will add a label in each card to specify the status.

![](resources/images/capture-app-image236.png){ width=25%}

## Tracker Programs (program with registration) specific features { #capture_app_programs_tracker }

### Relationships in maps { #capture_app_programs_map_relationships }

In tracker programs, the user can see relationships on a map by tapping the map icon on the relationships tab.

* An arrow is shown on the direction of the relationship.
* For bidirectional relationships, the arrow points both sides.
* Each relationship type displays a different color.
* If one or both TEIs have a polygon as coordinate, the line goes from (and to) the nearest point in the polygon of both TEIs.

![](resources/images/capture-app-image132.png){ width=50%}

### TEI Dashboard (Improved 2.9) { #capture_app_programs_TEI_Dashboard }

The TEI Dashboard has been redesigned for both portrait and landscape view. The new design offers a cleaner and more intuitive layout replacing the use of coloured icons by explicit text when relevant and moving some secondar actions to the hidden menus.

#### Dashboard card { #dashboard-card } 

Main changes in 2.9:

**Edit registration form:** In previous versions, there was a button "Open TET details" at the bottom of the TEI dashboard card. Now, the button is located at the top bar of the screen with the label "Edit TET" (For example: Edit Patient)

**Follow-up:** In previous versions, there was an icon at the top right corner of the card to mark the TEI. Now, to mark for follow up, the user needs to tap the three dot menu and select the "Mark for follow-up" option.

**Card title** In previous versions, the title included the values of the first 3 tracked entity attributes marked as Display in List. Now, the tile of the card can bdisplay the first Tracked Entity Attribute marked as Display in list OR a customize text, called TEI header, using program indicators and the Android Settings web App.

More information [here](https://docs.dhis2.org/en/use/android-app/program-features.html#capture_app_programs_tei_header) on how to configure the TEI header.

**Tracked Entity Attributes:** From 2.9, the complete list of tracked entity attributes marked as Display in List will be display in the dashboard card. The first three will always be visible and if there are more, a show "more" button will appear to expand the list.

**Programs:** From 2.9, if the TEI is enrolled to more than one program, a list of the programs will be display and will also allow the user to tap on the label and navigate to full list of enrollments.

![](resources/images/capture-app-image248.png){ width=50%}

#### Navigation panel { #navigation-panel } 

To simplify and personalize the user experience, the user interface actions offered to the user at the TEI dashboard will be tailored to the specific configuration of each  program.

* Relationships tab will not be visible if the program relationships are not configured
* "Create event" button will be hidden when the user cannot create more events based on tracker configuration.
* The Indicator tab will not be visible if the program has no program indicators configured.
* Organisation Unit filter will not be visible if the user has only one Organisation Unit configured.

#### Creating A Stage { #creating-a-stage } 

To create a new event, the user needs to tap on the plus icon on the stage card. This icon is always visible unless the stage is non-repeatable and already created.

When the user taps on the button, that program stage will unfold showing to the user all the already existing events of that particular program stage

![](resources/images/capture-app-image211.png){ width=50%}

If the user is creating a new stage and there is only one option based on the program configuration, the available program stage is selected automatically and program stage selection step is skipped.

#### Share a TEI  { #share-a-tei } 

The "Share" button has been removed from the TEI dashboard and the functionality to share a TEI through QR code has been relocated on the three vertical dot menu, at the top right corner of the screen.

![](resources/images/capture-app-image212.png){ width=50%}

### TEI Card Design (Improved 2.9) { #capture_app_programs_tei_design }

The TEI Card has been designed to display as much information as possible considering the constrains of screen size.

From 2.9 the card has been redesigned to offer a cleaner and more intuitive layout replacing the use of coloured icons by explicit text when relevant.

The main changes are:

**Card title** The tile of the card can be composed by the first Tracked Entity Attribute marked as Display in list or a customize text, called TEI header, using program indicators and the Android Settings web App. More information [here](https://docs.dhis2.org/en/use/android-app/program-features.html#capture_app_programs_tei_header) on how to configure the TEI header.

**Sync button:** It now appears as a button at the bottom of the card and it is only displayed if there are unsynced data or an error or warning after a sync.

**Enrollment status:** After a program is completed or cancelled, the app will add a label in each card to specify the status.

**Overdue events:** Is now displayed as a red label with the text: "Overdue" + date of the event

**Follow-up:** After a TEI is marked for follow-up, an orange label with the text "Marked for follow-up" is added to the card

![](resources/images/capture-app-image247.png){ width=50%}

### Complete/Deactivate Enrollment { #capture_app_programs_complete_deactivate_enrollment }

To complete or deactivate an enrollment, click on three dot menu in the uppper right corner and select "Complete" or "Deactivate".

![](resources/images/capture-app-image76.jpg){ width=25%}

### Search Flow { #capture_app_programs_search }

#### Configurable TEI Search { #capture_app_programs_configurable_search }

Searching TEIs before creating is not mandatory now. Using the Android Settings App (v2.2.0) it is possible to configure the mandatoriness of the TEI search before creating an enrollment. Follow the steps below to enable the creation of TEIs without searching:

  1. Open the Appearance menu in the Android Settings App
  2. In 'Program' add a Program Setting
  3. Select a tracker program
  4. Tick the "Allow the user to create a TEI without searching" checkbox
  5. Save

If the feature is enabled, the Android App will display a "create new" button after opening a program and a search won't be required. If the feature is not enabled or the user is in a previous version of the app, a search must be performed to avoid possible duplicates. Once the search is performed the search button will become "Add" button for the user to create a new enrollment.

![](resources/images/capture-app-image204.png){ width=25%}

#### Offline and Online Search { #capture_app_programs_offline_online_search }

To improve the response time in the search results, the Android App now searches offline first and displays the results while making an online search as a second step, transparent to the user.

Searching outside the program is offered as a second step when  the attributes used in the search contain at least one Tracked Entity Type (TET) attribute

#### Reset Search Fields { #capture_app_programs_reset_search }

The search fields are used to look up for a specific entity, and the circled arrow to reset the search. All fields will be blank for the user to do a new search.

![](resources/images/capture-app-image79.png){ width=25%}

#### Search screen for all Tracked Entity Type { #capture_app_programs_search_screen }

User can search across all programs by specific tracked entity type (TET). In the Search screen there is a drop down which shows all the programs available for the active TET (active TET is defined by the selection of the program in the home screen). That drop down should also have an option with TET name, for example: *All Person*.

When the user selects that option, the search fields available will only be the TET attributes (no program specific attributes). Search restrictions do not apply, because they belong to the programs.

![](resources/images/capture-app-image44.png){ width=25%}
![](resources/images/capture-app-image22.png){ width=25%}

The search will return the found TEI's in the local database and also those in the Search OU of the user (when user is online). For those found online, the user will have to select them and the whole record will be downloaded.

> **Note**
>
>  When configuring search org. units, make sure that your capture org. units are contained in your search org. units, to do that capture org. units have to be selected as well as search org. units.


### TEI Dashboard across programs { #capture_app_programs_tei_dashboard }

User can see the TEI dashboard without any program by selecting the TEI in the list if the search was without program.

The dashboards will show the list of active enrollments.

![](resources/images/capture-app-image22.png){ width=25%}
![](resources/images/capture-app-image38.png){ width=25%}

### TEI enrollment history and new enrollment { #capture_app_programs_tei_history }

User can see the complete historical records of the TEI. Clicking on the upper right corner menu, select "Program Enrollments". A list of "Active enrollments" will be displayed, followed by a list of "Past enrollments" (completed or cancelled), followed by the programs in which the TEI could be enrolled.  User can also return to the "TEI Dashboard" without any program' by selecting "All enrollments".

![](resources/images/capture-app-image40.jpg){ width=25%}
![](resources/images/capture-app-image7.png){ width=25%}

### Delete TEI's & Enrollments { #capture_app_programs_delete_tei }

To delete a TEI or an enrollment, select the desired option in the three dots menu of TEI dashboard.  Local TEI or Enrollment will be deleted from the database. Records that has been previously synced with the server will be marked for deletion if the user has the following authorities:

* F_ENROLLMENT_CASCADE_DELETE
* F_TEI_CASCADE_DELETE

In this case they will be shown in the TEI search list, but will not be accessible.

![](resources/images/capture-app-image86.jpg){ width=25%}

> **Warning**
>
> When users enter a TEI and while it is not synced to the server they will be able to delete the TEI and the enrollment even if they have not been asigned these authorities. This is by design and to allow users rolling back in case of having entered wrong data (TEI and/or enrollment) and thus preventing it reaching the server and requiring another user with higher privileges to fix the issue.

### Group view of Program stages in TEI Dashboard { #capture_app_programs_group_view }

The TEI Dashboard offers the possibility to change the list of events from the chronological view to a stage grouping view. The stage grouping view will group and collapse the events per program stage. Each program stage group can be expanded by the user and the events will be displayed chronologically.

![](resources/images/capture-app-image108.png){ width=25%}
![](resources/images/capture-app-image109.jpg){ width=25%}

### Inherit Values { #capture_app_programs_inherit_values }

When creating a new TEI for a relationship, inherit any program attribute marked with the inherit check in web.

This means that any existing attributes in the first TEI should have pass to the new TEI and be shown in the registration form.

### Breaking the glass { #capture_app_programs_breaking_the_glass }

The "breaking the glass" feature is now supported in DHIS2 Android Capture App. If the program is configured with an access level of "Protected" and a search is done outside the user scope, a dialog requesting a reason for access will be displayed for the user to temporarily override the ownership privilege of the proram. This means, the user will gain access to the program related data.

After the reason is written, the app will download the TEI and the dashboard will open. If the TEI being downloaded doesn't have an enrollment in the current program, an enrollment date and organisation unit will be asked.

![](resources/images/capture-app-image205.png){ width=25%}
![](resources/images/capture-app-image206.png){ width=25%}

### Analytic charts { #analytic-charts } 

It is possible to display the evolution in data elements as charts, values or tables. These data elements must be a numeric value type and configured in a repeatable stage.

1. Single value: It will display the newest value in the program.

![](resources/images/capture-app-image156.png){ width=25%}

2. Charts: It is possible to display the values as a line chart o as a bar chart.

![](resources/images/capture-app-image157.png){ width=25%}

The Nutrition Growth charts are shown according to the WHO standards.  This option will render a background image and apply the axis (0 to 5 monthly)according to the WHO model.

 ![](resources/images/capture-app-image159.png){ width=25%}

3. Tables: It will display the data elements or indicators in the rows and the periods in the columns.

![](resources/images/capture-app-image160.png){ width=25%}

### Referrals (Improved 2.9) { #capture_app_programs_referrals }

when a user makes a permanent referral of a TEI, the ownership will be updated accordingly on the server.

From 2.9, admin users can now enable or disable the referrals in the DHIS2 Android Capture App through the [Android Settings WebApp](https://docs.dhis2.org/en/use/android-app/settings-configuration.html#capture_app_android_settings_webapp_appearance_program).

When users add events (tapping on the + icon) in a tracker program, the DHIS2 Android Capture App offers three options: Add (for new events), Schedule (for planning future events) and Refer (for referrals or transfers). IF the referral option is not needed, then the admin user can remove the option from the menu to simplify the user experience. The removal can be general (for all the programs) or for specific programs.

![](resources/images/capture-app-image233.png){ width=50%}

### [EXPERIMENTAL] TEI Header (new 2.9) { #capture_app_programs_tei_header }

The TEI Header is a title that can be added to the TEI cards and dashboards in the app. The title helps identify a TEI by displaying a summary of key information. It is formed by a concatenation of Tracked Entity Atributes and fixed text. The title is configured through a Program Indicator in the maintenance app and its assigned to the tracker program in the Android settings webapp. This feature is experimentan and depending on feedback and adoption it will be refined and incorporated in the Web Capture app.

> **Attention**
>
>  In the Maintenace app, text expressions aren't valid. Even though the error is display in the dialog, save the program indicator and assign it in the Android Settings Web App, the DHIS2 Android capture app will read the expression accordingly.

For more information on how to configure the TEI header, click [here.](https://docs.dhis2.org/en/use/android-app/settings-configuration.html#capture_app_android_settings_webapp_appearance_program)

![](resources/images/capture-app-image249.png){ width=50%}
![](resources/images/capture-app-image250.png){ width=50%}

## Supported features Overview { #capture_app_programs_supported_features }

The following is a comprehensive list of all features available for Programs with and without registration in DHIS2, and notes on whether or not these have been implemented in the Android Capture app.

In the notes, ‘admin’ refers to someone who develops and configures a DHIS2 system, and ‘user’ refers to someone who uses apps to capture data, update it, and review reports.

|Legend|Description|
|:--:|:------|
|![](/en/resources/images/admin/icon-complete.png)|Feature implemented|
|![](/en/resources/images/admin/icon-incomplete.png)|Feature not implemented (will be ignored)|
|![](/en/resources/images/admin/icon-na.png)|Not applicable|
|![](/en/resources/images/admin/icon-wip.png)|Work in progress. Feature not completely implemented yet or with unexpected behaviour already reported.|

### Program { #capture_app_programs_supported_features_program }

|Feature|Description of feature|Program with registration|Program without registration|Notes on implementation|
|-|---|:-:|:-:|---|
|Data entry method for option sets|Enables an admin to choose how options will be displayed on-screen across the entire program (ie either as drop-down lists or as radio buttons)|![](/en/resources/images/admin/icon-incomplete.png)|![](/en/resources/images/admin/icon-incomplete.png)|This will be replaced by the new rendering options.|
|Combination of categories (Attribute CatCombo)|Allows an admin to attach a Category (set of Options) to the Program, requiring users to categorize each enrolment. (This is called an Attribute Category Combination in DHIS 2.)|![](/en/resources/images/admin/icon-complete.png)|![](/en/resources/images/admin/icon-complete.png)||
|Data approval workflow|If an admin selects a pre-configured Data Approval Workflow, this will be used to enforce an "approval" or "acceptance and approval" cascade, enabling users to sign-off and lock data.|![](/en/resources/images/admin/icon-incomplete.png)|![](/en/resources/images/admin/icon-incomplete.png)||
|Display front page list|If this option is ticked, the landing page displays a list of active enrolments once an Org Unit and Program have been chosen. (Attributes shown are those ticked as "display in list".)|![](/en/resources/images/admin/icon-complete.png)|![](/en/resources/images/admin/icon-na.png)||
|First stage appears on registration page|When this option is chosen, then during Program enrolment, the screen for the first Program Stage is also shown (enrolment and the first event are captured together on one screen).|![](/en/resources/images/admin/icon-complete.png)|![](/en/resources/images/admin/icon-na.png)| In Android, this is implemented by opening automatically the event after enrollment is completed, instead of adding the form to the same screen.|
|Completed events expiry days|Enables admins to lock data-entry a certain number of days after an event has been completed.|![](/en/resources/images/admin/icon-complete.png)|![](/en/resources/images/admin/icon-complete.png)||
|Expiry period type + expiry days|Enables admins to set a period (eg weekly, monthly), and to lock data-entry a certain number of days after the end of the period.|![](/en/resources/images/admin/icon-complete.png)|![](/en/resources/images/admin/icon-complete.png)||
|Allow future enrolment dates|If ticked, this enables a user to enter future Enrolment dates during enrolment in a Program; otherwise users are restricted to today or past dates.|![](/en/resources/images/admin/icon-complete.png)|![](/en/resources/images/admin/icon-na.png)||
|Allow future incident dates|If ticked, this enables a user to enter future Incident dates during enrolment in a Program; otherwise users are restricted to today or past dates.|![](/en/resources/images/admin/icon-complete.png)|![](/en/resources/images/admin/icon-na.png)||
|Only enrol once (per tracked entity instance lifetime)|If ticked, prevents a TEI (eg person) from being enrolled in this Program more than once.|![](/en/resources/images/admin/icon-complete.png)|![](/en/resources/images/admin/icon-na.png)||
|Show incident date|If ticked, both Enrolment and Incident dates are shown to the user for data capture; otherwise, only the Enrolment date is shown/captured.|![](/en/resources/images/admin/icon-complete.png)|![](/en/resources/images/admin/icon-na.png)||
|Description of incident date|Allows an admin to customize the label that is used for the incident date.|![](/en/resources/images/admin/icon-complete.png)|![](/en/resources/images/admin/icon-na.png)||
|Description of enrolment date|Allows an admin to customize the label that is used for the enrollment date.|![](/en/resources/images/admin/icon-complete.png)|![](/en/resources/images/admin/icon-na.png)||
|Capture coordinates (enrolment)|Enables users to capture geographical coordinates during enrolment in the program.|![](/en/resources/images/admin/icon-complete.png)|![](/en/resources/images/admin/icon-na.png)||
|Capture Polygon (enrolment) |Enables users to capture locations (enclosed areas) during enrolment in the program.|![](/en/resources/images/admin/icon-complete.png)|![](/en/resources/images/admin/icon-na.png)||
|TEI Coordinates |Enables users to capture geographical coordinates for the TEI during the enrolment in the program.|![](/en/resources/images/admin/icon-complete.png)|![](/en/resources/images/admin/icon-na.png)||
|Relationships: create and update|Enables users to create and update relationships.|![](/en/resources/images/admin/icon-complete.png)|![](/en/resources/images/admin/icon-na.png)||
|Relationships - shortcut link to add a relative|This enables admins to add a link for one specific relationship to the Dashboard, enabling users to directly create a linked TEI (eg "child" patient).|![](/en/resources/images/admin/icon-incomplete.png)|![](/en/resources/images/admin/icon-na.png)||
|Attributes: display in list|This setting determines whether an Attribute can be viewed in lists such as search results, and whether it can be seen in the shortlist of Attributes shown under "Profile" in the Dashboard.|![](/en/resources/images/admin/icon-complete.png)|![](/en/resources/images/admin/icon-na.png)|The first three attributes will be shown|
|Attributes: mandatory|This enables an admin to mark an Attribute as "mandatory";, meaning the enrolment can"t be saved until a value is captured.|![](/en/resources/images/admin/icon-complete.png)|![](/en/resources/images/admin/icon-na.png)||
|Attributes:  date in future|For date Attributes, this enables an admin to either prevent or allow future dates to be captured.|![](/en/resources/images/admin/icon-complete.png)|![](/en/resources/images/admin/icon-na.png)||
|Registration form - default|The default data entry form simply lists all attributes defined for the TEI.|![](/en/resources/images/admin/icon-complete.png)|![](/en/resources/images/admin/icon-na.png)||
|Registration form - custom|This enables an admin to define a custom layout (using HTML) for the registration form.|-|![](/en/resources/images/admin/icon-na.png)|Custom layouts are not supported in the Android App||
|Program notifications|You can set up automated notifications for when program enrolments or completions occur, or at a set interval before/after incident or enrolment dates. These can be sent as internal DHIS 2 messages, emails or SMSs.|![](/en/resources/images/admin/icon-complete.png)|![](/en/resources/images/admin/icon-complete.png)|This functionality is executed on the server side, once data is received. Will not work when the app is working offline.|
|Activate/deactivate enrolment|Deactivating a TEI dashboard will cause the TEI to become &ldquo;read-only&rdquo;. This means you cannot enter data, enrol the TEI or edit the TEI profile.|![](/en/resources/images/admin/icon-complete.png)|![](/en/resources/images/admin/icon-na.png)||
|Complete allowed only if validation passes|Select check box to enforce that an event created by this program is only completed when all validation rules have passed.|![](/en/resources/images/admin/icon-incomplete.png)|![](/en/resources/images/admin/icon-incomplete.png)||
|Org unit opening/closing dates|Enables an admin to set opening and closing dates for an Org Unit, which blocks users from adding or editing events outside of these dates.|![](/en/resources/images/admin/icon-complete.png)|![](/en/resources/images/admin/icon-complete.png)||
|Data sharing levels/Can capture data|Enables the user to add new event, edit data and delete events in the program.|![](/en/resources/images/admin/icon-complete.png)|![](/en/resources/images/admin/icon-complete.png)||
|Data sharing levels/Can view data|Enables the user to see list of events within the program.|![](/en/resources/images/admin/icon-complete.png)|![](/en/resources/images/admin/icon-complete.png)||
|Data sharing levels/No access|The user will not be able to see the program|![](/en/resources/images/admin/icon-complete.png)|![](/en/resources/images/admin/icon-complete.png)||


### Program stage { #capture_app_programs_supported_features_program_stage }

|Feature|Description of feature|Program with registration|Program without registration|Notes on implementation|
|-|---|:-:|:-:|---|
|Event form - default|The default data entry form simply lists all attributes belonging to a program registration|![](/en/resources/images/admin/icon-complete.png)|![](/en/resources/images/admin/icon-complete.png)||
|Event form - section forms|Sections forms allow you to split existing forms into segments|![](/en/resources/images/admin/icon-complete.png)|![](/en/resources/images/admin/icon-complete.png)||
|Event form - custom|Define a custom event form as a HTML page.|![](/en/resources/images/admin/icon-incomplete.png)|![](/en/resources/images/admin/icon-incomplete.png)|Custom layouts are not supported in the Android App.|
|Program stage notifications|You can set up automated notifications for when the program stage is completed, or at a set interval before/after scheduled event dates. These can be sent as internal DHIS 2 messages, emails or SMS messages.|![](/en/resources/images/admin/icon-complete.png)|![](/en/resources/images/admin/icon-na.png)|This functionality is executed on the server side, once data is received. Will not work when the app is working offline.|
|Repeatable|If Repeatable Is ticked, this stage can be repeated during one program enrollment. If t is not, then the stage can only happen once during a program enrollment.|![](/en/resources/images/admin/icon-complete.png)|![](/en/resources/images/admin/icon-na.png)||
|Repeatable|If Repeatable Is ticked, this stage can be repeated during one program enrollment. If t is not, then the stage can only happen once during a program enrollment.|![](/en/resources/images/admin/icon-complete.png)|![](/en/resources/images/admin/icon-na.png)||
|Repeatable + Standard interval days|The system will suggest the due date as the calculation of the last event + standard interval dates.|![](/en/resources/images/admin/icon-complete.png)|![](/en/resources/images/admin/icon-na.png)||
|Period type|Enables an admin to configure a set of periods (e.g. weeks or months) for each event in the program stage, instead of just a date. When creating events, users are then asked to choose a period (instead of a date) for each new event they create within that program stage.|![](/en/resources/images/admin/icon-complete.png)|![](/en/resources/images/admin/icon-na.png)||
|Auto-generate event|If ticked, a "booking" is generated for this Program Stage upon enrolment, based on the "Scheduled days from start".|![](/en/resources/images/admin/icon-complete.png)|![](/en/resources/images/admin/icon-na.png)||
|Generate events based on enrolment date (not incident date)|Check on it for auto-generating due dates of events from program-stages of this program based on the enrollment date. If it is not checked, the due dates are generated based on incident date.|![](/en/resources/images/admin/icon-complete.png)|![](/en/resources/images/admin/icon-na.png)||
|Open data entry form after enrolment + report date to use|If selected, once an enrolment is complete, an event's data entry form should open directly afterwards.|![](/en/resources/images/admin/icon-complete.png)|![](/en/resources/images/admin/icon-na.png)||
|Ask user to complete program when stage is complete| If selected, upon completing the program stage the user should be asked to complete the program. (This setting is ignored if "Ask user to create new event" is also ticked.)|![](/en/resources/images/admin/icon-complete.png)|![](/en/resources/images/admin/icon-na.png)||
|Ask user to create new event when stage is complete|If selected, when the Program Stage is completed the user is prompted to book.|![](/en/resources/images/admin/icon-complete.png)|![](/en/resources/images/admin/icon-na.png)||
|Hide due date|Only shows the actual date for events, hiding the due date.|![](/en/resources/images/admin/icon-complete.png)|![](/en/resources/images/admin/icon-na.png)||
|Capture coordinates (event)/Feature Type-Point|Enables the user to capture geographical coordinates when each event is created ![](/en/resources/images/admin/icon-incomplete.png) particularly useful in devices that have GPS (eg Android), as instead of having to type in coordinates, the user can automatically populate them with the press of a button.|![](/en/resources/images/admin/icon-complete.png)|![](/en/resources/images/admin/icon-complete.png)||
|Capture Polygon (event)/Feature Type-Polygon |Enables users to capture locations (enclosed areas) when each event is created. A Polygon must contain at least 4 points.|![](/en/resources/images/admin/icon-complete.png)|![](/en/resources/images/admin/icon-complete.png)||
|Description of report date|Allows an admin to customize the label that is used for the event's date.|![](/en/resources/images/admin/icon-complete.png)|![](/en/resources/images/admin/icon-complete.png)||
|Data elements-compulsory|This enables an admin to mark a data element as "compulsory", meaning an event can not be saved until a value is captured.|![](/en/resources/images/admin/icon-complete.png)|![](/en/resources/images/admin/icon-complete.png)||
|Data elements-allow provided elsewhere|On the form, this places a tick-box next to the selected data element, and enables previous data to be pulled into the data element.|![](/en/resources/images/admin/icon-incomplete.png)|![](/en/resources/images/admin/icon-na.png)||
|Data elements-display in reports|Displays the value of this data element into the single event without registration data entry function.|![](/en/resources/images/admin/icon-incomplete.png)|![](/en/resources/images/admin/icon-complete.png)||
|Data elements-date in future|For date Data Elements, this enables an admin to either prevent or allow future dates to be captured.|![](/en/resources/images/admin/icon-complete.png)|![](/en/resources/images/admin/icon-complete.png)||
|Data elements-render options as radio|Enables an admin to choose how options will be displayed on-screen for each Data Element (i.e. either as drop-down list or as radio buttons).|![](/en/resources/images/admin/icon-incomplete.png)|![](/en/resources/images/admin/icon-incomplete.png)||
|Block entry form after completed|Prevents all edits to events after they have been completed.|![](/en/resources/images/admin/icon-complete.png)|![](/en/resources/images/admin/icon-complete.png)||
|Event comments|Enables the user to add overall comments to an event. These comments are cumulative (new comments are added below existing comments).|![](/en/resources/images/admin/icon-incomplete.png)|![](/en/resources/images/admin/icon-na.png)||

### Program with registration: Tracked entity dashboard { #capture_app_programs_supported_features_program_with_reg }

|Feature|Description of feature|Status|Notes on implementation|
|-|---|:-:|---|
|Messaging|Enables users to send ad-hoc free-text messages to TEIs (e.g. patients) via SMS or email.|![](/en/resources/images/admin/icon-incomplete.png)||
|Mark for follow-up (button with exclamation triangle)|Enables a user to mark a TEI (e.g. patient) as requiring follow-up.|![](/en/resources/images/admin/icon-complete.png)||
|Display TEI audit history|Enables a user to see a history of all edits to Attributes for this TEI (e.g. patient).|-||
|Inline Program Indicators|If a program indicator "display in form" box is ticked, the indicator appears on the Tracker Capture dashboard, and is updated live as data capture occurs.|![](/en/resources/images/admin/icon-complete.png)||
|Delete events|Enables the user to delete an event.|![](/en/resources/images/admin/icon-complete.png)||
|Schedule events|In the event generation dialogue, the user should also see the option to schedule an event. The process is like creating an event, but the user will be sent back to the TEI dashboard after the event is scheduled.|![](/en/resources/images/admin/icon-complete.png)||
|Referral of patients|In the event generation dialogue, the user should also see the option to refer a patient. The process is like creating/scheduling an event, but the user can change the org unit and has to specify if is a one-time or permanent referral. One time will just create the event in the specified OU.|![](/en/resources/images/admin/icon-complete.png)||
|Reset search fields|User is able to clean up the search fields by pressing on the rounded arrow icon on the top right corner of the search screen.|![](/en/resources/images/admin/icon-complete.png)||
|Search screen for all TE Type|User is able to search across all program of one tracked entity type (TET). In the Search screen there is a drop down which shows all the programs available for the active TET (active TET is defined by the selection of the program in the home screen). That drop down should also have an option with TET name. (Person in our server). When the user selects that option, the search fields available will only be the TET attributes (no program specific attributes). All search restrictions do not apply, because they belong to the programs.|![](/en/resources/images/admin/icon-complete.png)||
|TEI Dashboard without program|User can see the TEI dashboard without any program by selecting the TEI in the list if the search was without program. The dashboards will show the TET attributes in the details card followed by a list of active enrollments.|![](/en/resources/images/admin/icon-complete.png)||
|TEI enrollment history and new enrollment|User is able to see the complete historical record of the TEI. By clicking on the top right corner icon they will see a list of Active enrolments, followed by a list of past enrolments (completed or cancelled), followed by the programs in which the TEI could be enrolled. Users should be able to navigate to the different enrolments from the list.|![](/en/resources/images/admin/icon-complete.png)||
|Access level-Breaking the glass|If the program is configured with access level protected, and the user searches and finds tracked entity instances that is owned by organisation unit that the user does not have data capture authority for, the user is presented with the option of breaking the glass. The user will gove a reason for breaking the glass, then gain temporary ownership of the tracked entity instance.|![](/en/resources/images/admin/icon-incomplete.png)||

### Program without registration: Single event program { #capture_app_programs_supported_features_program_without_reg }

|Feature|Description of feature|Status|Notes on implementation|
|-|---|:-:|---|
|Events listing (grid)|A listing of existing events that is displayed once a program is selected.|![](/en/resources/images/admin/icon-complete.png)||
|Sort and filter events in grid|Allows the user to sort listed events, or to filter events based on keywords or specific ranges of dates/numbers.|![](/en/resources/images/admin/icon-complete.png)|Events are sorted chronologically. The user can filter by period and organisation unit.|
|Edit events in grid|Allows the user to directly edit the data elements shown in the events listing/grid.|![](/en/resources/images/admin/icon-incomplete.png)||
|View event audit history|Enables the user to see a history of all changes to the event's data elements.|![](/en/resources/images/admin/icon-incomplete.png)||
|Show/hide columns (in event list/grid)|Enables the user to modify the data elements shown in the event listing/grid (applies to that user only).|![](/en/resources/images/admin/icon-incomplete.png)||
|Field completion percentage|The percentage of data completed in each event is shown in the top right corner of an event when it is opened after first registration. The percentages should be adapted to the effects of the program rules in the forms.|![](/en/resources/images/admin/icon-complete.png)|The percentage of completion does not take into account the not-supported value types in the forms.|
|Delete events|Enables the user to delete an event.|![](/en/resources/images/admin/icon-complete.png)||



# Program rules supported in Android Capture App { #capture_app_pr }

The following is a comprehensive list of all Program Rule components (variable types and actions) available in DHIS2, and notes on whether or not these have been implemented in the DHIS2 Android App.

> **Note**
> 
> Any issues around using a particular feature with Android are highlighted with an exclamation mark !.

|legend|description|
|:--:|:------|
|![](/en/resources/images/admin/icon-complete.png)|Value type implemented|
|![](/en/resources/images/admin/icon-incomplete.png)|Value type not implemented, but will be safely ignored (if not compulsory) |
|![](/en/resources/images/admin/icon-na.png)|Not applicable|
|![](/en/resources/images/admin/icon-wip.png)|Work in progress. Feature not completely implemented yet or with unexpected behavior already reported |

## Program rule Variable source types supported { #capture_app_pr_prv }

| Variable type| Description of variable type| Program with registration| Program without registration| Notes on implementation|
|-|-----|:-:|:-:|-----|
|Data Element from the newest event for a program stage|This source type works the same way as "Data element from the newest event in the current program", except that it only evaluates values from a specific program stage.|![](/en/resources/images/admin/icon-complete.png)|![](/en/resources/images/admin/icon-na.png)||
|Data element from the newest event in the current program (with registration)|This source type is populated with the newest data value collected for the specified data element within the enrolment.|![](/en/resources/images/admin/icon-complete.png)|![](/en/resources/images/admin/icon-na.png)||
|Data Element from the newest event in the current program (without registration)|This program rule variable will be populated with the newest data value found within the 10 newest events in the same organization unit.|![](/en/resources/images/admin/icon-na.png)|![](/en/resources/images/admin/icon-complete.png)||
|Data Element in current event (with registration)|Variable takes the data element&rsquo;s value from the current event.|![](/en/resources/images/admin/icon-complete.png)|![](/en/resources/images/admin/icon-na.png)||
|Data Element in current event (without registration)|Contains the data value from the same event that the user currently has open.|![](/en/resources/images/admin/icon-na.png)|![](/en/resources/images/admin/icon-complete.png)||
|Data Element from previous event (with registration)|Program rule variables with this source type will contain the newest value from all previous events for the specified data element. The event currently open is not evaluated.|![](/en/resources/images/admin/icon-complete.png)|![](/en/resources/images/admin/icon-na.png)||
|Data Element from previous event (without registration)|This program rule variable will be populated with the newest data value found within the 10 events preceding the current event date (i.e. not including the current event).|![](/en/resources/images/admin/icon-na.png)|![](/en/resources/images/admin/icon-complete.png)||
|Tracked Entity Attribute|Populates the program rule variable with a specified tracked entity attribute for the current TEI (e.g. current patient).|![](/en/resources/images/admin/icon-complete.png)|![](/en/resources/images/admin/icon-na.png)||
|Calculated value|Calculated value.|![](/en/resources/images/admin/icon-complete.png)|![](/en/resources/images/admin/icon-complete.png)||

## Program rule Actions supported (Data element in current event) { #capture_app_pr_pra }

| Action| Description of action| Program with registration| Program without registration| Notes on implementation|
|-|-----|:-:|:-:|-----|
|Hide Field|Hides an individual data element if the rule is true.|![](/en/resources/images/admin/icon-complete.png)|![](/en/resources/images/admin/icon-complete.png)|! If you change the value after the field is hidden, it will revert the action depending on the value type rule engine default value. We recommend its use combined with the hasvalue function.|
|Hide Section|Hides a whole section and its data elements if the rule is true.|![](/en/resources/images/admin/icon-complete.png)|![](/en/resources/images/admin/icon-complete.png)||
|Hide Option|Hide a single option for an option set in a given data element/tracked entity attribute. When combined with <b>show option group</b> the <b>hide option</b> takes precedence|![](/en/resources/images/admin/icon-complete.png)|![](/en/resources/images/admin/icon-complete.png)||
|Hide Option Group|Hide all options in a given option group and data element/tracked entity attribute. When combined with <b>show option group</b> the <b>hide option</b> takes precedence |![](/en/resources/images/admin/icon-complete.png)|![](/en/resources/images/admin/icon-complete.png)||
|Show option group|Used to show only options from a given option group in a given data element/tracked entity attribute. To show an option group implicitly hides all options that is not part of the group(s) that is shown.|![](/en/resources/images/admin/icon-complete.png)|![](/en/resources/images/admin/icon-complete.png)||
|Assign Value|Assigns a value to a specified data element or attribute if the rule is true.|![](/en/resources/images/admin/icon-complete.png)|![](/en/resources/images/admin/icon-complete.png)|To assing text, it must be in single quotes. For example: '2+2' will show the text 2+2 and 2+2, without the single quotes will show 4. |
|Show Warning|Shows pop-up warning to the user if rule is true; does not prevent the user from continuing.|![](/en/resources/images/admin/icon-complete.png)|![](/en/resources/images/admin/icon-complete.png)||
|Warning on Complete|Shows a pop-up warning to the user if, at the point &lsquo;complete&rsquo; is clicked, a rule is true; this does not prevent the user from continuing.|![](/en/resources/images/admin/icon-complete.png)|![](/en/resources/images/admin/icon-complete.png)||
|Show Error|Shows a pop-up error message to the user as soon as a rule is true, and prevents user from continuing until rule is no longer true.|![](/en/resources/images/admin/icon-complete.png)|![](/en/resources/images/admin/icon-complete.png)|The value is not saved, but the text is not cleared so that the user can fix it easily.|
|Error on Complete|Shows a pop-up warning to the user if, when "complete"; is clicked, a rule is true, and prevents user from continuing until rule is no longer true.|![](/en/resources/images/admin/icon-complete.png)|![](/en/resources/images/admin/icon-complete.png)||
|Make Field Mandatory|Sets a data element as "mandatory"; if rule is true.|![](/en/resources/images/admin/icon-complete.png)|![](/en/resources/images/admin/icon-complete.png)||
|Display Text (Event Programs)|Used to display information that is not an error or a warning, for example feedback.|![](/en/resources/images/admin/icon-complete.png)|![](/en/resources/images/admin/icon-complete.png)| Independently from the source variable type, text will be displayed in the form as the last element of the last section. Text will be displayed as the messages in the indicators tab.|
|Display Text (Tracker Programs)|Used to display information that is not an error or a warning, for example feedback.|![](/en/resources/images/admin/icon-complete.png)|![](/en/resources/images/admin/icon-complete.png)|<b>1. Program rule configured as "Trigger rule only for program stage".</b> Text will be displayed ONLY in the form as the last element of the last section. Text will be displayed as the messages in the indicators tab. </br>-> If the program rule uses any variable type which is not from the current stage, the rule will not be able to evaluate and the message will not be shown.</br><b>2. Program rule NOT configured as "Trigger rule only for program stage".</b> Text will be displayed ONLY in the indicators tab and NOT in the form.</br>--> If the program rule uses any variable of type Current event, the rule will not be able to evaluate and the message will not be shown.|
|Display Key Value/Pair (Event Programs)|Used to display information drawn from a data element.|![](/en/resources/images/admin/icon-complete.png)|![](/en/resources/images/admin/icon-complete.png)|<b>Variable Type:</b> </br>* Data element from the newest event in the current program</br>* Data element from previous event</br>* Data element in current event</br>* Built-in variable</br>Key/Value Pair will be displayed in the form ONLY in the specified section.|
|Display Key Value/Pair (Traker Programs)|Used to display information drawn from a data element.|![](/en/resources/images/admin/icon-complete.png)|![](/en/resources/images/admin/icon-complete.png)|<b>1. Variable Type:</b></br>* Data element in current event</br>Key/Value Pair will be displayed in the form ONLY in the specified section.</br><b>2. Variable Type:</b></br>* Data element from the newest event in the current program</br>* Data element from previous event</br>* Data element from the newest event for a program stage</br>* Tracked entity attribute</br>* Built-in variable</br>Key/Value Pair will be displayed ONLY in the indicators tab and NOT in the form.|
|Hide Program Stage|Hides a whole program stage from the user if the rule is true.|![](/en/resources/images/admin/icon-na.png)|![](/en/resources/images/admin/icon-na.png)|Action rule only supported for <b>Data element from the newest event in the current program type and tracked entity </b> attribute variables.|
|Send Message|Send Message triggers a notification based on provided message template.This action will be taken whenever there is a change in data value. However this behaviour can be controlled by providing event-enrollment status in program rule expression|![](/en/resources/images/admin/icon-na.png)|![](/en/resources/images/admin/icon-na.png)|This feature is executed on the server side.|
|Schedule Message|Schedule Message will schedule notification at date provided by Expression in the data field.|![](/en/resources/images/admin/icon-na.png)|![](/en/resources/images/admin/icon-na.png)|This feature is executed on the server side.|

## Program rule Actions supported (Other variables) { #capture_app_pr_pra_other }

| Action| Description of Action| Data Element from the Newest Event in the Current Program (with registration)|Data Element from the Newest Event in the Current Program (without registration)| Data Element from Previous Event (with registration) |Data Element from Previous Event (without registration)| Data Element from the Newest Event for a Program Stage (with registration)|Tracked Entity Atribute (with registration) |Notes on implementation|
|-|-----|:-:|:-:|:-:|:-:|:-:|:-:|-----|
|Hide Field|Hides an individual data element if the rule is true.|![](/en/resources/images/admin/icon-complete.png)|![](/en/resources/images/admin/icon-complete.png)|![](/en/resources/images/admin/icon-complete.png)|![](/en/resources/images/admin/icon-complete.png)|![](/en/resources/images/admin/icon-complete.png)|![](/en/resources/images/admin/icon-complete.png)||
|Hide Section|Hides a whole section and its data elements if the rule is true.|![](/en/resources/images/admin/icon-complete.png)|![](/en/resources/images/admin/icon-complete.png)|![](/en/resources/images/admin/icon-complete.png)|![](/en/resources/images/admin/icon-complete.png)|![](/en/resources/images/admin/icon-complete.png)|![](/en/resources/images/admin/icon-complete.png)||
|Hide Option|Hide a single option for an option set in a given data element/tracked entity attribute. When combined with <b>show option group</b> the <b>hide option</b> takes precedence.|![](/en/resources/images/admin/icon-complete.png)|![](/en/resources/images/admin/icon-complete.png)|![](/en/resources/images/admin/icon-complete.png)|![](/en/resources/images/admin/icon-complete.png)|![](/en/resources/images/admin/icon-complete.png)|![](/en/resources/images/admin/icon-complete.png)||
|Hide Option Group|Hide all options in a given option group and data element/tracked entity attribute.When combined with show option group the hide option takes precedence.|![](/en/resources/images/admin/icon-complete.png)|![](/en/resources/images/admin/icon-complete.png)|![](/en/resources/images/admin/icon-complete.png)|![](/en/resources/images/admin/icon-complete.png)|![](/en/resources/images/admin/icon-complete.png)|![](/en/resources/images/admin/icon-complete.png)||
|Assign Value|Assigns a value to a specified data element or attribute if the rule is true.|![](/en/resources/images/admin/icon-complete.png)|![](/en/resources/images/admin/icon-complete.png)|![](/en/resources/images/admin/icon-complete.png)|![](/en/resources/images/admin/icon-complete.png)|![](/en/resources/images/admin/icon-complete.png)|![](/en/resources/images/admin/icon-complete.png)|To assing text, it must be in single quotes. For example: '2+2' will show the text 2+2 and 2+2, without the single quotes will show 4.|
|Show Warning|Shows pop-up warning to the user if rule is true; does not prevent the user from continuing.|![](/en/resources/images/admin/icon-complete.png)|![](/en/resources/images/admin/icon-complete.png)|![](/en/resources/images/admin/icon-complete.png)|![](/en/resources/images/admin/icon-complete.png)|![](/en/resources/images/admin/icon-complete.png)|![](/en/resources/images/admin/icon-complete.png)||
|Warning on Complete|Shows a pop-up warning to the user if, at the point "complete" is clicked, a rule is true; this does not prevent the user from continuing.|![](/en/resources/images/admin/icon-complete.png)|![](/en/resources/images/admin/icon-complete.png)|![](/en/resources/images/admin/icon-complete.png)|![](/en/resources/images/admin/icon-complete.png)|![](/en/resources/images/admin/icon-complete.png)|![](/en/resources/images/admin/icon-na.png)||
|Show Error|Shows a pop-up error message to the user as soon as a rule is true, and prevents user from continuing until rule is no longer true.|![](/en/resources/images/admin/icon-complete.png)|![](/en/resources/images/admin/icon-complete.png)|![](/en/resources/images/admin/icon-complete.png)|![](/en/resources/images/admin/icon-complete.png)|![](/en/resources/images/admin/icon-complete.png)|![](/en/resources/images/admin/icon-complete.png)|The rule will let the user to finish the enrollment but will prevent from completing the events until rule is no longer true. The value is not saved, but the text is not cleared so that the user can fix it easily.|
|Error on Complete|Shows a pop-up warning to the user if, at the point "complete" is clicked, a rule is true; this does not prevent the user from continuing.|![](/en/resources/images/admin/icon-complete.png)|![](/en/resources/images/admin/icon-complete.png)|![](/en/resources/images/admin/icon-complete.png)|![](/en/resources/images/admin/icon-complete.png)|![](/en/resources/images/admin/icon-complete.png)|![](/en/resources/images/admin/icon-na.png)||
|Make Field Mandatory|Sets a data element as "mandatory" if rule is true.|![](/en/resources/images/admin/icon-complete.png)|![](/en/resources/images/admin/icon-complete.png)|![](/en/resources/images/admin/icon-complete.png)|![](/en/resources/images/admin/icon-complete.png)|![](/en/resources/images/admin/icon-complete.png)|![](/en/resources/images/admin/icon-complete.png)||
|Display Text (Event Programs)|Used to display information that is not an error or a warning, for example feedback.|![](/en/resources/images/admin/icon-complete.png)|![](/en/resources/images/admin/icon-complete.png)|![](/en/resources/images/admin/icon-complete.png)|![](/en/resources/images/admin/icon-complete.png)|![](/en/resources/images/admin/icon-complete.png)|![](/en/resources/images/admin/icon-complete.png)| Independently from the source variable type, text will be displayed in the form as the last element of the last section. Text will be displayed as the messages in the indicators tab.|
|Display Text (Tracker Programs)|Used to display information that is not an error or a warning, for example feedback.|![](/en/resources/images/admin/icon-complete.png)|![](/en/resources/images/admin/icon-complete.png)|![](/en/resources/images/admin/icon-complete.png)|![](/en/resources/images/admin/icon-complete.png)|![](/en/resources/images/admin/icon-complete.png)|![](/en/resources/images/admin/icon-complete.png)|<b>1. Program rule configured as "Trigger rule only for program stage".</b> Text will be displayed ONLY in the form as the last element of the last section. Text will be displayed as the messages in the indicators tab. </br>-> If the program rule uses any variable type which is not from the current stage, the rule will not be able to evaluate and the message will not be shown.</br><b>2. Program rule NOT configured as "Trigger rule only for program stage".</b> Text will be displayed ONLY in the indicators tab and NOT in the form.</br>--> If the program rule uses any variable of type Current event, the rule will not be able to evaluate and the message will not be shown.|
|Display Key Value/Pair (Event Programs)|Used to display information drawn from a data element.|![](/en/resources/images/admin/icon-complete.png)|![](/en/resources/images/admin/icon-complete.png)|![](/en/resources/images/admin/icon-complete.png)|![](/en/resources/images/admin/icon-complete.png)|![](/en/resources/images/admin/icon-complete.png)|<b>Variable Type:</b> </br>* Data element from the newest event in the current program</br>* Data element from previous event</br>* Data element in current event</br>* Built-in variable</br>Key/Value Pair will be displayed in the form ONLY in the specified section.|
|Display Key Value/Pair (Traker Programs)|Used to display information drawn from a data element.|![](/en/resources/images/admin/icon-complete.png)|![](/en/resources/images/admin/icon-complete.png)|![](/en/resources/images/admin/icon-complete.png)|![](/en/resources/images/admin/icon-complete.png)|![](/en/resources/images/admin/icon-complete.png)|![](/en/resources/images/admin/icon-complete.png)|<b>1. Variable Type:</b></br>* Data element in current event</br>Key/Value Pair will be displayed in the form ONLY in the specified section.</br><b>2. Variable Type:</b></br>* Data element from the newest event in the current program</br>* Data element from previous event</br>* Data element from the newest event for a program stage</br>* Tracked entity attribute</br>* Built-in variable</br>Key/Value Pair will be displayed ONLY in the indicators tab and NOT in the form.|
|Hide Program Stage|Hides a whole program stage from the user if the rule is true.|![](/en/resources/images/admin/icon-complete.png)|![](/en/resources/images/admin/icon-na.png)|![](/en/resources/images/admin/icon-na.png)|![](/en/resources/images/admin/icon-na.png)|![](/en/resources/images/admin/icon-na.png)|![](/en/resources/images/admin/icon-complete.png)|Action rule only supported for <b>Data element from the newest event in the current program variable </b> type. If the event is auto-generated, the rule will not apply.|
|Send Message|Send Message triggers a notification based on provided message template.This action will be taken whenever there is a change in data value. However this behaviour can be controlled by providing event-enrollment status in program rule expression|![](/en/resources/images/admin/icon-na.png)|![](/en/resources/images/admin/icon-na.png)|![](/en/resources/images/admin/icon-na.png)|![](/en/resources/images/admin/icon-na.png)|![](/en/resources/images/admin/icon-na.png)|![](/en/resources/images/admin/icon-na.png)|This feature is executed on the server side.|
|Schedule Message|Schedule Message will schedule notification at date provided by Expression in the data field.|![](/en/resources/images/admin/icon-na.png)|![](/en/resources/images/admin/icon-na.png)|![](/en/resources/images/admin/icon-na.png)|![](/en/resources/images/admin/icon-na.png)|![](/en/resources/images/admin/icon-na.png)|![](/en/resources/images/admin/icon-na.png)|This feature is executed on the server side.|

## Functions to use in program rule expressions { #capture_app_pr_pre }

| Function   | Description of function | Status        | Notes on implementation |
| ---- | ----------------------------- | :----: | -- |
| d2:ceil    | Rounds the input argument up to the nearest whole number.   | ![](/en/resources/images/admin/icon-complete.png)    | |
| d2:floor   | Rounds the input argument down to the nearest whole number. | ![](/en/resources/images/admin/icon-complete.png)    | |
| d2:round   | Rounds the input argument to the nearest whole number.      | ![](/en/resources/images/admin/icon-complete.png)    | |
| d2:modulus | Produces the modulus when dividing the first with the second argument.        | ![](/en/resources/images/admin/icon-complete.png)    | |
| d2:zing    | Evaluates the argument of type number to zero if the value is negative, otherwise to the value itself.   | ![](/en/resources/images/admin/icon-complete.png)    | |
| d2:oizp    | Evaluates the argument of type number to one if the value is zero or positive, otherwise to zero.        | ![](/en/resources/images/admin/icon-complete.png)    | |
| d2:concatenate      | Produces a string concatenated string from the input parameters. Supports any number of parameters.      | ![](/en/resources/images/admin/icon-complete.png)    |Use d2:concatenate function instead of using "+" as the expression evaluator in the app will be adding numbers if it can.|
| d2:daysBetween      | Produces the number of days between the first and second argument. If the second argument date is before the first argument,  the return value will be the negative number of days between the two dates. The static date format is 'yyyy-MM-dd'.        | ![](/en/resources/images/admin/icon-complete.png)    | |
| d2:weeksBetween     | Produces the number of full weeks between the first and second argument. If the second argument date is before the first argument,  the return value will be the negative number of weeks between the two dates. The static date format is 'yyyy-MM-dd'. | ![](/en/resources/images/admin/icon-complete.png)    | |
| d2:monthsBetween    | Produces the number of full months between the first and second argument. If the second argument date is before the first argument the return value will be the negative number of months between the two dates. The static date format is 'yyyy-MM-dd'. | ![](/en/resources/images/admin/icon-complete.png)    | |
| d2:yearsBetween     | Produces the number of years between the first and second argument. If the second argument date is before the first argument, the return value will be the negative number of years between the two dates. The static date format is 'yyyy-MM-dd'.       | ![](/en/resources/images/admin/icon-complete.png)    | |
| d2:addDays | Produces a date based on the first argument date, adding the second argument number of days.    | ![](/en/resources/images/admin/icon-complete.png)    | |
| d2:count   | Counts the number of values that is entered for the source field in the argument.      | ![](/en/resources/images/admin/icon-complete.png)    | |
| d2:countIfValue     | Counts the number of matching values that is entered for the source field in the first argument. Only occurrences that matches the second argument is counted. | ![](/en/resources/images/admin/icon-complete.png)    | |
| d2:countIfZeroPos   | Counts the number of values that is zero or positive entered for the source field in the argument. The source field parameter is the name of one of the defined source fields in the program.      | ![](/en/resources/images/admin/icon-complete.png)    | |
| d2:hasValue         | Evaluates to true of the argument source field contains a value, false if no value is entered.       | ![](/en/resources/images/admin/icon-complete.png)    | |
| d2:validatePattern  | Evaluates to true if the input text is an exact match with the supplied regular expression pattern. The regular expression needs to be escaped.       | ![](/en/resources/images/admin/icon-complete.png)    | |
| d2:left    | Evaluates to the left part of a text, num-chars from the first character.     | ![](/en/resources/images/admin/icon-complete.png)    | |
| d2:right   | Evaluates to the right part of a text, num-chars from the last character.     | ![](/en/resources/images/admin/icon-complete.png)    | |
| d2:substring        | Evaluates to the part of a string specified by the start and end character number.     | ![](/en/resources/images/admin/icon-complete.png)    | |
| d2:split   | Split the text by delimiter, and keep the nth element (0 is the first).       | ![](/en/resources/images/admin/icon-complete.png)    | |
| d2:length  | Find the length of a string.     | ![](/en/resources/images/admin/icon-complete.png)    | |
| d2:zpvc    | Returns the number of numeric zero and positive values among the given object arguments. Can be provided with any number of arguments.   | ![](/en/resources/images/admin/icon-complete.png)    | |
| d2:inOrgUnitGroup\* | Evaluates whether the current organization unit is in the argument group. The argument can be defined with either ID or organization unit group code. | ![](/en/resources/images/admin/icon-complete.png) | |
| d2:hasUserRole\** |Returns true if the current user has this role otherwise false.| ![](/en/resources/images/admin/icon-complete.png) | |
| d2:zScoreWFA\*** |Function calculates z-score based on data provided by WHO weight-for-age indicator. Its value varies between -3.5 to 3.5 depending upon the value of weight.| ![](/en/resources/images/admin/icon-complete.png) | Providing an age less than 0 or greater than 60 will result in the program rule to not be calculated. Also, WFA tables have the age parameter increment in steps of 1, providing a fraction age will floor the value (2.3 months → 2 months).|
| d2:zScoreHFA\*** |Function calculates z-score based on data provided by WHO height-for-age indicator. Its value varies between -3.5 to 3.5 depending upon the value of weight.| ![](/en/resources/images/admin/icon-complete.png) |Providing an age less than 0 or greater than 60 will result in the program rule to not be calculated. Also, HFA tables have the age parameter increment in steps of 1, providing a fraction age will floor the value (2.3 months → 2 months). |
| d2:zScoreWFH\*** |Function calculates z-score based on data provided by WHO weight-for-height indicator. Its value varies between -3.5 to 3.5 depending upon the value of weight.| ![](/en/resources/images/admin/icon-complete.png) | Providing a height less than 45 or greater than 120 will result in the program rule to not be calculated. Also, WFH tables have the height parameter increment in steps of 0.5, providing a fraction height will floor the value (45.3 → 45 | 45.7 → 45.5).|

> **Note**
>
> * Available in DHIS2 v2.30
> ** Available in DHIS2 v2.31 and greater
> *** Available in DHIS2 v2.32 and greater

## Standard variables to use in program rule expressions { #capture_app_pr_standard_vars }

Available in DHIS2 v2.30

| Variable     | Description of function       | Status | Notes on implementation |
| --- | -------------------------------------------- | :---: | -- |
| V{current_date}       | Contains the current date whenever the rule is executed. | ![](/en/resources/images/admin/icon-complete.png)      | |
| V{event_date}         | Contains the event date of the current event execution. Will not have a value at the moment the rule is executed as part of the registration form. | ![](/en/resources/images/admin/icon-complete.png)      | |
| V{event_status}         | Contains status of the current event or enrollment. | ![](/en/resources/images/admin/icon-complete.png)      | |
| V{due_date} \*        | This variable will contain the current date when the rule is executed. Note: This means that the rule might produce different results at different times, even if nothing else has changed.     | ![](/en/resources/images/admin/icon-complete.png)      | |
| V{event_count}        | Contains the total number of events in the enrollment.   | ![](/en/resources/images/admin/icon-complete.png)      | |
| V{enrollment_date} \* | Contains the enrollment date of the current enrollment. Will not have a value for single event programs.       | ![](/en/resources/images/admin/icon-complete.png)      | |
| V{incident_date} \*   | Contains the incident date of the current enrollment. Will not have a value for single event programs.         | ![](/en/resources/images/admin/icon-complete.png)      | |
| V{enrollment_id} \*   | Universal identifier string(UID) of the current enrollment. Will not have a value for single event programs.   | ![](/en/resources/images/admin/icon-complete.png)      | |
| V{event_id}  | Universal identifier string(UID) of the current event context. Will not have a value at the moment the rule is executed as part of the registration form.   | ![](/en/resources/images/admin/icon-complete.png)      | |
| V{orgunit_code}       | Contains the code of the orgunit that is linked to the current enrollment. For single event programs the code from the current event Org Unit will be used instead.  | ![](/en/resources/images/admin/icon-complete.png)      | |
| V{environment}        | Contains a code representing the current runtime environment for the rules. The possible values is "WebClient", "AndroidClient" and "Server". Can be used when a program rule is only supposed to run in one or more of the client types.    | ![](/en/resources/images/admin/icon-complete.png)      | |
| V{program_stage_id}   | Contains the ID of the current program stage that triggered the rules. This can be used to run rules in specific program stages, or avoid execution in certain stages. When executing the rules in the context of a TEI registration form the variable will be empty.   | ![](/en/resources/images/admin/icon-complete.png)      | |
| V{program_stage_name} | Contains the name of the current program stage that triggered the rules. This can be used to run rules in specific program stages, or avoid execution in certain stages. When executing the rules in the context of a TEI registration form the variable will be empty. | ![](/en/resources/images/admin/icon-complete.png)      | |

> **Notes**
> 
> \* Only applies to tracker


## Differences between the Program Rules in the web and the Android version { #capture_app_pr_differences_web_android }

As the web and the Android application are currently using a different *program rule engine* there might be programs rule that work in one system and not in the other. In general terms it can be said that the Android *program rule engine* is more strict and so, some Program Rules that work in the web version of DHIS2 will fail in Android. This subsection describes the main differences and how to adapt the rules in order to have them working in both systems.

### Evaluation of type Boolean { #capture_app_pr_differences_web_android_bool }


DHIS2 web version considers the type boolean as 0 or 1 (which can be evaluated to true or false), however Android evaluates them only as true or false. While this makes possible the addition of booleans in web, it will fail in Android; in order to fix this an additional *program rule variable* is needed to transform the boolean into an number that can be operated. Check the table below for examples and possible solutions.

For the examples belows consider the following:

* yn_prv1: is a program rule variable that has been configured to get the value of a 'Yes/No' data element
* yn_prv2: is a program rule variable that has been configured to get the value of a 'Yes/No' data element
* prv_boolean_one: is a program rule variable that has been configured to get the value of a 'Yes/No' data element
* prv_boolean_two: is a program rule variable that has been configured to get the value of a 'Yes/No' data element
* prv_boolean_one_to_number: is a program rule variable with calculated value
* prv_boolean_two_to_number: is a program rule variable with calculated value
* sometimes true is used as program rule condition meaning the action is always performed
* The following acronyms are used: 
    * DE (Data Elemetn)
    * PR (Program Rule)
    * PRE (Program Rule Expression)
    * PRC (Program Rule Condition)
    * PRV (Program Rule Variable)
    * PRA (Program Rule Action)

| Program Rule Condition(s) | Program Rule Action(s) | Web version | Android version | Comment |
| ----------- | ----------- | :---: | :---: | ----- |
| d2:hasValue('yn_prv1') \|\| d2:hasValue('yn_prv2') | Assign fixed value to DE | ![](/en/resources/images/admin/icon-complete.png) | ![](/en/resources/images/admin/icon-complete.png) | |
| #{yn_prv1} \|\| #{yn_prv2} | Assign fixed value to DE | ![](/en/resources/images/admin/icon-complete.png) | ![](/en/resources/images/admin/icon-complete.png) | |
| d2:hasValue('yn_prv1') \|\| d2:hasValue('yn_prv2') | Assign value to DE: #{yn_prv1} + #{yn_prv2} + 1 | ![](/en/resources/images/admin/icon-complete.png) | ![](/en/resources/images/admin/icon-negative.png) | Crashes in Android  whenver a boolean is marked as the expression would result in *true*+*false*+1 |
| PR1: #{prv_boolean_one} <br /><br />PR2: #{prv_boolean_two} <br /><br />PR3: #{prv_boolean_one} \|\| #{prv_boolean_two} | PRA1. Assign value  "1" to PRV "#{prv_bool_one_to_number}" <br /><br />PRA2. Assign value: "1" to PRV "#{prv_bool_two_to_number}" <br /><br />PRA3. Assign value to DE: "#{prv_bool_one_to_number} + #{prv_bool_two_to_number} + 1"| ![](/en/resources/images/admin/icon-negative.png) | ![](/en/resources/images/admin/icon-negative.png) | There are 2 variables for boolean, one gets the value via a PRV definition “value form DE” and the other one via a PRA. If a boolean is not marked it is counted as string instead of a number |
| Four PR to assign 1 or 0 to the booleans and an additional for the addition. Priorities go from top to bottom <br /><br />PRC1: !d2:hasValue('prv_boolean_one')  \|\| !#{prv_boolean_one} <br /><br />PRC2: d2:hasValue('prv_boolean_one') && #{prv_boolean_one}<br /><br />PRC3: !d2:hasValue('prv_boolean_two')  \|\| !#{prv_boolean_two} <br /><br />PRC4: d2:hasValue('prv_boolean_two') && #{prv_boolean_two} <br /><br />PRC5: true | PRA1: Assign value: "0" to PRV "#{prv_bool_one_to_number}" <br /><br />PRA2: Assign value: "1" to PRV "#{prv_bool_one_to_number}" <br /><br />PRA3: Assign value: "0" to PRV "#{prv_bool_two_to_number}" <br /><br />PRA4: Assign value: "1" to PRV "#{prv_bool_two_to_number}" <br /><br />PRA5: Assign value: "#{prv_bool_one_to_number} + #{prv_bool_two_to_number} + 1" to DE <br /> | ![](/en/resources/images/admin/icon-complete.png) | ![](/en/resources/images/admin/icon-complete.png) | There are 2 variables for boolean, one gets the value via a PRV definition “value form DE” and the other one via a PRA.

### Evaluation of numbers { #capture_app_pr_differences_web_android_numbers }


DHIS2 web version evaluate numbers in a more flexible way casting values from integer to floats and viceversa. This can lead to some issues as explained in the examples below.

#### Division of numbers { #division-of-numbers } 

If required for a division web will cast from integer to float, however, Android take numbers as such (literally and without casting) which my end up giving unexpected results. Check the table below for examples and possible solutions.

| Program Rule Condition(s) | Program Rule Action(s) | Web version | Android version | Comment |
| ----------- | ----------- | :---: | :---: | ----- |
| true | Assign value to DE: d2:daysBetween('2020-05-13', '2020-05-17') / 3 | ![](/en/resources/images/admin/icon-complete.png) | ![](/en/resources/images/admin/icon-negative.png) | The user would expect the division to be calculated as 4/3 with a result of 1.3333. However, Android does not cast 4 to a float (4.0 as the web version does) so the result in Android is a pure 1 as the result of the integer division 4/3 |
| true | Assign value to DE: d2:daysBetween('2020-05-13', '2020-05-17') / 3.0 | ![](/en/resources/images/admin/icon-complete.png) | ![](/en/resources/images/admin/icon-complete.png) | Division results in 1.33333 in both web and Android | 


#### Using the function validatePattern { #using-the-function-validatepattern } 

In the same way, if a DataElement of the type number is used, Android will use that value as float (including decimals) which might lead to validatePattern function not working as expected.

Consider the following:

* temperatue_prv: is a Program Rule Variable containing the value of the Data Element *temperature*.
* User inputs 38 in the Data Element.

| Program Rule Condition(s) | Program Rule Action(s) | Web version | Android version | Comment |
| ----------- | ----------- | :---: | :---: | ----- |
| !d2:validatePattern(#{temperature_prv},'\\\\{d}') | Display error if value is not 2 digits | ![](/en/resources/images/admin/icon-complete.png) | ![](/en/resources/images/admin/icon-negative.png) | The user would expect the program rule to NOT show an error as 38 does match the pattern. However, Android attempts to validate the pattern \\{d} against 38.0 resulting in Android displaying the error. |
| !d2:validatePattern(#{temperature_prv},'(\\\\d{2}\|\\\\d{2}\\\\.\\\\d\|\\\\d{2}\\\\.\\\\d{2})$') | Display error if value is not 2 digits | ![](/en/resources/images/admin/icon-complete.png) | ![](/en/resources/images/admin/icon-complete.png) | The regular expression used here will match both integeres and floats resulting in being properly evaluated in web and Android and not displaying an error. |

## Changes in Program Rules (as from version 2.2 of the app) { #capture_app_pr_changes }

In the version 2.2 of the application (released on August, 2020) a new rule-engine was included.  This rule-engine requires some optional and some mandatory changes to be performed on the program rules expressions in order to make it work in the new application. A list of those changes, how to detect them and how to fix them is included in the following subsections.

### Evaluation of 'd2:hasValue' { #capture_app_pr_changes_hasvalue }

#### Description { #description } 

This is an optional change. *d2:hasValue* now works with both single quotes or full variable expression. The following expressions is valid: `(d2:hasValue('variable_name') and d2:hasValue(#{variable_name}))`

#### How to identify via API? { #how-to-identify-via-api } 

Get programRules where either the condition or the program rule action uses the d2:hasValue function.

```
https://example.org/api/programRules?fields=program[name],name,programRuleActions[data],condition&filter=programRuleActions.data:like:hasValue&filter=condition:like:hasValue&rootJunction=OR
```

```xml
<programRule name="PR01 - Check variable with hasValue(#{variable})">
<condition>d2:hasValue(#{Age in years})</condition>
<program name="JB_Testing_2.2"/>
<programRuleActions>
<programRuleAction/>
</programRuleActions>
</programRule>
<programRule name="PR01 - Check variable with hasValue('variable')">
<condition>d2:hasValue('Age in years')</condition>
<program name="JB_Testing_2.2"/>
<programRuleActions>
<programRuleAction/>
</programRuleActions>
</programRule>
```

#### How to fix it? { #how-to-fix-it } 

The example above shows how different ways of using the hasValue function will have the same effect as from version 2.2. There are no mandatory changes but have in mind that while writing new program rules being consistent might help avoiding problems.

### Evaluation of a variable { #capture_app_pr_changes_eval_var }

#### Description { #description } 

This is a mandatory change. *!#{variable_name}* can only be used boolean type variables (BOOLEAN and TRUE_ONLY).

#### How to identify via API? { #how-to-identify-via-api } 

Get programRulesVariables with dataElements of the type NOT BOOLEAN or TRUE_ONLY

```
https://example.org/api/programRuleVariables?fields=name&filter=dataElement.valueType:!in:[TRUE_ONLY,BOOLEAN]&paging=False
```

Get all programRule.conditions
```
https://example.org/api/programRules?fields=displayName,condition&paging=False
```

Check manually (or programmatically via a script) if in the list of programRule.conditions (obtained via the second API call) any of the program rules variables (obtained via the first API call) is being used. 

For example, from the first list we get:

```xml
<programRuleVariable name="AdditionalMedication"/>
<programRuleVariable name="age"/>
<programRuleVariable name="Age in years"/>
<programRuleVariable name="AgeYears"/>
<programRuleVariable name="allergies"/>
<programRuleVariable name="apgarcomment"/>
```

And we can compare with the second list:

```xml
<programRule>
<condition>!#{Pregant}</condition>
<displayName>PR03- !#{varible_name} - BOOLEAN</displayName>
</programRule>
<programRule>
<condition>!#{Age in years}</condition>
<displayName>PR03- !#{varible_name} - NOT BOOLEAN</displayName>
</programRule>
<programRule>
<condition>#{PregnancyStatus} != 'YES'</condition>
<displayName>Pregnancy status : false</displayName>
</programRule>
```

This shows that a NON BOOLEAN variable is being used wrongly.

#### How to fix it? { #how-to-fix-it } 

Make sure that you are evaluating  BOOLEAN or TRUE_ONLY variables in your conditions. In case the program rule variable is not of that type update your program rule condition with d2:hasValue(#{variable_name}) or d2:hasValue(‘variable_name’)

In the example above the condition should change from:

```xml
<condition>!#{Age in years}</condition>
```
To:
```xml
<condition>d2:hasValue(‘Age in years’)</condition>
```

### Evaluation of texts { #capture_app_pr_changes_eval_text }

#### Description { #description } 

This is a mdantory change. In program rule actions of the type ASSIGN, DISPLAY TEXT, DISPLAY KEY/VALUE PAIR, SHOW WARNING, SHOW ERROR, WARNING ON COMPLETE or ERROR ON COMPLETE if the Expression to evaluate and assign/display is a text, it must be enclosed with single quotes.

#### How to identify via API? { #how-to-identify-via-api } 

Get the Program Rules which actions are of type text, with something on the field data and verify their data content to find strings without quotes.

```
https://example.org/api/programRules?fields=program[name],name,programRuleActions[programRuleActionType,content,data]&filter=programRuleActions.programRuleActionType:in:[ASSIGN,DISPLAYTEXT,DISPLAYKEYVALUEPAIR,SHOWWARNING,SHOWERROR]&filter=programRuleActions.data:!null&paging=false
```

For example we can detect here an error of a text field without quotes in the first Program Rule Action while the second one is correct.

```xml
<programRule name="PR04- !#{varible_name} - BOOLEAN - Assign text without quotes">
<program name="JB_Testing_2.2"/>
<programRuleActions>
<programRuleAction>
<programRuleActionType>SHOWWARNING</programRuleActionType>
<data>embarazada</data>
<content>PR04 text with quotes is: </content>
</programRuleAction>
</programRuleActions>
</programRule>
```

```xml
<programRule name="PR04- !#{varible_name} - BOOLEAN - Assign text with quotes">
<program name="JB_Testing_2.2"/>
<programRuleActions>
<programRuleAction>
<programRuleActionType>SHOWWARNING</programRuleActionType>
<data>'embarazada'</data>
<content>PR04 text with quotes is: </content>
</programRuleAction>
</programRuleActions>
</programRule>
```

#### How to fix it? { #how-to-fix-it } 

Scan the generated list (via the suggested API calls) to find data components of the Program Rule Action where text is not quoted, then go to each of the identified Program Rules and update them.

### Concatenation of string and objects { #capture_app_pr_changes_concat }

#### Description { #description } 

This is a mdantory change. In program rule actions of the type ASSIGN, DISPLAY TEXT, DISPLAY KEY/VALUE PAIR, SHOW WARNING, SHOW ERROR, WARNING ON COMPLETE or ERROR ON COMPLETE if the Expression to evaluate and assign/display is a text, it must be enclosed with single quotes (same as previous change); but, on top of that, if it requires to concatenate two strings or a combination of functions it is mandatory to use the *d2:concatenate* function.

#### How to identify via API? { #how-to-identify-via-api } 

Get the Program Rules which actions are of type text, with any content on the field data and verify their data content to check if in case of two or more strings (or other objects) are being joined the d2:concatenate function is used

Get the Program Rules which actions are of type text and verify their data content to find strings without quotes.

```
http://localhost:8034/api/programRules?fields=program[name],name,programRuleActions[programRuleActionType,content,data]&filter=programRuleActions.programRuleActionType:in:[ASSIGN,DISPLAYTEXT,DISPLAYKEYVALUEPAIR,SHOWWARNING,SHOWERROR]&filter=programRuleActions.data:!null&paging=false
```

For example we can detect here an error of two strings in an action without the use of d2:concatenate.

```xml
<programRule name="PR08- Assign text and variable without concatenate">
<program name="JB_Testing_2.2"/>
<programRuleActions>
<programRuleAction>
<programRuleActionType>SHOWWARNING</programRuleActionType>
<data>'Age is 10 and modulus' 'another string'</data>
<content>PR05 text without concat is: </content>
</programRuleAction>
</programRuleActions>
</programRule>
```

#### How to fix it? { #how-to-fix-it } 

Scan the generated list (via the suggested API calls) to find data components of the Program Rule Action where two or more objects are being concatenated and update them to use the d2:concatenate function.

In the example above the data should change from:

```xml
<data>'Age is 10 and modulus' 'another string'</data>
```
To:
```xml
<data>d2:concatenate('Age is 10 and modulus','another string')</data>
```



# Program Indicators { #capture_app_program_ind }

The following is a comprehensive list of all Program indicator variables available in DHIS2, and notes on whether or not these have been implemented in the Android Capture app.

Any issues around using a particular feature with Android are highlighted with an exclamation mark.

|legend|description|
|:--:|:------|
|![](/en/resources/images/admin/icon-complete.png)|Component implemented|
|![](/en/resources/images/admin/icon-incomplete.png)|Component not implemented (rule fails) |
|![](/en/resources/images/admin/icon-na.png)|Not applicable|
|![](/en/resources/images/admin/icon-wip.png)|Work in progress. Feature not completely implemented yet or with unexpected behaviour already reported.|

## Common functions to use in a program indicator expression or filter { #capture_app_program_ind_common_functions }

|Function|Description|Status|Notes on implementation|
|-|-----|:-:|-----|
|if|Evaluates the boolean expression and if true returns the true expression value, if false returns the false expression value. The arguments must follow the rules for any indicator expression.|![](/en/resources/images/admin/icon-complete.png)||
|isNull|Returns true if the element value is missing (null), otherwise false.|![](/en/resources/images/admin/icon-complete.png)||
|isNotNull|Returns true if the element value is not missing (not null), otherwise false.|![](/en/resources/images/admin/icon-complete.png)||
|firstNonNull|RReturns the value of the first element that is not missing (not null). Can be provided any number of arguments. Any argument may also be a numeric or string literal, which will be returned if all the previous objects have missing values.|![](/en/resources/images/admin/icon-complete.png)||
|greatest|Returns the greatest (highest) value of the expressions given. Can be provided any number of arguments.|![](/en/resources/images/admin/icon-complete.png)||
|least|Returns the least (lowest) value of the expressions given. Can be provided any number of arguments.|![](/en/resources/images/admin/icon-complete.png)||

## (d2) Functions to use in a program indicator expression or filter { #capture_app_program_ind_d2_functions }

|Function|Description|Status|Notes on implementation|
|-|-----|:-:|-----|
|addDays|Produces a date based on the first argument date, adding the second argument number of days.|![](/en/resources/images/admin/icon-complete.png)||
|ceil|Rounds the input argument up to the nearest whole number.|![](/en/resources/images/admin/icon-complete.png)||
|condition|Evaluates the boolean expression and if true returns the true expression value, if false returns the false expression value. The conditional expression must be quoted. The true-expr and false-expr arguments must follow the rules of any program indicator expression (including functions).|![](/en/resources/images/admin/icon-complete.png)||
|count|Counts the number of data values that has been collected for the given program stage and data element in the course of the enrollment. The argument data element is supplied with the #{programStage.dataElement} syntax.|![](/en/resources/images/admin/icon-complete.png)||
|countIfCondition|Counts the number of data values that matches the given condition criteria for the given program stage and data element in the course of the enrollment. The argument data element is supplied with the #{programStage.dataElement} syntax. The condition is supplied as a expression in single quotes.|![](/en/resources/images/admin/icon-complete.png)||
|countIfValue|Counts the number of data values that matches the given literal value for the given program stage and data element in the course of the enrollment. The argument data element is supplied with the #{programStage.dataElement} syntax. The value can be a hard coded text or number.|![](/en/resources/images/admin/icon-complete.png)||
|countIfZeroPos|Counts the number of values that is zero or positive entered for the source field in the argument.|![](/en/resources/images/admin/icon-complete.png)||
|daysBetween|Produces the number of days between two data elements/attributes of type date.|![](/en/resources/images/admin/icon-complete.png)||
|floor|Rounds the input argument down to the nearest whole number.|![](/en/resources/images/admin/icon-complete.png)||
|hasUserRole|Returns true if current user has this role otherwise false.|![](/en/resources/images/admin/icon-complete.png)||
|hasValue|Returns true if the data element/attribute has a value.|![](/en/resources/images/admin/icon-complete.png)||
|inOrgUnitGroup|Evaluates whether the current organisation unit is in the argument group. The argument can be defined with either ID or organisation unit group code.|![](/en/resources/images/admin/icon-complete.png)||
|left|Evaluates to the left part of a text, num-chars from the first character.|![](/en/resources/images/admin/icon-complete.png)||
|length|Find the length of a string.|![](/en/resources/images/admin/icon-complete.png)||
|minutesBetween|Produces the number of minutes between two data elements/attributes of type “date and time”.|![](/en/resources/images/admin/icon-complete.png)||
|modulus|Produces the modulus when dividing the first with the second argument.|![](/en/resources/images/admin/icon-complete.png)||
|monthsBetween|Produces the number of full months between the first and second argument.|![](/en/resources/images/admin/icon-complete.png)||
|oizp|Returns one if the expression is zero or positive, otherwise returns zero.|![](/en/resources/images/admin/icon-complete.png)||
|relationshipCount|Produces the number of relationships of the given type that is connected to the enrollment or event. When no type is given, all types are counted.|![](/en/resources/images/admin/icon-incomplete.png)||
|right| Evaluates to the right part of a text, num-chars from the last character.|![](/en/resources/images/admin/icon-complete.png)||
|round| Rounds the input argument to the nearest whole number.|![](/en/resources/images/admin/icon-complete.png)||
|split|RSplit the text by delimiter, and keep the nth element(0 is the first).|![](/en/resources/images/admin/icon-complete.png)||
|substring|Evaluates to the part of a string specified by the start and end character number.|![](/en/resources/images/admin/icon-complete.png)||
|validatePatten|Evaluates to true if the input text is an exact match with the supplied regular expression pattern.|![](/en/resources/images/admin/icon-complete.png)||
|weeksBetween|Produces the number of full weeks between two data elements/attributes of type date.|![](/en/resources/images/admin/icon-complete.png)||
|yearsBetween|Produces the number of years between the first and second argument.|![](/en/resources/images/admin/icon-complete.png)||
|zing|Returns zero if the expression is negative, otherwise returns the expression value.|![](/en/resources/images/admin/icon-complete.png)||
|zpvc|Returns the number of numeric zero and positive values among the given object arguments.|![](/en/resources/images/admin/icon-complete.png)||

## Variables to use in a program indicator expression or filter { #capture_app_program_ind_variables }


| Variable type| Description of variable type|Status|Notes on implementation|
|-|-----|:-:|-----|
|Event Date <br />event_date|The date of when the event took place.|![](/en/resources/images/admin/icon-complete.png)||
|Creation Date* <br />creation_date|The date of when an event or enrollment was created in the system.|![](/en/resources/images/admin/icon-complete.png)||
|Due Date<br />due_date|The date of when an event is due.|![](/en/resources/images/admin/icon-complete.png)||
|Sync Date\*<br />sync_date|The date of when the event or enrollment was last synchronized with the Android app.|![](/en/resources/images/admin/icon-incomplete.png)||
|Incident Date<br />incident_date|The date of the incidence of the event.|![](/en/resources/images/admin/icon-complete.png)||
|Enrollment Date (not visible on UI)<br />enrollment_date|The date of when the tracked entity instance was enrolled in the program.|![](/en/resources/images/admin/icon-complete.png)||
|Enrollment Status<br />enrollment_status|Can be used to include or exclude enrollments in certain statuses.|![](/en/resources/images/admin/icon-complete.png)||
|Current Date<br />current_date|The current date.|![](/en/resources/images/admin/icon-complete.png)||
|Completed Date|The date the event is completed.|![](/en/resources/images/admin/icon-complete.png)||
|Value Count<br />value_count|The number of non-null values in the expression part of the event.|![](/en/resources/images/admin/icon-complete.png)||
|Zero or positive value count<br />zero_pos_value_count|The number of numeric positive values in the expression part of the event.|![](/en/resources/images/admin/icon-complete.png)||
|Event Count<br />event_count|The count of events (useful in combination with filters).|![](/en/resources/images/admin/icon-complete.png)||
|Enrollment Count<br />enrollment_count|The count of enrollments (useful in combination with filters).|![](/en/resources/images/admin/icon-complete.png)|Indicators in the Android App are calculated in the domain of one TEI enrollment. Value always 1.|
|TEI Count<br />tei_count|The count of tracked entity instances (useful in combination with filters).|![](/en/resources/images/admin/icon-na.png)|Indicators in the Android App are calculated in the domain of one TEI enrollment. Value always 1.|
|Program Stage Name<br />program_stage_name|Can be used in filters for including only certain program stages in a filter for tracker programs.|![](/en/resources/images/admin/icon-incomplete.png)||
|Program Stage ID<br />program_stage_id|Can be used in filters for including only certain program stages in a filter for tracker programs.|![](/en/resources/images/admin/icon-incomplete.png)||
|Reporting Period Start<br />reporting_period_start|Can be used in filters or expressions for comparing any date to the first date in each reporting period.|![](/en/resources/images/admin/icon-na.png)|Indicators in the Android App are calculated in the domain of one TEI enrollment.|
|Reporting Period End<br />reporting_period_end|Can be used in filters or expressions for comparing any date to the last inclusive date in each reporting period.|![](/en/resources/images/admin/icon-na.png)|Indicators in the Android App are calculated in the domain of one TEI enrollment.|
|Organisation Unit Count<br />organisationunit_count|.|![](/en/resources/images/admin/icon-na.png)||

[Documentation Reference](https://docs.dhis2.org/master/en/user/html/configure_program_indicator.html%23program_indicator_functions_variables_operators&sa=D&ust=1557433016643000)



# Value types supported { #capture_app_value_types }

The following is a comprehensive list of all value types available in DHIS 2, and notes on whether or not these have been implemented in the Android Capture app.

Any issues around using a particular feature with Android are highlighted with an exclamation mark \!.

|Legend|Description|
| :-: | :------ |
| ![](/en/resources/images/admin/icon-complete.png) | Value type implemented |
| ![](/en/resources/images/admin/icon-incomplete.png) | Value type not implemented, but will be safely ignored (if not compulsory) |
| ![](/en/resources/images/admin/icon-wip.png) | Work in progress. Feature not completely implemented yet or with unexpected behaviour already reported |


| Value type | Description of value type | Program with registration | Program with registration | Program without registration | Data Set| Notes on implementation |
| :--| :----|:-:|:-:|:-:|:-:|:--|
| | | **الخصائص** | **عناصر البيانات** | **عناصر البيانات** | **عناصر البيانات** | |
| Time | Time only | ![](/en/resources/images/admin/icon-complete.png) | ![](/en/resources/images/admin/icon-complete.png) | ![](/en/resources/images/admin/icon-complete.png) |![](/en/resources/images/admin/icon-complete.png) | |
| Date & Time | Date plus time | ![](/en/resources/images/admin/icon-complete.png) | ![](/en/resources/images/admin/icon-complete.png) | ![](/en/resources/images/admin/icon-complete.png) | ![](/en/resources/images/admin/icon-complete.png)| |
| Date | Date only | ![](/en/resources/images/admin/icon-complete.png) | ![](/en/resources/images/admin/icon-complete.png) | ![](/en/resources/images/admin/icon-complete.png) | ![](/en/resources/images/admin/icon-complete.png) | |
| العمر | Enables entry of either an age in years/months/days or a date-of-birth (both are stored as date-of-birth) | ![](/en/resources/images/admin/icon-complete.png) | ![](/en/resources/images/admin/icon-complete.png) | ![](/en/resources/images/admin/icon-complete.png) |![](/en/resources/images/admin/icon-complete.png) | |
| رقم الهاتف | A valid phone number | ![](/en/resources/images/admin/icon-complete.png) | ![](/en/resources/images/admin/icon-complete.png) | ![](/en/resources/images/admin/icon-complete.png) |![](/en/resources/images/admin/icon-complete.png) | |
| Email | An email address in a valid format | ![](/en/resources/images/admin/icon-complete.png) | ![](/en/resources/images/admin/icon-complete.png) | ![](/en/resources/images/admin/icon-complete.png) |![](/en/resources/images/admin/icon-complete.png) | |
| Yes/no | Boolean yes/no (or no response) | ![](/en/resources/images/admin/icon-complete.png) | ![](/en/resources/images/admin/icon-complete.png) | ![](/en/resources/images/admin/icon-complete.png) | ![](/en/resources/images/admin/icon-complete.png)| |
| Yes only | Yes or no response | ![](/en/resources/images/admin/icon-complete.png) | ![](/en/resources/images/admin/icon-complete.png) | ![](/en/resources/images/admin/icon-complete.png) | ![](/en/resources/images/admin/icon-complete.png)| |
| Number | Any valid number, including decimals | ![](/en/resources/images/admin/icon-complete.png) | ![](/en/resources/images/admin/icon-complete.png) | ![](/en/resources/images/admin/icon-complete.png) | ![](/en/resources/images/admin/icon-complete.png)| |
| Integer | Any integer (whole numbers, no decimals) | ![](/en/resources/images/admin/icon-complete.png) | ![](/en/resources/images/admin/icon-complete.png) | ![](/en/resources/images/admin/icon-complete.png) | ![](/en/resources/images/admin/icon-complete.png)| |
| Positive Integer | Only positive integers (no zero or negative values) | ![](/en/resources/images/admin/icon-complete.png) | ![](/en/resources/images/admin/icon-complete.png) | ![](/en/resources/images/admin/icon-complete.png) | ![](/en/resources/images/admin/icon-complete.png)| |
| Positive or Zero Integer | Only zero or positive integers (no negative values) | ![](/en/resources/images/admin/icon-complete.png) | ![](/en/resources/images/admin/icon-complete.png) | ![](/en/resources/images/admin/icon-complete.png) | ![](/en/resources/images/admin/icon-complete.png)| |
| Negative Integer | Only negative integers (no zero or positive values) | ![](/en/resources/images/admin/icon-complete.png) | ![](/en/resources/images/admin/icon-complete.png) | ![](/en/resources/images/admin/icon-complete.png) |![](/en/resources/images/admin/icon-complete.png) | |
| Percentage | Any decimal value between 0 and 100 | ![](/en/resources/images/admin/icon-complete.png) | ![](/en/resources/images/admin/icon-complete.png) | ![](/en/resources/images/admin/icon-complete.png) | ![](/en/resources/images/admin/icon-complete.png)| |
| Unit interval | Any decimal value between 0 and 1 | ![](/en/resources/images/admin/icon-complete.png) | ![](/en/resources/images/admin/icon-complete.png) | ![](/en/resources/images/admin/icon-complete.png) |![](/en/resources/images/admin/icon-complete.png) | |
| نص | Text (length of text up to 50,000 characters) | ![](/en/resources/images/admin/icon-complete.png) | ![](/en/resources/images/admin/icon-complete.png) | ![](/en/resources/images/admin/icon-complete.png) |![](/en/resources/images/admin/icon-complete.png) | |
| Long text | Text (no constraints on length) | ![](/en/resources/images/admin/icon-complete.png) | ![](/en/resources/images/admin/icon-complete.png) | ![](/en/resources/images/admin/icon-complete.png) |![](/en/resources/images/admin/icon-complete.png) | |
| Letter | A single letter | ![](/en/resources/images/admin/icon-complete.png) | ![](/en/resources/images/admin/icon-complete.png) | ![](/en/resources/images/admin/icon-complete.png) | ![](/en/resources/images/admin/icon-complete.png)| |
| File | Enables upload of files in various formats (requires appropriate storage to be configured) | ![](/en/resources/images/admin/icon-complete.png) | ![](/en/resources/images/admin/icon-complete.png) | ![](/en/resources/images/admin/icon-complete.png) | ![](/en/resources/images/admin/icon-incomplete.png) | |
| الوحدة التنظيمية | Enables selection of a DHIS2 organisation unit as the chosen value | ![](/en/resources/images/admin/icon-complete.png) | ![](/en/resources/images/admin/icon-complete.png) | ![](/en/resources/images/admin/icon-complete.png) |  ![](/en/resources/images/admin/icon-incomplete.png)| |
| Tracker Associate | Enables selection of an existing Tracker 'tracked entity instance' (e.g. a person) as the value | ![](/en/resources/images/admin/icon-incomplete.png) | ![](/en/resources/images/admin/icon-incomplete.png) | ![](/en/resources/images/admin/icon-incomplete.png) | ![](/en/resources/images/admin/icon-incomplete.png) | |
| Username | Enables selection of a valid DHIS2 username as the value | ![](/en/resources/images/admin/icon-wip.png) | ![](/en/resources/images/admin/icon-wip.png) | ![](/en/resources/images/admin/icon-wip.png) |  ![](/en/resources/images/admin/icon-incomplete.png) | |
| Coordinate | Enables manual entry of geographical coordinates (doesn't enable automatic capture of coordinates) | ![](/en/resources/images/admin/icon-complete.png) | ![](/en/resources/images/admin/icon-complete.png) | ![](/en/resources/images/admin/icon-complete.png) | ![](/en/resources/images/admin/icon-complete.png)| |
| URL | Enables manual entry of a URL. | ![](/en/resources/images/admin/icon-complete.png) | ![](/en/resources/images/admin/icon-complete.png) | ![](/en/resources/images/admin/icon-complete.png) |![](/en/resources/images/admin/icon-complete.png) | |
| Image | Enables upload of images. | ![](/en/resources/images/admin/icon-complete.png) | ![](/en/resources/images/admin/icon-complete.png) | ![](/en/resources/images/admin/icon-complete.png) | ![](/en/resources/images/admin/icon-incomplete.png) | |




# Android Settings Web App { #capture_app_android_settings_webapp }
## Overview { #capture_app_android_settings_webapp_overview }

This section focuses on the [Android Settings Web App](https://apps.dhis2.org/app/a1bd6b5b-de8c-4998-8d34-56c18a139683) implementation.


The [Android Settings Web App](https://apps.dhis2.org/app/a1bd6b5b-de8c-4998-8d34-56c18a139683) allows admins to configure synchronization parameters for the DHIS2 Android App, encrypt the local database of the Android devices, customize the appearance of Programs, Data sets, and Home screen, and add TEI Analytics items. The configuration parameters defined within this web app will overwrite the settings of all Android devices using the DHIS2 Android Capture App.

Please note that in this version of the Web App (2.3), if the DHIS2 version is equal to or higher than 2.40, only users with "M_androidsettingsapp" or "ALL" authority can define those parameters in the configuration. Other users accessing the web app can see the value of the parameters but cannot edit them.

> **Warning**
>
> If the DHIS2 version is not above 2.40, only users with 'ALL' authority can define those parameters in the configuration.
> 


## General settings { #capture_app_android_settings_webapp_general }

Includes configurations such as the Matomo URL and project ID, the number of reserved values to download per TEI, and encrypt the device database.

![](resources/images/capture-app-general-settings.png)

### Matomo configuration { #capture_app_android_settings_webapp_general_matomo }

The DHIS2 Android App sends anonymize analytics that can be used to evaluate performance and/or detect problems at an early stage. [Matomo](https://matomo.org) is the tool used for this and running in a specific server not accessible to the general public. However, implementations can set up their own
 Matomo instance (or using the cloud version) in order to collect and analyse the statistics. 

Once you have your Matomo instance ready you should get the URLs and the project ID like shown in the picture below (left). The ID can be introduced directly but the URL needs to be followed with */matomo.php* and start with *https* or *http* as shown below (right).

![](resources/images/capture-app-matomo-instance.png){width=33%}
![](resources/images/capture-app-matomo-settings.png){width=33%}


### Mobile configuration { #capture_app_android_settings_webapp_generalmobile_configuration }
This section allows admin users to edit the SMS gateway ad result sender phone number.
This configuration can be found in the Android app.
- Click on Settings
- Click on SMS Settings

![](resources/images/capture-app-sms-settings.png){width=33%}

### Reserved values { #capture_app_android_settings_webapp_general_reserved_values }
This will specify the number of values per TEI attribute reserved to download in the devices. By default, the Android App reserves 100 Ids, but it is possible to add or reduce this number.

To find this configuration in the Android app:
- Click on Settings
- Click on Reserved Values
- To refill them click on *Manage Reserved Values*

![](resources/images/capture-app-reserved-values.png){width=33%}
![](resources/images/capture-app-reserved-values-refill.png){width=33%}

### Encrypt device database { #capture_app_android_settings_webapp_general_encrypt_database }
This will force all the devices to store the database encrypted increasing the security level against data theft attacks.

By default, the DHIS2 Android App database is not encrypted, but an admin can check the *Encrypt device database* to encrypt the metadata and data stored in every device. Encrypting the database will have an impact on the database volume and performance (degradation between 10-15%) of the Android app. Note that at the moment of selecting or unselecting this option, no data is lost (even if it hasn't been previously synchronized with the server)

> **Warning**
>
> This is a critical action and will affect the local database of all Android devices synchronizing with the server (it won't affect the server DHIS2 database).
>
> By default, the Android app database is not encrypted, but an admin can check the *Encrypt device database* to encrypt the metadata and data stored in every device. Encrypting the database will have an impact on the database volume and performance of the Android app. Note that at the moment of selecting or unselecting this option, no data is lost (even if it hasn't been previously synchronized with the server)

### Allow screenshots { #capture_app_android_settings_webapp_general_screenshots }
This section allows to configure the possibility to take screenshots or screen sharing using the Android Capture App (which is required to remote support with applications like Teamviewer, Teams, etc). Please note that the default behavior is deactivated screenshots.

> **Warning**
>
> The DHIS2 Android App disables the possibility of taking screenshots (and capturing the screen from other apps) by default following security and privacy recommendations. Allowing screenshots might be useful for support and/or sharing purposes in same cases but make sure you understand the security and privacy implications of this setting before enabling it.
>

### Opt-in Features (**New 2.3.1**) { #capture_app_android_settings_webapp_general_optin_features }
Opt-in features are additional functionalities or settings within the application that the user can choose to enable based on preferences. Unlike default settings, these features require an explicit consent or action ('opting in') to activate.
Opting in allows the user to customize the experience by adding extra capabilities to the app. Keep in mind that these features might come with specific considerations, so it is recommended to review any associated information before opting in.

To enable a feature:
- Click on *Opt-in Features*. 
- A list of available opt-in settings will appear.
- Click on the feature's checkbox.

**Data entry Form :** The inputs for all value types have been redesigned in the Android Capture App with an improved selection mode and increased tappable areas and texts to offer a cleaner and more intuitive user experience. By default, the Android Capture App will display the previous forms. Admin users are able to opt in to use the new forms by clicking in the checkbox option.

![](resources/images/capture-app-optin-features.png)

### Disable all settings { #capture_app_android_settings_webapp_general_disable_settings }
By clicking this button, the user will remove all Android configuration settings. No configuration will be applied to the Android App (if this is the case, the sync parameters applied are the ones defined in the Android Capture app).


## Synchronization { #capture_app_android_settings_webapp_synchronization }

It offers additional parameters to control metadata/data synchronization.


### Global { #capture_app_android_settings_webapp_synchronization_global }

Metadata sync
:   Admin users can choose how often the metadata will sync. e.g. Sync metadata every 24 hours.

Data sync
:   Admin users can choose how often the data will sync. e.g. Syncing data every 6 hours.

![](resources/images/capture-app-sync-global.png){width=50%}
![](resources/images/capture-app-sync-global-app.png){width=33%}


Use the new Tracker Importer
:   Admin users can choose which tracker importer endpoint will be used.

> **Warning**
>
> This option is only available if the Android Settings Webapp is used from version 2.38 DHIS2 API onwards.
>
> By default, if the DHIS2 API version is 2.38 or higher, the Android app will use the importer introduced in 2.37 */api/tracker* endpoint but an admin can deselect this option and the legacy tracker importer */api/trackedEntityInstances* will be used.
> 
> ![](resources/images/capture-app-sync-global-importer.png){width=50%}
>

Use the new Tracker Exporter (**New 2.3**)
:   Admin users can choose which tracker exporter endpoint will be used.

> **Warning**
>
> This option is only available if the Android Settings Webapp is used from version 2.40 DHIS2 API onwards. 
> 
> By default, if the DHIS2 API version is 2.40 or higher, the Android app will use the exporter introduced in the 2.37 */api/tracker* endpoint, but an admin can deselect this option, and the legacy tracker importer */api/trackedEntityInstances* will be used.
>
>
> ![](resources/images/capture-app-sync-global-exporter.png){width=50%}
>

Limit the file size to download (**New 2.3**)
:   Admin users can limit the maximum size of the file resources downloaded in KB.

![](resources/images/capture-app-sync-download-file-size.png){width=33%}



### Program { #capture_app_android_settings_webapp_synchronization_program }

This section controls the program data synchronization parameters. It has a section to define global or default parameters to be used in the synchronization of all programs.

#### Global settings { #capture_app_android_settings_webapp_synchronization_program_global }

Global settings apply to all programs that an Android user has access to. The settings can be enabled globally, per Org Unit, per program or per OU and program.

![](resources/images/capture-app-program-global-settings.png){width=50%}

TEI to download
:   Maximum number of TEIs to download from the server.

TEI download period
:   It downloads the TEIs that have been updated within a period. e.g. TEIs that have been updated within last month

Event to download
:   Maximum number of Events to download (from events programs, see note below).

Event download period
:   It downloads Events which event date belongs to a specific period.

> **Note**
>
> User might find misleading the amount of data downloaded When setting a number of TEIs and a number of Event. The Android App will download the number of TEIs and all their events following the number of TEI set in the field. The Android App will limit the number of Event to download only for the *event programs* (and not *tracker programs*) according to the field. 
>
> For example, imagine there is *tracker program* in the server with several program stages and each TEI has 5 events (enrollments and program stages). The *TEI to download* value is set to 100. Also, in the server there is an *event program* which contains 1000 events. The *Event to download* value has been set to 200. The Android App will download the following: 100 x 5 events from the tracker program, 200 events from the event program, therefore the Android App will end up downloading 700 events.
>


#### Specific settings { #capture_app_android_settings_webapp_synchronization_program_specific }

This section allows the admin users to specify the behaviour of a particular program/s when syncing the data. The specific configuration overwrites the general settings for the programs listed in this section. To add a setting for a specific program:

- Click on *Add a Program-specific setting*, a Dialog will appear. 
- Bellow "Values per Program" title, click and find a list of programs.
- Clicking on a program will show the different parameters to configure. The number of parameters depends on the program type (with or without registration). 

**Settings for Program Without Registration**

![](resources/images/capture-app-program-specific-dialog-without_registration.png){width=50%}

**Settings for a Program With Registration**

![](resources/images/capture-app-program-specific-dialog-with_registration.png){width=50%}

In the case that any specific settings has been saved, a table will show a summary with the specific configuration per program, and the options to edit or delete these settings.

![](resources/images/capture-app-program-specific-table.png){width=50%}

> **Caution**
>
> Using specific settings per program might have unexpected results in the number of TEIs downloaded and the total amount might exceed the one defined in the Global Settings. This is due to how the application download the TEIs from the server. The Android client will first download a max number of TEIs from the server based on the Organisation Units where the user has access and based on the lastUpdate field. Afterwards it will download a max number of TEIs from the specific programs. Therefore, if the TEIs downloaded from the Global setting (500 in the example above) have been updated more recently than any of the TEIs from a specific program (500 for Malaria case diagnosis, treatment and investigation) the Android client will end up downloading 1000 TEI.
> 
> This might look confusing at first, but once understood can be used to ensure a minimum (and maximum) number of TEIs for a specific program will be downloaded which can be very useful in specific implementations.
>
> Imagine an implementation where it must be ensured that the Android user has all the TEIs of a specific program in a server where the same user has access to other Organisation Units where other TEIs might be enrolled in another program. The program is called Community Care, and it has 17 TEIs which have been updated very long time ago. The administrator can ensure that the 17 TEIs will be downloaded by setting anything in Global Settings (if needed to reduce bandwidth a very low value should be set) and an at least 17 for the specific program as show in the image below:
>
> ![](resources/images/capture-app-program-specific-example-web.png){width=50%}
>
> When the initial synchronization is triggered the Android device will first download the last TEIs updated on the server (which according to our example do not belong to the specific program) and secondly up to 20 TEI from the specific program resulting in the following (notice all the TEIs for the program were downloaded):
>
> ![](resources/images/capture-app-program-specific-example-mobile1.png){width=33%}
>
> And by going to the settings it can be appreciated how the total number of TEIs is the expected 37, 20 from the Global Setting, and 17 from the program specific.
>
> ![](resources/images/capture-app-program-specific-example-mobile2.png){width=33%}
>

#### Reset all values { #capture_app_android_settings_webapp_synchronization_program_reset_all }

By clicking on *Reset all values*, the admin user will restore the default settings values of the program section. Please note that in this case it means no specific settings per program. 

To save any configuration, the admin user needs to click on the *Save* button (this button is disabled for the users who don't have 'ALL' or 'M_androidsettingsapp' authority)


### Data set { #capture_app_android_settings_webapp_synchronization_data }

This section controls the aggregated data synchronization parameters.

#### Global settings { #capture_app_android_settings_webapp_synchronization_data_global }

The first part is for global settings that apply to all data sets an Android user has access to. 

![](resources/images/capture-app-dataset-global-settings.png){width=50%}

The maximum number of periods defines the amount of past periods the app will download in the data synchronization process.

If a data set has future periods ("open future periods" configuration) the app won't take them into consideration in the restriction of the amounts of periods to download.

For example, in a data set with "open future periods" = 2 and a "maximum number of periods to download" = 1, the app will download 3 periods.

#### Specific Settings { #capture_app_android_settings_webapp_synchronization_data_specific }

To add a specific setting:

- Click on *Add a Data set specific setting*, a dialog with a list of data sets will appear. 
- Click on a data set, and this field will be autocompleted with the default value based on the dataset period type.

![](resources/images/capture-app-dataset-specific-dialog.png){width=50%}

![](resources/images/capture-app-dataset-specific-table.png){width=50%}


### User Sync Test { #capture_app_android_settings_webapp_synchronization_user_sync_test }

This section checks the amount of data and metadata a user would sync to his/her device. You can run this test on any user that you have access to. This test shows up the number of organisation units, data sets, program rules, programs, etc., that an android user has access to (so the resources that the android app will download), and the metadata and data download size (approx estimation). Please note that a user doesn't need to have the 'ALL' or 'M_androidsettingsapp' authority to run this test.

![](resources/images/capture-app-user-sync-test.png){width=50%}

> **Note:** 
>
> The values that are highlighted in red are because the value is considered greater than the maximum recommended value.


## Appearance { #capture_app_android_settings_webapp_appearance }

These settings give control over the appearance of the data entry and list forms.

- Filter: it defines the filters that can be enabled in the different app menus.
- Completion spinner: it turns on/off the completion spinner that shows the progress in the data entry form.

These settings refer to visual components, so they must be consumed by the app.
For more information about filters feel free to review filters [documentation](https://docs.dhis2.org/en/use/android-app/android-specific-features.html#capture_app_generic_filter). 

### Home screen { #capture_app_android_settings_webapp_appearance_home_screen }

It allows the admin user to enable or disable the option to show the filters related to Date, Organisation Unit, Sync Status, and Assigned to me on the Home screen.

![](resources/images/capture-app-appearance-home.png){width=75%}


### Program { #capture_app_android_settings_webapp_appearance_program }

Program appearance allows to hide/show features within the program according to the configuration needs. These changes can happen globally, applying to ALL the programs, or specifically to a single one.

#### Global settings { #capture_app_android_settings_webapp_appearance_program_global }

Global settings apply to all programs that an android user has access to.

![](resources/images/capture-app-appearance-program-global.png){width=75%}

Percentage (%) complete in Program: 
Enable or disable the option to show the completion percentage of the data entry form.

TEI referrals (**New 2.3.1**):  
It allows to switch off/on the TEI referral option.

Collapse sections in form (**New 2.3.1**):  
Current behavior lets the sections collapse and expand in an accordion style. This option overrides the behavior by keeping all the sections of the form (registration and events) open and removing the "next" button in each section. 


#### Specific settings { #capture_app_android_settings_webapp_appearance_program_specific }

This section allows the admin user to customize features such as filter, completion percentage, mandatory search, referrals, TEI headers, referral options and collapse sections in form. Each explained in the section below.

To add a specific setting:

- Click on *Add a Program Settings*, and a dialog will appear.
- Click on the dropdown that will show a list of programs.
- Clicking on a program will show the different filters to configure. The category combo filter depends on the category combo name.

![](resources/images/capture-app-appearance-program-specific.png){width=75%}

![](resources/images/capture-app-appearance-program-specific-advanced.png){width=75%}

TEI without searching:
Offer online and offline search, as well as allow the user to create a TEI without a prior search.

TEI Header (**New 2.3.1**):
Assign a specific attribute or expression that will be displayed as a header in TEI cards. 

To add a TEI Header:

- Select a Program Indicator
- An expression related to the program indicator will be displayed

![](resources/images/capture-app-appearance-program-specific-tei-header.png)


> **Note:**
>
> A notice box will be displayed if the selected program lacks expressions related to program indicators that are valid for Android. 
> 
> An expression is considered valid for Android only if it is composed exclusively of attributes and/or functions.
> 
> ![](resources/images/capture-app-appearance-program-specific-expression-valid.png)
> 
> ![](resources/images/capture-app-appearance-program-specific-expression-invalid.png)
> 


If any specific settings have been saved, a table will summarize the particular configuration per program, and the options to edit or delete these settings. 

![](resources/images/capture-app-appearance-program-table.png)

The option "Show percentage (%) complete in Program toolbar" refers to: 
![](resources/images/capture-app-appearance-programs-spinner.png){width=50%}

**Search Tracked Entity (New 2.2)**

Searching before entering a new TEI is mandatory to avoid possible duplicates, and the DHIS2 Android App has been designed as such. This new version gives the possibility to choose to keep this process or allow the user to create a TEI without searching first.
By default, allowing the user to create a TEI without searching is disabled.



### Data set { #capture_app_android_settings_webapp_appearance_data }

It allows admins to enable/disable filters for the Data set section

#### Global settings { #capture_app_android_settings_webapp_appearance_data_global }

The first part is for global settings that apply to all data sets an android user has access to.

![](resources/images/capture-app-appearance-dataset-global.png){width=75%}

#### Specific settings { #capture_app_android_settings_webapp_appearance_data_specific }

To add a specific setting:

- Click on *Add a Data set Settings*. A dialog box will pop up with a dropdown with a list of data sets.
- Click on a data set, and a list of options to enable or disable filters will be displayed.

![](resources/images/capture-app-appearance-dataset-specific.png){width=75%}

![](resources/images/capture-app-appearance-dataset-table.png){width=75%}


## Analytics { #capture_app_android_settings_webapp_analytics }

Analytics settings define TEI, Home, Program and Data Set analytics items (charts, tables) that will be displayed to the user. Any item defined in the settings app will overwrite the default behaviour of the android app, only showing the items defined in the settings app. 

Also, even though these analytics are created using the android settings web app, the data aggregation happens offline using only data stored in the device.

### TEI { #capture_app_android_settings_webapp_analytics_tei }

The scope of the analysis is the TEI, so the visualizations will be displayed in the TEI dashboard of the android app.

The purpose of this section is to define visualizations to show evolution of *data elements* and *program indicators* over time. Based on that, it will only take into consideration data elements that belongs to a repeatable program stage, or program indicators which formula contains at least one data element that belongs to a repeatable program stage.

To create a **TEI Analytics** item:

1. Click on *Add TEI Analytics*. A dialog box will pop up with a small form.
2. Choose a program and a repeatable program stage, and fill the form. The **Short name** is the only optional field.
3. If an item visualization other than WHO Nutrition has been chosen, the next fields to select are the period type (monthly, weekly, daily), an element type (Program Indicator, Data Element), and an element that will be based on the element type previously selected. Remember that these elements are related to the program and repeatable program stage chosen at the beginning.

![](resources/images/capture-app-analytics-item.png)

To create a **WHO Nutrition Analytics** item:

1. Select a program, a program stage, and WHO nutrition as visualization type.
2. Choose a WHO visualization type that can be Height for Age (HFA), Weight for Age (WFA) or Weight for Height (WFH).
3. Select the tracked entity attribute that represents the gender. You have then to specify the option for Male 'Male title' and the option for Female 'Female title'. Normally they will be option codes.
4. Choose the data element/program indicator that will be displayed in the Horizontal (x) axis
5. Choose the data element/program indicator that will be displayed in the Vertical (y) axis


![](resources/images/capture-app-analytics-who-item.png)

If any TEI Analytics item has been created, a table will show the item's title and program name, and action buttons to delete or edit that item.

![](resources/images/capture-app-analytics-table.png)

### Home { #capture_app_android_settings_webapp_analytics_home }

Home visualizations are displayed in the home screen (Analytics tab) of the android app.

All items available are first created in the Data visualizer app in DHIS2 and configured in the android settings app.

To create a **Home** item:

1. Click on "Add Home Visualization"
2. Click on the search box and select the visualization from the list or type the name of the visualization item.
3. Add an alternative title, otherwise, the app will display the name of the visualization
4. By default, the app will enable the group visualization setting.
   1. Create a new group: A free text box will pop up to type the name or
   2. Select a created group visualization: Choose an option from the list to add the visualization or
   3. Disable the group visualization by clicking on the checkbox.
5. Click on the "Save" button.

![](resources/images/capture-app-analytics-home-newGroup.png)

![](resources/images/capture-app-analytics-home-createdGroup.png)

> **Note:**
>
> Visualizations that are added with no group selected, will be displayed in a common "group"
>
> ![](resources/images/capture-app-analytics-default-group.png)
>

To edit the title of a **Home** item (**New 2.2.1**):

1. Search for the item by expanding the groups.
2. Click the "Edit" button next to the item's name.
3. A pop-up with only the visualization title available will be available, the other fields will be disabled. If wanted change the visualization title.
4. Click on the "Save" button.

![](resources/images/capture-app-analytics-home-editVisualization.png)


To remove a **Home** item:

1. Search for the item by expanding the groups
2. Click the "Delete" button next to the item's name
3. Click on "Delete"
4. Click on the "Save" button

![](resources/images/capture-app-analytics-home-deleteVisualization.png)

To remove a **Home** group:

1. Search for the specific group to delete
2. Click on "Delete Group"
3. Click on "Delete"
4. Click on the "Save" button

All the items associated to that group will be deleted

![](resources/images/capture-app-analytics-home-deleteGroup.png)

To reset all values:

1. Click on "Reset all values to default"
2. Click on the "Save" button

### Program { #capture_app_android_settings_webapp_analytics_program }

Program visualizations are displayed in the search screen (Analytics tab) in tracker programs or in the list screen (Analytics tab) in event programs of the android app.

All items available are first created in the Data visualizer app in DHIS2 and configured in the android settings app.

To create a **Program** item:

1. Click on "Add Program Visualization"
2. Select a Program
3. Click on the search box and select the visualization from the list or type the name of the visualization item.
4. Add an alternative title, otherwise, the app will display the name of the visualization
5. By default, the app will enable the group visualization setting.
   1. Create a new group: A free text box will pop up to type the name or
   2. Select a created group visualization: Choose an option from the list to add the visualization or
   3. Disable the group visualization by clicking on the checkbox.
6. Click on the "Save" button.

![](resources/images/capture-app-analytics-program-add.png)

To edit the title of a **Program** item (**New 2.2.1**):

1. Search for the item by expanding the groups.
2. Click the "Edit" button next to the item's name.
3. A pop-up with only the visualization title available will be available, the other fields will be disabled. If wanted change the visualization title.
4. Click on the "Save" button.

![](resources/images/capture-app-analytics-program-editVisualization.png)

To remove a **program** item:

1. Search for the item by expanding the program and group
2. Click the "Delete" button next to the item's name
3. Click on "Delete"
4. Click on the "Save" button

![](resources/images/capture-app-analytics-program-deleteVisualization.png)

To remove a **program** group:

1. Search for the specific group to delete in the corresponding program
2. Click on "Delete Group"
3. Click on "Delete"
4. Click on the "Save" button

All the items associated to that group will be deleted

![](resources/images/capture-app-analytics-program-deleteGroup.png)

To reset all values:

1. Click on "Reset all values to default"
2. Click on the "Save" button

### Data Set { #capture_app_android_settings_webapp_analytics_data }

Data Set visualizations are displayed in the list screen (Analytics tab) in a Data Set of the android app.

All items available are first created in the Data visualizer app in DHIS2 and configured in the android settings app.

To create a **Data Set** item:

1. Click on "Add Data Set Visualization"
2. Select a Data Set
3. Click on the search box and select the visualization from the list or type the name of the visualization item.
4. Add an alternative title, otherwise, the app will display the name of the visualization
5. By default, the app will enable the group visualization setting.
   1. Create a new group: A free text box will pop up to type the name or
   2. Select a created group visualization: Choose an option from the list to add the visualization or
   3. Disable the group visualization by clicking on the checkbox.
6. Click on the "Save" button.

![](resources/images/capture-app-analytics-dataset-add.png)

To edit the title of a **Data set** item (**New 2.2.1**):

1. Search for the item by expanding the groups.
2. Click the "Edit" button next to the item's name.
3. A pop-up with only the visualization title available will be available, the other fields will be disabled. If wanted change the visualization title.
4. Click on the "Save" button.

![](resources/images/capture-app-analytics-dataset-editVisualization.png)

To remove a **Data Set** item:

1. Search for the item by expanding the Data Set and group
2. Click the "Delete" button next to the item's name
3. Click on "Delete"
4. Click on the "Save" button

![](resources/images/capture-app-analytics-dataset-deleteVisualization.png)

To remove a **Data Set** group:

1. Search for the specific group to delete in the corresponding Data Set
2. Click on "Delete Group"
3. Click on "Delete"
4. Click on the "Save" button

All the items associated to that group will be deleted

![](resources/images/capture-app-analytics-dataset-deleteGroup.png)

To reset all values:

1. Click on "Reset all values to default"
2. Click on the "Save" button

### Visualization user test { #capture_app_android_settings_webapp_analytics_visualization_user_test }

The visualization user test is a feature available in Home, Program and Data Set Analytic setting that helps the admin user to identify if any particular user will be able to see the visualization.

The android settings app checks for at least one of these three permissions:

1. Visualization is public
2. User has individual access to the visualization
3. User is in a group that has access to the visualization

To run the test:

1. Select the user from the list
2. Click on "Run test"

![](resources/images/capture-app-analytics-usertest-access.png)

![](resources/images/capture-app-analytics-usertest-access-visualization.png)

![](resources/images/capture-app-analytics-usertest-noaccess.png)

![](resources/images/capture-app-analytics-usertest-noaccess-visualization.png)

### Analytics Limitations { #capture_app_android_settings_analytics_limitations }

Since the aggregations and calculations displayed are calculated in the device, the implementation of analytics is limited compared to web. In summary the compatible and supported objects and features are:

- Well-formed analytic objects (series, categories, filters)
- Use of relative periods (Fix periods are not supported)
- User has view access
- Limitations for Pivot Tables
  - Number of header lines: 1 or 2 (*New 2.3*)
  - Number of header columns: 2
- Limitations for Charts
  - Number of Series: No limit (but remember you are rendering in a small screen)
  - Number of Categories (doesn't apply for pie chart): No limit

There are many more restrictions which apply to Android Analytics regarding the many configuration options available in the Web Visualizer as well as the supported functions and calculations related to indicators and program indicators. [This table](https://docs.google.com/spreadsheets/d/1127cz7M0K4fux5CU0V54V2Z77NZWCr0BTrZ6jcCec4Q) summarises all supported features.

> **Note (New 2.2.1)**
>
> When searching for a visualization to add as part of the Analytics visualizations, all visualizations will be listed, but visualizations that don't meet the above restrictions will be disabled. 
>
> ![](resources/images/capture-app-analytics-visualization-search.png)
>


## Installation { #capture_app_android_settings_webapp_installation }

A user can easily install the Android Settings Web App by logging into the DHIS2 and going to **App Management**.

- Click on **App Hub**
- Go to *Android Settings App*
- Click on *Install V2.X.X*

![](resources/images/capture-app-app-hub-install.png)
![](resources/images/capture-app-app-hub-install-webapp.png)


## Log in and first time setup { #capture_app_android_settings_webapp_login }

After a user installs and launches the Android Settings Web App for the first time, the web app will require setting and saving the default values of the configuration. This will apply default settings to all android devices connected to the instance. 

![](resources/images/capture-app-first-time-setup.png){width=50%}

> **Warning**
>
> Be aware that previous versions are deprecated, so you will start with a new default configuration.

![](resources/images/capture-app-first-setup-with-deprecation-message.png){width=50%}

> **Warning (New 2.3)** 
>
> When using DHIS2 version equal to or higher to 2.40, only users with "M_androidsettingsapp" or "ALL" authority can *save or update* the configuration, but any user will have *view* access once it is created.
> 


![](resources/images/capture-app-first-setup-no-authorities.png){width=50%}


## Enter and save configuration parameters { #capture_app_android_settings_webapp_enter_and_save }

### Datastore { #capture_app_android_settings_webapp_datastore }

Internally all settings are stored in [Datastore](https://docs.dhis2.org/en/develop/using-the-api/dhis-core-version-240/data-store.html) in JSON format.

Datastore structure:

| Item      | Description                                 | Data type |
|-----------|---------------------------------------------|-----------|
| Namespace | Namespace for organization of entries       | String    |
| Key       | Key for identification of values            | String    |
| Value     | Value holding the information for the entry | JSON      |

### Save configuration parameters { #capture_app_android_settings_webapp_save_config }

At the form footer of all settings sections, admin users can find a *Save* button.

![](resources/images/capture-app-save_button.png)

Only when an admin user clicks on this button, all changes made on the current section are saved on the Datastore. These changes will apply to the Android Capture App when they synchronize their configuration.

Unsaved changes
:   In case an admin user wants to go to another section when there are still some unsaved changes, an alert will be displayed before navigating away from the current section. In case the user accepts leaving the page, the unsaved changes will be lost.

![](resources/images/capture-app-unsaved-changes.png)

#### Reset all values to default { #capture_app_android_settings_webapp_reset_all }

An admin user can restore the settings at any time. There is a *Reset all values to default* button at the form footer of all settings sections. 

![](resources/images/capture-app-reset-default.png)

The default values will be only restored on Datastore and applied after clicking on *Save*. 


## Uninstall the app { #capture_app_android_settings_webapp_uninstall_app }

In case of needing to uninstall the Android Settings App it is recommended to also delete all the data from the reserved datastore namespace.

#### Delete data { #capture_app_android_settings_webapp_delete_data }

- Go to *General* section
- Click on *Disable all settings*
- A modal will pop up, click on *Disable*

![](resources/images/capture-app-unistall-delete-namespace.png)

![](resources/images/capture-app-unistall-delete-namespace-modal.png)

#### Uninstall app { #capture_app_android_settings_webapp_uninstall_app }

- Go to **App Management**
- Click on **Custom Apps**
- Go to *Android Settings App*
- Click on *Uninstall V2.X.X*

![](resources/images/capture-app-unistall-custom-app.png)

![](resources/images/capture-app-unistall-aswa.png)

> **Warning**
>
> This is a critical action, be aware that by doing this, all previous configurations will be permanently deleted.


# Use Case Configuration Web App { #capture_app_use_case_configuration_webapp }
## Overview { #capture_app_use_case_configuration_webapp_overview }

This section focuses on the [Use Case Configuration Web App](https://apps.dhis2.org/app/7df6f344-0487-469c-abe6-53c6e729abcf) implementation.


The [Use Case Configuration Web App](https://apps.dhis2.org/app/7df6f344-0487-469c-abe6-53c6e729abcf) will connect the components of use cases, like Pharmacy stock management (LMIS), such as the Tracker Program and Data elements, to the Android Capture App. This app ensures configuration flexibility and avoids hard coding various metadata in the actual mobile application.

Based on the configuration, any program of the DHIS2 server can be set as a stock management system or any other use case.

Please note that in this version of the Web App, only users with "ALL" authority are able to define the configuration. Other users will not have access to the web app or see the configuration.

> **Warning**
>
> Be aware that the app can only be used in instances using the 2.39.1 DHIS2 API version onward.
> 
> ![](resources/images/capture-app-use-case-configure-api-no-access.png)
>


## Installation { #capture_app_use_case_configuration_webapp_installation }

A user can easily install the Use Case Configuration Web App by logging into the DHIS2 and going to **App Management**.

- Click on **App Hub**
- Go to *Use Case Configuration App*
- Click on *Install V1.X.X*

![](resources/images/capture-app-use-case-configure-app-hub-install.png)
![](resources/images/capture-app-use-case-configure-app-hub-install-webapp.png)


## Log in and first time setup { #capture_app_use_case_configuration_webapp_login }

After a user installs and launches the Use Case Configuration Web App for the first time, the web app will require saving the default values of the configuration. This will allow android devices connect to the instance.


![](resources/images/capture-app-use-case-configure-first-setup.png){width=50%}

> **Warning**
>
> Only users with 'ALL' authority are able to *save or update* the configuration, users with no authority will not have view access to the app even if it is already created.
>


![](resources/images/capture-app-use-case-configure-no-authorities.png)


## Configure Program { #capture_app_use_case_configuraton_webapp_configure }

It allows admin users to configure programs to use the stock management system use case.

![](resources/images/capture-app-use-case-configure.png)

### Create configuration { #create-configuration } 

The DHIS2 Use Case Configuration App assigns the use case, like Real Time Stock Management, to any Tracker Program.
When the user opens the application in the Android Capture app the DHIS2 RTS is started instead of a conventional Tracker Program.

To create a **Program Configuration**:

1. Select a program type, a program, and add a description.
2. Click on *Next* button or *Details* tab.

![](resources/images/capture-app-use-case-configure-program-general.png)

3. Select the tracked entity attributes and data elements that represent Item code, Item Description and Stock on Hand. You have then to click on *Next* button or *Transactions* Tab.

![](resources/images/capture-app-use-case-configure-program-details.png)

4. Choose the data element/tracked entity attribute that will represent the Distributed Transaction.
5. Choose the data element/tracked entity attribute that will represent the Corrected Transaction.
6. Choose the data element/tracked entity attribute that will represent the Discarded Transaction.
7. Click on the "Done" button.

![](resources/images/capture-app-use-case-configure-program-transactions.png)


> **Note:**
>
> When all the valid programs are already configured, the Add Program button will be disabled.
>
> ![](resources/images/capture-app-use-case-configure-unavailable-program.png)
>
> The compatible and supported programs for a RTSM use case are:
> - Tracker program with one repeatable program stage.
> - Program rules to provide the real time stock on hand update.
> - Data elements and Tracker Entity Attributes assign to program and program stage.
>

The following is a comprehensive list of the main metadata configurations and settings for the Tracker
Program on which the customized DHIS2-RTS is based on.

| CATEGORY                 | SYSTEM DEFAULT SETTINGS                                                                                                                                                                                                                                                                                                                                                                                               |
|--------------------------|-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
| الوحدة التنظيمية        | According to national protocols and policies and/or existing DHIS2 configuration                                                                                                                                                                                                                                                                                                                                      |
| عنصر البيانات             | Name: <br/>- "Deliver to": Text / Option set = "Deliver to" <br/>- "Previous stock balance": Positive integer <br/>- "Stock correction": Number <br/>- "Stock count": Positive integer <br/>- "Stock discard": Positive integer <br/>- "Stock distribution": Positive integer <br/>- "Stock on hand": Positive integer <br/>- "Stock received": Positive integer <br/>Domain type: Tracker <br/>Value type: see above |
| Option set               | Name: "Deliver to" <br/>Value type: Text                                                                                                                                                                                                                                                                                                                                                                              |
| Tracked entity attribute | Name: <br/>- "Item barcode" <br/>- "Item code" <br/>- "Item description" <br/>"Value type": Text <br/>"Aggregation type": None                                                                                                                                                                                                                                                                                        |
| Tracked entity type      | Name: Item <br/>"Feature type": None                                                                                                                                                                                                                                                                                                                                                                                  |
| Program                  | Type: Tracker <br/>Tracked entity type: Item <br/>Program tracked entity attributes: <br/>- Item barcode <br/>- Item code <br/>- Item description <br/>Program stages: <br/>Name: "Stock on Hand" <br/>Scheduled days from start: 0 <br/>Repeatable                                                                                                                                                                   |
| Program rule             | *Name*: "Assign Stock correction" <br/>Condition: "d2:hasValue( #{Stock count} )” <br/>Action: "Assign value"  <br/>*Name*: "Assign Stock on Hand" <br/>Condition: "true" <br/>Action: "Assign value"  <br/>*Name*: "Assign previous stock balance" <br/>Condition: "d2:hasValue( #{Initial stock on hand - Previous event} )" <br/>Action: "Assign value"                                                            |

More information related to DHIS2 for logistic in the [user guide](https://drive.google.com/file/d/1x6HoG75zMPCA823mdY87rb9hEJqxUz22/view).

### Edit configuration { #edit-configuration } 

To edit a **Program Configuration**:

1. Search for the program configuration to edit.
2. Click the "Edit" button next to the program's name.
3. A pop-up with only the description field in the General tab will be available, the other fields will be disabled. If wanted, change the visualization title.
4. All fields in Details and Transactions tabs will be available to edit if needed.
5. Click on the "Done" button.

![](resources/images/capture-app-use-case-configure-edit-general.png)

![](resources/images/capture-app-use-case-configure-edit-details.png)


### Delete configuration { #delete-configuration } 

To remove a **Program Configuration**:

1. Search for the program configuration to delete.
2. Click on "Delete".
3. Click on the "Delete" button.

![](resources/images/capture-app-use-case-configure-delete-program.png)


## Enter and save configuration parameters { #capture_app_use_case_configuration_webapp_enter_and_save }

### Datastore { #capture_app_use_case_configuration_webapp_datastore }

Internally all program configurations are stored in [Datastore](https://docs.dhis2.org/en/develop/using-the-api/dhis-core-version-240/data-store.html) in JSON format.

Datastore structure:

| Item      | Description                                 | Data type |
|-----------|---------------------------------------------|-----------|
| Namespace | Namespace for organization of entries       | String    |
| Key       | Key for identification of values            | String    |
| Value     | Value holding the information for the entry | JSON      |


### Save configuration parameters { #capture_app_use_case_configuration_webapp_save_config }

At the footer of the configuration section, admin users can find a *Save* button.

![](resources/images/capture-app-use-case-configure-save-button.png)

Only when an admin user clicks on this button, all changes made are saved on the Datastore. These changes will apply to the Android Capture Apps when they synchronize their configuration.


## Uninstall the app { #uninstall-the-app } 

In case of needing to uninstall the Use Case Configuration App it is recommended to also delete all the data from the datastore namespace.

#### Delete data { #delete-data } 

- Click on *Erase all settings*
- A modal will pop up, click on *Erase*

![](resources/images/capture-app-use-case-configure-unistall-delete-namespace.png)

![](resources/images/capture-app-use-case-configure-unistall-delete-namespace-modal.png)

#### Uninstall app { #uninstall-app } 

- Go to **App Management**
- Click on **Custom Apps**
- Go to *Use Case Configuration*
- Click on *Uninstall V1.X.X*

![](resources/images/capture-app-use-case-configure-unistall-custom-app.png)

![](resources/images/capture-app-use-case-configure-unistall-use-case.png)

> **Warning**
>
> This is a critical action, be aware that by doing this, all previous configurations will be permanently deleted.   



# APK Distribution Web App { #capture_app_apk_distribution_webapp }
## Overview { #capture_app_apk_distribution_webapp_overview }

This section focuses on the [APK Distribution Web App](https://apps.dhis2.org/app/dff273fc-909e-48af-b151-c4d7e9c8a12c) implementation.

The [APK Distribution Web App](https://apps.dhis2.org/app/dff273fc-909e-48af-b151-c4d7e9c8a12c) enables implementation administrators to manage and control the version of the Android app, making it easier to manage app updates and ensure compatibility with the DHIS2 system. 

Admins will be able to upload the desired version and users will get a prompt message to update when they are not in the last updated version.

Please note that in this version of the Web App, only users with "ALL" authority are able to define the Android app versions. Other users having access to the web app can see the version history list and download the latest version, but cannot edit them.

## Installation { #capture_app_apk_distribution_webapp_installation }

A user can easily install the Use Case Configuration Web App by logging into the DHIS2 and going to **App Management**.

- Click on **App Hub**
- Go to *APK Distribution App*
- Click on *Install V1.X.X*

![](resources/images/capture-app-apk-distribution-app-hub-install.png)
![](resources/images/capture-app-apk-distribution-app-hub-install-webapp.png)


## Log in and first time setup { #capture_app_apk_distribution_webapp_webapp_login }

After a user installs and launches the APK Distribution Web App for the first time, the web app will require saving the default values of the configuration. This will allow android devices connect to the instance.


![](resources/images/capture-app-apk-distribution-first-setup.png){width=50%}

> **Warning**
>
> Only users with 'ALL' authority are able to *upload or delete* APK versions, but any user will have view access once it's created.
>


![](resources/images/capture-app-apk-distribution-no-authorities.png){width=50%}

## APK Versions { #capture_app_apk_distribution_webapp_versions }

The APK Distribution Web App allows the admin users to update or remove versions of the Android app.

![](resources/images/capture-app-apk-distribution.png)

### Upload version { #upload-version } 

Follow the steps below to upload an **Android app version**:

1. Click on *Upload new version* button.
2. Assign a version number.
3. Choose the minimum and/or recommend Android OS version.
4. Add a URL that contains the APK of the Android app.
5. Click on the "Create app version" button.


![](resources/images/capture-app-apk-distribution-upload.png)


> **Note:**
>
> App versions must follow semantic versioning. Read more about [semantic versions](https://docs.npmjs.com/about-semantic-versioning). 
>
> When uploading a new apk, make sure that the app version is higher than the current/latest version.
> 
> ![](resources/images/capture-app-apk-distribution-alert-version-higher.png)
> 
> To choose the minimum or recommended Android OS version for the app version, it is suggested to review the [Mobile Device Specification documentation](https://docs.dhis2.org/en/implement/android-implementation/mobile-device-specifications.html).
>


### Delete version { #delete-version } 

To remove an **Android App version**:

1. Search for the Android app version to delete.
2. Click on "Delete".
3. Click on the "Delete" button.

![](resources/images/capture-app-apk-distribution-upload-delete.png)


### Using mobile device { #using-mobile-device } 

This Web App can also be manipulated from a mobile device. To use it, open DHIS2 in the browser from a mobile or tablet device.

The mobile version allows the administrator user to **upload** and **download** app versions.

![](resources/images/capture-app-apk-distribution-upload-mobile.png)


When downloading a version, the APK will be stored in the device.

![](resources/images/capture-app-apk-distribution-version-list-mobile.png)


## Uninstall the app { #uninstall-the-app } 

In case of needing to uninstall the APK Distribution App it is recommended to also delete all the data from the datastore namespace.

#### Delete data { #delete-data } 

- Click on *Erase settings*
- A modal will pop up, click on *Erase*

![](resources/images/capture-app-apk-distribution-unistall-delete-namespace.png)

![](resources/images/capture-app-apk-distribution-unistall-delete-namespace-modal.png)

#### Uninstall app { #uninstall-app } 

- Go to **App Management**
- Click on **Custom Apps**
- Go to *APK Distribution*
- Click on *Uninstall V1.X.X*

![](resources/images/capture-app-apk-distribution-unistall-custom-app.png)

![](resources/images/capture-app-apk-distribution-unistall-apk.png)

> **Warning**
>
> This is a critical action, be aware that by doing this, all previous configurations will be permanently deleted.   
